{"version":3,"file":"index.da44a904.js","sources":["../../vite/modulepreload-polyfill","../../src/localeSettings.ts","../../src/Globals.ts","../../src/fileSystemConfig.ts","../../src/store.ts","../../vite/preload-helper","../../src/router.ts","../../src/components/LoginPanel.vue","../../src/components/LoginPanel.vue?vue&type=template&lang.js","../../src/assets/images/vsp-logo-left.png","../../src/App.vue","../../src/App.vue?vue&type=template&lang.js","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","// locale: we only support EN and DE\nconst locale = localStorage.getItem('locale')\n  ? '' + localStorage.getItem('locale')\n  : // @ts-ignore\n  (navigator.language || navigator.userLanguage).startsWith('de')\n  ? 'de'\n  : 'en'\n\nexport default locale\n","export const MAP_STYLES_ONLINE = {\n  light: 'mapbox://styles/mapbox/light-v10',\n  dark: 'mapbox://styles/vsp-tu-berlin/ckek59op0011219pbwfar1rex',\n}\n\nexport const MAP_STYLES_OFFLINE = {\n  // NO NETWoRK:\n  light: { version: 8, layers: [], sources: {} },\n  dark: { version: 8, layers: [], sources: {} },\n}\n\nexport const MAPBOX_TOKEN =\n  'pk.eyJ1Ijoic2ZjdGEiLCJhIjoiY2ozdXBhNm1mMDFkaTJ3dGRmZHFqanRuOCJ9.KDmACTJBGNA6l0CyPi1Luw'\n\nexport enum Status {\n  INFO,\n  WARNING,\n  ERROR,\n}\n\nexport enum DataType {\n  NUMBER,\n  STRING,\n  BOOLEAN,\n  DATE,\n  LOOKUP,\n}\n\nexport interface DataTable {\n  [columnName: string]: DataTableColumn\n}\n\n/**\n * DataTableColumn represents one column of a loaded dataset. Numerical data will always be\n * stored as a Float32Array, while other data such as strings will be stored as regular\n * arrays.\n *\n * @property type - is one of the DataType enumeration, and is used to decode factors\n *\n * @property factors - is only populated during construction if the actual values are constrained\n * to a small set of choices, in which case the index of the factor is stored in the row data instead\n * of the value itself.\n */\nexport interface DataTableColumn {\n  values: Float32Array | any[]\n  name: string\n  type: DataType\n  max?: number\n  // factors?: any[] // only present if elements are stored as offset to the factor value here, instead of as the real value\n}\n\n/** LookupDataset bridges CSV data and link data with the join column containing array offsets */\nexport interface LookupDataset {\n  datasetKey: string\n  dataTable: DataTable\n  activeColumn: string\n  csvRowFromLinkRow: number[]\n}\n\nexport interface CSV {\n  header: string[]\n  headerMax: number[]\n  rows: Float32Array[]\n  activeColumn: number\n}\n\nexport type VizLayerConfiguration = {\n  datasets: { [id: string]: string }\n  display: { color: any; width: any; fill: any }\n}\n\nexport type YamlConfigs = {\n  dashboards: { [filename: string]: string }\n  topsheets: { [filename: string]: string }\n  vizes: { [filename: string]: string }\n  configs: { [filename: string]: string }\n}\n\nexport const UI_FONT =\n  \"'Titillium Web', 'Roboto', 'Open Sans', Avenir, Arial, Helvetica, sans-serif\"\n\nexport interface FileSystem {\n  getDirectory(path: string): Promise<DirectoryEntry>\n  getFileText(path: string): Promise<string>\n  getFileJson(path: string): Promise<any>\n  getFileBlob(path: string): Promise<Blob | null>\n  cleanURL(path: string): string\n}\n\nexport interface FileSystemConfig {\n  name: string\n  name_de?: string\n  description: string\n  description_de?: string\n  baseURL: string\n  slug: string\n  thumbnail?: string\n  needPassword?: boolean\n  skipList?: string[]\n  dashboardFolder?: string\n  hidden?: boolean\n  handle?: FileSystemAPIHandle\n}\n\nexport interface VisualizationPlugin {\n  component: Vue.VueConstructor\n  kebabName: string\n  prettyName: string\n  description?: string\n  filePatterns: string[]\n}\n\nexport interface DirectoryEntry {\n  files: string[]\n  dirs: string[]\n  handles: { [name: string]: FileSystemAPIHandle }\n}\n\nexport enum ColorScheme {\n  LightMode = 'light',\n  DarkMode = 'dark',\n}\n\nexport interface BreadCrumb {\n  label: string\n  url?: string\n}\n\nexport interface Warnings {\n  msg: string\n  desc?: string\n}\n\nexport interface ColorSet {\n  text: string\n  background: string\n  links: string\n  susceptible: string\n  infectedButNotContagious: string\n  contagious: string\n  symptomatic: string\n  seriouslyIll: string\n  critical: string\n  recovered: string\n}\n\nexport enum Health {\n  Susceptible = 'susceptible',\n  InfectedButNotContagious = 'infectedButNotContagious',\n  Contagious = 'contagious',\n}\n\nexport interface Agent {\n  id: string\n  time: number[]\n  path: [number, number][]\n  dtime: number[]\n  d: number[]\n}\n\nexport interface AgentProgessingThroughDisease {\n  id: string\n  x: number\n  y: number\n  infectedButNotContagious: number\n  contagious: number\n  showingSymptoms: number\n  seriouslySick: number\n  critical: number\n  recovered: number\n}\n\nexport interface Infection {\n  id: string\n  dtime: number[]\n  d: number[]\n}\n\nexport interface Trip {\n  id: number\n  timestamps: number[]\n  path?: number[]\n  status?: string\n}\n\nexport interface RunYaml {\n  city: string\n  info: string\n  readme: string\n  zip: string\n  timestamp: string\n  // these are for old version\n  offset?: number[]\n  startDate?: string\n  endDate?: string\n  // these are for new version\n  defaultStartDate?: string\n  startDates?: string[]\n  // these are for everything\n  optionGroups: {\n    day?: number\n    heading: string\n    subheading?: string\n    measures: {\n      measure: string\n      title: string\n      order?: string\n      options?: number[]\n    }[]\n  }[]\n}\n\nexport interface FileSystemAPIHandle {\n  name: string\n  values: any // returns { kind: string; name: string; getFile: any }[]\n  getFile: any\n  requestPermission: any\n}\n\nexport const LIGHT_MODE: ColorSet = {\n  text: '#000',\n  background: '#ccccc4',\n  links: '#ffffff',\n  susceptible: '#999900',\n  infectedButNotContagious: '#0077ff',\n  contagious: '#bb0044',\n  symptomatic: '#ff5533',\n  seriouslyIll: '#7733ee',\n  critical: '#000',\n  recovered: '#116622',\n}\n\nexport const DARK_MODE: ColorSet = {\n  text: '#fff',\n  background: '#181518',\n  links: '#445577',\n  susceptible: '#bbbb44',\n  infectedButNotContagious: '#00dddd',\n  contagious: '#ff2299',\n  symptomatic: '#ff5533',\n  seriouslyIll: '#7733ee',\n  critical: '#fff',\n  recovered: '#116622',\n}\n\nexport enum LegendItemType {\n  line,\n  box,\n}\n\nexport interface LegendItem {\n  type: LegendItemType\n  color: number[]\n  value: any\n  label?: string\n}\n\n/**\n * This holds handles to React view component callbacks, so we can\n * notify them when the global map view state changes.\n *\n * This is needed because Deck.gl components can either handle their own\n * state internally, or use React to manage state externally.\n * Since we are a Vue app, this one weird trick allows us to update the\n * map state from the outside without rebuilding the whole component,\n * which would cause huge performance problems.\n *\n * NOTE --> Your Vue app needs to manage these handles and REMOVE them\n * in beforeDestroy() or else you will have some major memory leaks!\n * You have been warned.\n */\nexport const REACT_VIEW_HANDLES: { [id: number]: any } = {}\n","import { get, set, clear } from 'idb-keyval'\nimport { FileSystemConfig, FileSystemAPIHandle } from '@/Globals'\nimport globalStore from '@/store'\n\n// The URL contains the websiteLiveHost, calculated at runtime\nconst loc = window.location\nconst webLiveHostname = loc.hostname\nconst websiteLiveHost = `${loc.protocol}//${webLiveHostname}`\n\nexport function addLocalFilesystem(handle: FileSystemAPIHandle, key: string | null) {\n  const slug = key || 'fs' + (1 + Object.keys(globalStore.state.localFileHandles).length)\n\n  const system: FileSystemConfig = {\n    name: handle.name,\n    slug: slug,\n    description: 'Local folder',\n    handle: handle,\n    baseURL: '',\n  }\n\n  fileSystems.unshift(system)\n\n  // commit to app state\n  globalStore.commit('addLocalFileSystem', { key: system.slug, handle: handle })\n  // console.log(globalStore.state.localFileHandles)\n\n  // write it out to indexed-db so we have it on next startup\n  console.log('WRITING ALL FILE HANDLES')\n  set('fs', globalStore.state.localFileHandles)\n  return system.slug\n}\n\nconst fileSystems: FileSystemConfig[] = [\n  {\n    name: webLiveHostname + ' live folders',\n    slug: 'live',\n    description: 'Files served using \"simwrapper here\"',\n    baseURL: websiteLiveHost + ':9039/_f_', // e.g. 'http://localhost:9039/_f_',\n    hidden: true,\n  },\n  {\n    name: 'Localhost',\n    slug: 'local',\n    description: 'Files on this computer, shared with \"simwrapper serve\"',\n    baseURL: 'http://localhost:8000',\n    thumbnail: '/simwrapper/images/thumb-localfiles.jpg',\n  },\n  {\n    name: 'SFCTA Prospector',\n    slug: 'champ',\n    description: 'Shared CHAMP model runs',\n    baseURL: 'http://prospector/champ_runs',\n  },\n  {\n    name: 'Sample Data',\n    slug: 'samples',\n    description: 'Some test data for SFCTA',\n    baseURL: 'https://svn.vsp.tu-berlin.de/repos/public-svn/shared/billy/simwrapper/sample-data',\n    thumbnail: '/simwrapper/images/thumb-localfiles.jpg',\n  },\n]\n\nfor (let port = 8000; port < 8500; port++) {\n  fileSystems.push({\n    name: 'Localhost ' + port,\n    slug: `${port}`,\n    description: 'Localhost ' + port,\n    description_de: 'Localhost ' + port,\n    baseURL: 'http://localhost:' + port,\n    hidden: true,\n  })\n}\n\nfor (let port = 9039; port < 9100; port++) {\n  fileSystems.push({\n    name: webLiveHostname + port,\n    slug: `${port}`,\n    description: webLiveHostname + port,\n    description_de: webLiveHostname + port,\n    baseURL: websiteLiveHost + `:${port}/_f_`, // e.g. 'http://localhost:9039/_f_',\n    hidden: true,\n  })\n}\n\nexport default fileSystems\n","import Vue from 'vue'\nimport Vuex, { Store } from 'vuex'\n\nVue.use(Vuex)\n\nimport {\n  BreadCrumb,\n  Warnings,\n  ColorScheme,\n  FileSystemConfig,\n  Status,\n  VisualizationPlugin,\n} from '@/Globals'\nimport fileSystems from '@/fileSystemConfig'\nimport { MAP_STYLES_ONLINE, MAP_STYLES_OFFLINE } from '@/Globals'\n\n// ----------------------------------------\n\nconst initialViewState = () => ({\n  // start with western europe for now\n  initial: true,\n  pitch: 0,\n  bearing: 0,\n  maxZoom: 22,\n  longitude: -122.4,\n  latitude: 37.78,\n  zoom: 10,\n})\n\nexport default new Vuex.Store({\n  state: {\n    app: 'SimWrapper',\n    debug: false,\n    authAttempts: 0,\n    breadcrumbs: [] as BreadCrumb[],\n    credentials: { fake: 'fake' } as { [url: string]: string },\n    dashboardWidth: '',\n    isFullScreen: false,\n    isFullWidth: false,\n    isShowingLeftBar: false,\n    isDarkMode: false,\n    mapStyles: MAP_STYLES_ONLINE,\n    needLoginForUrl: '',\n    statusErrors: [] as Warnings[],\n    statusWarnings: [] as Warnings[],\n    statusMessage: 'Loading',\n    svnProjects: fileSystems,\n    visualizationTypes: new Map() as Map<string, VisualizationPlugin>,\n    colorScheme: ColorScheme.LightMode,\n    locale: 'en',\n    localFileHandles: [] as any[],\n    runFolders: {} as { [root: string]: any[] },\n    runFolderCount: 0,\n    resizeEvents: 0,\n    viewState: initialViewState() as {\n      longitude: number\n      latitude: number\n      bearing: number\n      pitch: number\n      zoom: number\n      center?: number[]\n      jump?: boolean\n      initial?: boolean\n    },\n  },\n\n  mutations: {\n    updateRunFolders(\n      state,\n      value: { number: number; folders: { [root: string]: { path: string }[] } }\n    ) {\n      state.runFolderCount = value.number\n      state.runFolders = value.folders\n    },\n    requestLogin(state, value: string) {\n      state.needLoginForUrl = value\n    },\n    registerPlugin(state, value: VisualizationPlugin) {\n      // console.log('PLUGIN:', value.kebabName)\n      state.visualizationTypes.set(value.kebabName, value)\n    },\n    setBreadCrumbs(state, value: BreadCrumb[]) {\n      state.breadcrumbs = value\n    },\n    setCredentials(state, value: { url: string; username: string; pw: string }) {\n      const creds = btoa(`${value.username}:${value.pw}`)\n      state.credentials[value.url] = creds\n      state.authAttempts++\n    },\n    setFullScreen(state, value: boolean) {\n      state.isFullScreen = value\n    },\n    setMapStyles(state, value: { light: string; dark: string }) {\n      state.mapStyles = value\n    },\n    setMapCamera(\n      state,\n      value: {\n        longitude: number\n        latitude: number\n        bearing: number\n        pitch: number\n        zoom: number\n        center?: number[]\n        jump?: boolean\n      }\n    ) {\n      /** Only jump camera if there is no view yet to avoid jarring */\n      if (!value.jump) state.viewState = value\n      else if (state.viewState.initial) state.viewState = value\n    },\n    error(state, value: string) {\n      if (\n        !state.statusErrors.length ||\n        state.statusErrors[state.statusErrors.length - 1].msg !== value\n      ) {\n        state.statusErrors.push({ msg: value, desc: '' })\n        state.isShowingLeftBar = true\n      }\n    },\n    setStatus(state, value: { type: Status; msg: string; desc?: string }) {\n      if (!value.desc?.length) {\n        value.desc = ''\n      }\n      const warningObj = {\n        msg: value.msg,\n        desc: value.desc,\n      }\n      if (value.type === Status.INFO) {\n        state.statusMessage = value.msg\n      } else if (value.type === Status.WARNING) {\n        if (\n          // don't repeat yourself\n          !state.statusWarnings.length ||\n          state.statusWarnings[state.statusWarnings.length - 1].msg !== value.msg\n        ) {\n          state.statusWarnings.push(warningObj)\n        }\n      } else {\n        if (\n          // don't repeat yourself\n          !state.statusErrors.length ||\n          state.statusErrors[state.statusErrors.length - 1].msg !== value.msg\n        ) {\n          state.statusErrors.push(warningObj)\n          state.isShowingLeftBar = true\n        }\n      }\n    },\n    clearError(state, value: number) {\n      if (state.statusErrors.length >= value) {\n        state.statusErrors.splice(value, 1) // remove one element\n      }\n    },\n    clearAllErrors(state) {\n      state.statusErrors = []\n      state.statusWarnings = []\n    },\n    resize(state) {\n      state.resizeEvents += 1\n    },\n    rotateColors(state) {\n      state.colorScheme =\n        state.colorScheme === ColorScheme.DarkMode ? ColorScheme.LightMode : ColorScheme.DarkMode\n\n      console.log('NEW COLORS:', state.colorScheme)\n\n      state.isDarkMode = state.colorScheme === ColorScheme.DarkMode\n\n      localStorage.setItem('colorscheme', state.colorScheme)\n      document.body.style.backgroundColor =\n        state.colorScheme === ColorScheme.LightMode ? '#edebe4' : '#2d3133'\n    },\n    setLocale(state, value: string) {\n      state.locale = value.toLocaleLowerCase()\n      localStorage.setItem('locale', state.locale)\n    },\n    addLocalFileSystem(state, value: any) {\n      state.localFileHandles.unshift(value)\n    },\n    setLocalFileSystem(state, value: any) {\n      state.localFileHandles = value\n    },\n    setShowLeftBar(state, value: boolean) {\n      state.isShowingLeftBar = value\n    },\n    toggleShowLeftBar(state) {\n      state.isShowingLeftBar = !state.isShowingLeftBar\n    },\n    setDashboardWidth(state, value: string) {\n      state.dashboardWidth = value\n    },\n    setFullWidth(state, value: boolean) {\n      state.isFullWidth = value\n    },\n    toggleFullWidth(state) {\n      state.isFullWidth = !state.isFullWidth\n    },\n  },\n  actions: {},\n  modules: {},\n  getters: {\n    mapStyle: state => {\n      return state.isDarkMode ? state.mapStyles.dark : state.mapStyles.light\n    },\n  },\n})\n","const scriptRel = 'modulepreload';const seen = {};const base = '/simwrapper/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import Vue from 'vue'\nimport VueRouter, { Route, RouteConfig } from 'vue-router'\n\nimport globalStore from '@/store'\n\nVue.use(VueRouter)\n\nconst BASE = import.meta.env.BASE_URL\n\nconst routes = [\n  {\n    path: BASE + 'gist/:id',\n    component: () => import('@/views/GistView.vue'),\n    props: (route: Route) => ({\n      id: route.params.id,\n    }),\n  },\n  {\n    path: BASE + '*',\n    component: () => import('@/views/ScreenSplitter.vue'),\n  },\n  {\n    // catch-all back to home page\n    path: '*',\n    redirect: BASE,\n  },\n]\n\n// // individual viz plugins all go into /v/* subpaths\nfunction vizPlugins(): any[] {\n  const plugins = []\n  for (const plugin of globalStore.state.visualizationTypes.values()) {\n    plugins.push({\n      path: BASE + 'v/' + plugin.kebabName + '/:slug/*',\n      name: plugin.kebabName,\n      component: plugin.component,\n      props: (route: Route) => {\n        const match = route.params.pathMatch\n        const subfolder = match.substring(0, match.lastIndexOf('/'))\n        const yamlConfig = match.substring(match.lastIndexOf('/') + 1)\n        return {\n          root: route.params.slug,\n          subfolder,\n          yamlConfig,\n          thumbnail: false,\n        }\n      },\n    })\n  }\n\n  return plugins\n}\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: '/',\n  routes,\n  // routes: vizPlugins().concat(routes),\n  // native-like back/forward and top-of-page routing\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition\n    } else {\n      return { x: 0, y: 0 }\n    }\n  },\n})\n\n// router.beforeEach((to, from, next) => {\n//   console.log(to.path)\n//   next()\n// })\n\nexport default router\n","<template lang=\"pug\">\n  .sidebar-page\n    section.sidebar-layout\n      b-sidebar(\n        type=\"is-light\"\n        :fullheight=\"fullheight\"\n        :fullwidth=\"fullwidth\"\n        :overlay=\"overlay\"\n        :right=\"right\"\n        :open.sync=\"open\")\n\n        .all-stuff\n          .block\n            a(href=\"/\")\n              img.vsp-logo(\n                src=\"@/assets/images/vsp-logo-left.png\"\n                alt=\"TU Berlin VSP Department\")\n\n          b-menu-list(label=\"Login Required\")\n\n          p.my-label {{ whichLogin }}: access to this site requires a login.\n\n          b-menu-list(label=\"Username\")\n          b-input(v-model=\"username\" placeholder=\"VSP username\" maxlength=30)\n\n          b-menu-list(label=\"Password\")\n          b-input(type=\"password\"\n            v-model=\"password\"\n            password-reveal)\n\n          b-button.my-space.is-primary(\n            @click=\"clickedLogin\"\n            :disabled=\"!username || !password\") Login\n\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component, Watch, Prop } from 'vue-property-decorator'\nimport globalStore from '@/store'\n\n@Component({ components: {}, props: {} })\nexport default class VueComponent extends Vue {\n  private globalState = globalStore.state\n\n  private username = ''\n  private password = ''\n\n  private expandOnHover = true\n  private fullheight = true\n  private fullwidth = false\n  private mobile = 'reduce'\n  private reduce = false\n  private overlay = true\n  private right = false\n  private theme = 'is-light'\n  private projects = this.globalState.svnProjects\n  private subfolders = [{ name: 'hello' }]\n  private open = false\n\n  @Watch('globalState.needLoginForUrl') showLoginPanel() {\n    this.open = this.globalState.needLoginForUrl !== ''\n  }\n\n  @Watch('open') panelMayBeClosing() {\n    // clear the last login attempt on panel close\n    if (!this.open) globalStore.commit('requestLogin', '')\n  }\n\n  private get whichLogin() {\n    try {\n      const project = this.globalState.svnProjects.filter(\n        (p: any) => p.url === this.globalState.needLoginForUrl\n      )[0]\n      return project.name\n    } catch (e) {\n      // weird\n    }\n    return 'this site'\n  }\n\n  private clickedLogin() {\n    // username/pw must never be stored in cookies or local storage.\n    // Just in memory.\n    globalStore.commit('setCredentials', {\n      url: this.globalState.needLoginForUrl,\n      username: this.username,\n      pw: this.password,\n    })\n\n    this.globalState.needLoginForUrl = ''\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n\n<style lang=\"scss\">\n@import '@/styles.scss';\n\n.boop {\n  padding-top: 1rem;\n}\n\n.my-space {\n  width: 100%;\n  margin-top: 3rem;\n}\n\n.my-label {\n  font-size: 0.9rem;\n  color: #666;\n  padding-bottom: 2rem;\n}\n\n.sidebar-content {\n  height: 100%;\n}\n\n.sidebar-page {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n  .sidebar-layout {\n    display: flex;\n    flex-direction: row;\n    min-height: 100%;\n  }\n}\n@media screen and (max-width: 1023px) {\n  .b-sidebar {\n    .sidebar-content {\n      &.is-mini-mobile {\n        &:not(.is-mini-expand),\n        &.is-mini-expand:not(:hover) {\n          .menu-list {\n            li {\n              a {\n                span:nth-child(2) {\n                  display: none;\n                }\n              }\n              ul {\n                padding-left: 0;\n                li {\n                  a {\n                    display: inline-block;\n                  }\n                }\n              }\n            }\n          }\n          .menu-label:not(:last-child) {\n            margin-bottom: 0;\n          }\n        }\n      }\n    }\n  }\n}\n@media screen and (min-width: 1024px) {\n  .b-sidebar {\n    .sidebar-content {\n      &.is-mini {\n        &:not(.is-mini-expand),\n        &.is-mini-expand:not(:hover) {\n          .menu-list {\n            li {\n              a {\n                span:nth-child(2) {\n                  display: none;\n                }\n              }\n              ul {\n                padding-left: 0;\n                li {\n                  a {\n                    display: inline-block;\n                  }\n                }\n              }\n            }\n          }\n          .menu-label:not(:last-child) {\n            margin-bottom: 0;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n","\n.sidebar-page\n  section.sidebar-layout\n    b-sidebar(\n      type=\"is-light\"\n      :fullheight=\"fullheight\"\n      :fullwidth=\"fullwidth\"\n      :overlay=\"overlay\"\n      :right=\"right\"\n      :open.sync=\"open\")\n\n      .all-stuff\n        .block\n          a(href=\"/\")\n            img.vsp-logo(\n              src=\"@/assets/images/vsp-logo-left.png\"\n              alt=\"TU Berlin VSP Department\")\n\n        b-menu-list(label=\"Login Required\")\n\n        p.my-label {{ whichLogin }}: access to this site requires a login.\n\n        b-menu-list(label=\"Username\")\n        b-input(v-model=\"username\" placeholder=\"VSP username\" maxlength=30)\n\n        b-menu-list(label=\"Password\")\n        b-input(type=\"password\"\n          v-model=\"password\"\n          password-reveal)\n\n        b-button.my-space.is-primary(\n          @click=\"clickedLogin\"\n          :disabled=\"!username || !password\") Login\n\n","export default \"__VITE_ASSET__88042ade__\"","<template lang=\"pug\">\n#main-app(:class=\"{'full-page-app' : true, 'dark-mode': isDarkMode}\" )\n\n  .center-area\n    login-panel.login-panel\n    router-view.main-content\n    p(style=\"text-justify: center; margin: auto auto; font-size: 2rem;\"): i • S i m W r a p p e r •\n\n  //.message-zone(v-if=\"state.statusErrors.length\")\n    .message-error(v-for=\"err,i in state.statusErrors\")\n      p: i.fa.fa-icon.fa-exclamation-triangle(style=\"color: orange;\")\n      p(v-html=\"err\")\n    button.button.is-small(@click=\"removeAllErrors()\") CLEAR\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      light: 'light',\n      dark: 'dark',\n      share: 'share',\n    },\n    de: {\n      light: 'hell',\n      dark: 'dark',\n      share: 'teilen',\n    },\n  },\n}\nimport maplibregl from 'maplibre-gl'\nimport Buefy from 'buefy'\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator'\nimport { get, set, clear } from 'idb-keyval'\n\nimport globalStore from '@/store'\nimport fileSystems, { addLocalFilesystem } from '@/fileSystemConfig'\n\nimport { ColorScheme, MAPBOX_TOKEN, MAP_STYLES_OFFLINE } from '@/Globals'\nimport LoginPanel from '@/components/LoginPanel.vue'\n\n// MAPBOX TOKEN\n// this is a required workaround to get the mapbox token assigned in TypeScript\n// see https://stackoverflow.com/questions/44332290/mapbox-gl-typing-wont-allow-accesstoken-assignment\nconst writableMapBox: any = maplibregl\nwritableMapBox.accessToken = MAPBOX_TOKEN\n\nlet doThisOnceForLocalFiles = true\n\n@Component({ i18n, components: { LoginPanel } })\nclass App extends Vue {\n  private state = globalStore.state\n\n  private async mounted() {\n    // theme\n    const theme = localStorage.getItem('colorscheme')\n      ? localStorage.getItem('colorscheme')\n      : (window.matchMedia && window.matchMedia('(prefers-color-scheme:dark)')).matches\n      ? ColorScheme.DarkMode\n      : ColorScheme.LightMode\n\n    if (theme === ColorScheme.DarkMode) this.$store.commit('rotateColors')\n    document.body.style.backgroundColor = theme === ColorScheme.LightMode ? '#edebe4' : '#2d3133'\n\n    this.toggleFullScreen(true)\n    this.setOnlineOrOfflineMode()\n\n    // local files\n    if (doThisOnceForLocalFiles) await this.setupLocalFiles()\n\n    document.addEventListener('keydown', this.toggleUIPanels)\n  }\n\n  private beforeDestroy() {\n    document.removeEventListener('keyup', this.toggleUIPanels)\n  }\n\n  private toggleUIPanels(event: any) {\n    // shift-alt-Q: left side QuickView panel\n    if (event.altKey && event.shiftKey && event.keyCode === 81) {\n      console.log('QUICKVIEW')\n      this.$store.commit('toggleShowLeftBar')\n      this.$store.commit('resize')\n    }\n    // shift-alt-W: wide screen mode\n    if (event.altKey && event.shiftKey && event.keyCode === 87) {\n      console.log('WIIIDE')\n      this.$store.commit('toggleFullWidth')\n      this.$store.commit('resize')\n    }\n    return\n  }\n\n  // ------ Find Chrome Local File System roots ----\n  private async setupLocalFiles() {\n    console.log(12341235125)\n    if (globalStore.state.localFileHandles.length) return\n\n    const lfsh = (await get('fs')) as { key: string; handle: any }[]\n    if (lfsh && lfsh.length) {\n      for (const entry of lfsh) {\n        addLocalFilesystem(entry.handle, entry.key)\n      }\n    }\n  }\n\n  /**\n   * Set Mapbox styles to be blank if we cannot reach the internet\n   */\n  private setOnlineOrOfflineMode() {\n    const url = 'https://raw.githubusercontent.com/simwrapper/simwrapper/master/package.json'\n    fetch(url)\n      .then(response => {\n        console.log('online!!')\n      })\n      .catch(error => {\n        console.log('offline!')\n        this.$store.commit('setMapStyles', MAP_STYLES_OFFLINE)\n      })\n  }\n\n  private get topNavLinks() {\n    // {name, description, need_password, svn, thumbnail, url }\n    // a '/' will be prepended\n    const home: any[] = [{ name: 'scout', url: '' }]\n    const topLinks = home.concat(this.state.svnProjects)\n\n    return topLinks\n  }\n\n  private removeAllErrors() {\n    this.$store.commit('clearAllErrors')\n  }\n\n  private toggleLocale() {\n    const newLocale = this.state.locale === 'en' ? 'de' : 'en'\n    this.$store.commit('setLocale', newLocale)\n    this.$root.$i18n.locale = newLocale\n  }\n\n  private toggleTheme() {\n    this.$store.commit('rotateColors')\n  }\n\n  private get isDarkMode() {\n    return this.state.colorScheme == ColorScheme.DarkMode\n  }\n\n  // @Watch('state.isFullScreen') toggleFullScreen(isFullPage: boolean) {\n  private toggleFullScreen(isFullPage: boolean) {\n    if (isFullPage) {\n      document.body.classList.add('full-screen-page')\n      document.documentElement.style.overflowY = 'auto'\n    } else {\n      document.body.classList.remove('full-screen-page')\n      document.documentElement.style.overflowY = null as any\n    }\n  }\n}\nexport default App\n</script>\n\n<style lang=\"scss\">\n@import '@/styles.scss';\n@import '~/buefy/dist/buefy.css';\n@import '~/maplibre-gl/dist/maplibre-gl.css';\n@import '~/vue-slider-component/theme/default.css';\n\nhtml {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nbody,\nhtml {\n  font-family: $mainFont;\n  margin: 0px 0px;\n  padding: 0px 0px;\n  height: 100%;\n  overscroll-behavior: contain;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: $fancyFont;\n}\n\nhtml {\n  overflow-y: auto;\n  color: var(--text);\n}\n\n:root {\n  font-size: 14px;\n}\n\ncanvas {\n  display: block;\n}\n\n.top-bar {\n  width: 100%;\n  padding: 0 3rem;\n  margin: 0 auto;\n  max-width: $sizeVessel;\n  transition: padding 0.2s ease-in-out, max-width 0.3s ease-in-out;\n  // box-shadow: 0px 6px 10px #00000048;\n  z-index: 5;\n}\n\n.top-bar.full-page-app {\n  padding: 0 1rem;\n  max-width: unset;\n}\n\n.breadcrumb-container {\n  background-color: #3e455c;\n  width: 100%;\n  padding: 0.25rem 0;\n}\n\n.breadcrumb {\n  font-size: 0.9rem;\n  padding: 0 3rem;\n  margin: 0 auto;\n  max-width: $sizeVessel;\n  transition: padding 0.2s ease-in-out;\n\n  ul {\n    max-width: $sizeVessel;\n    display: flex;\n    flex-direction: row;\n  }\n\n  a {\n    color: #ccc;\n    padding: 0 1rem;\n  }\n\n  a:hover {\n    cursor: pointer;\n    color: white;\n  }\n\n  a.no-breadcrumb-link {\n    cursor: default;\n    color: #ccc;\n  }\n}\n\n.top-link {\n  font-size: 0.9rem;\n  font-weight: bold;\n  margin-left: -0.75rem;\n  display: flex;\n  flex-direction: row;\n}\n\n.top-link p {\n  cursor: pointer;\n  padding: 1rem 0.75rem;\n}\n\n.selected p {\n  background-color: #3e455c;\n}\n\n.bury-me {\n  z-index: -5;\n}\n\nh2 {\n  font-size: 2.5rem;\n  font-weight: bold;\n}\n\nh3 {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n\n#main-app {\n  display: grid;\n  color: var(--text);\n  background-color: var(--bgCream);\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto 1fr;\n  margin: 0 0;\n  padding: 0 0;\n}\n\na {\n  color: var(--link);\n}\n\n.splash-readme a {\n  color: #2f71ff;\n}\n\na:hover {\n  color: var(--linkHover);\n}\n\n.full-page-app {\n  height: 100%;\n}\n\n.login-panel {\n  z-index: 500;\n}\n\n.app-nav {\n  padding: 0 1rem;\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n  z-index: 5;\n  display: flex;\n  flex-direction: column;\n  // border-bottom: 1px solid var(--bgCream3);\n}\n\n.app-nav a.router-link-exact-active {\n  font-weight: bold;\n  // color: #00ffff;\n}\n\n.main-content {\n  flex: 1;\n}\n\n.space {\n  margin: 0 1rem;\n}\n\n.vue-slider-rail {\n  background-color: green;\n}\n\n.center-area {\n  grid-column: 1 / 2;\n  grid-row: 2 / 4;\n  z-index: 0;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  overflow: hidden;\n}\n\n.nav-sidebar {\n  z-index: 0;\n}\n\n.footer {\n  margin-top: 2rem;\n  grid-column: 1 / 2;\n  grid-row: 3 / 4;\n  text-align: center;\n  font-size: 0.8rem;\n  padding: 5rem 1rem;\n}\n\n#main-app .footer {\n  color: var(--text);\n  background-color: $steelGray; // #18181b;\n  text-align: center;\n  padding: 2rem 0.5rem 3rem 0.5rem;\n}\n\n.footer a {\n  color: $matsimBlue;\n}\n\n.footer img {\n  margin: 1rem auto;\n  padding: 0 1rem;\n}\n\n.footer p {\n  color: #eee;\n}\n\n.medium-zoom-overlay {\n  z-index: 100;\n}\n\n.medium-zoom-overlay ~ img {\n  z-index: 101;\n}\n\n.markdown {\n  p {\n    margin-top: 0.5rem;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: normal;\n  }\n\n  ul {\n    list-style: disc;\n    margin-top: 0.5rem;\n    padding-left: 1.5rem;\n  }\n\n  table {\n    margin: 1rem 0rem;\n    color: var(--text);\n  }\n\n  th {\n    color: var(--text);\n    border-bottom: 1px solid #88888888;\n    padding-bottom: 0.25rem;\n  }\n  tr:nth-child(even) {\n    background-color: #88888822;\n  }\n\n  tr.displaynone ~ tr {\n    background-color: transparent;\n  }\n\n  td {\n    padding-right: 1rem;\n  }\n}\n\n.mapboxgl-popup-content {\n  width: min-content !important;\n}\n\n.top-action-button {\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n  font-size: 0.65rem;\n  margin: auto 0 auto 1.5rem;\n  padding: 2px 0px;\n  width: 1.5rem;\n  text-align: center;\n  // color: var(--bgLink);\n}\n\n.top-action-button:hover {\n  cursor: pointer;\n  // background-color: #222255;\n  color: var(--linkHover);\n}\n\n.top-action-button:active {\n  border: 1px solid #aaa;\n  transform: translateY(1px);\n}\n\n.message-zone {\n  position: sticky;\n  bottom: 0px;\n  z-index: 5;\n  grid-column: 1 / 2;\n  grid-row: 1 / 4;\n  box-shadow: 0px 2px 10px #22222266;\n  display: flex;\n  flex-direction: column;\n  margin: auto auto 0 0;\n  background-color: var(--bgPanel);\n  border-top: 2px solid #ba2b00;\n  border-right: 2px solid #ba2b00;\n}\n\n.message-error {\n  padding: 0.5rem 0.5rem;\n  background-color: #fff6c3;\n  display: flex;\n  flex-direction: row;\n  line-height: 1.2rem;\n\n  p {\n    margin: auto 0.5rem auto 0;\n    font-weight: normal;\n    padding: 0 0;\n    color: black;\n  }\n  button {\n    margin: auto 0;\n  }\n}\n\n// MapLibre Logo\n.mapboxgl-ctrl-bottom-left {\n  filter: var(--logoOpacity);\n  bottom: 1.25em;\n  right: 0.25rem;\n  left: unset;\n  z-index: 0;\n}\n\n// Mapbox Improve this Map attribution\n.mapboxgl-ctrl-bottom-right {\n  filter: var(--logoOpacity);\n  right: 0rem;\n  bottom: 0rem;\n  left: unset;\n  z-index: 0;\n}\n\n.mapboxgl-popup-content {\n  background-color: var(--bgCream4);\n}\n\n.mapboxgl-popup-anchor-top .mapboxgl-popup-tip,\n.mapboxgl-popup-anchor-top-left .mapboxgl-popup-tip,\n.mapboxgl-popup-anchor-top-right .mapboxgl-popup-tip {\n  border-bottom-color: var(--bgCream4);\n}\n.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip,\n.mapboxgl-popup-anchor-bottom-left .mapboxgl-popup-tip,\n.mapboxgl-popup-anchor-bottom-right .mapboxgl-popup-tip {\n  border-top-color: var(--bgCream4);\n}\n.mapboxgl-popup-anchor-left .mapboxgl-popup-tip {\n  border-right-color: var(--bgCream4);\n}\n.mapboxgl-popup-anchor-right .mapboxgl-popup-tip {\n  border-left-color: var(--bgCream4);\n}\n.mapboxgl-ctrl.mapboxgl-ctrl-attrib {\n  background-color: var(--bgCream);\n  a {\n    color: var(--textPale);\n  }\n}\n\n// SCROLLBARS\n/* width */\n::-webkit-scrollbar {\n  width: 12px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  background: #00000000;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #88888888;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #888888aa;\n}\n\n.deck-tooltip {\n  position: 'static';\n}\n\n// sankey text colors don't break thru, sigh\n.node-title {\n  fill: var(--text);\n}\n\n@media only screen and (max-width: 640px) {\n  .top-bar {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  .breadcrumbs {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n\n  .footer {\n    font-size: 0.7rem;\n  }\n}\n</style>\n","\n#main-app(:class=\"{'full-page-app' : true, 'dark-mode': isDarkMode}\" )\n\n  .center-area\n    login-panel.login-panel\n    router-view.main-content\n    p(style=\"text-justify: center; margin: auto auto; font-size: 2rem;\"): i • S i m W r a p p e r •\n\n  //.message-zone(v-if=\"state.statusErrors.length\")\n    .message-error(v-for=\"err,i in state.statusErrors\")\n      p: i.fa.fa-icon.fa-exclamation-triangle(style=\"color: orange;\")\n      p(v-html=\"err\")\n    button.button.is-small(@click=\"removeAllErrors()\") CLEAR\n\n","import Vue from 'vue'\nimport VueI18n from 'vue-i18n'\nimport Buefy from 'buefy'\n\n// order of these is important:\nimport locale from '@/localeSettings'\nimport store from '@/store'\nimport router from '@/router'\nimport App from '@/App.vue'\n\nstore.commit('setLocale', locale)\n\nVue.use(VueI18n)\n\nimport { VuePlugin } from 'vuera'\nVue.use(VuePlugin)\n\nVue.use(Buefy, {\n  defaultIconPack: 'mdi',\n  defaultInputHasCounter: false,\n})\n\nVue.config.productionTip = false\n\nconst i18n = new VueI18n({\n  locale,\n  fallbackLocale: 'en',\n})\n\nnew Vue({\n  i18n,\n  router,\n  store,\n  render: h => h(App),\n}).$mount('#app')\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","href","p","locale","localStorage","getItem","language","navigator","userLanguage","startsWith","MAP_STYLES_OFFLINE","light","version","layers","sources","dark","MAPBOX_TOKEN","Status","Status2","DataType","DataType2","UI_FONT","ColorScheme","ColorScheme2","Health","Health2","LegendItemType","LegendItemType2","REACT_VIEW_HANDLES","loc","window","location","webLiveHostname","hostname","websiteLiveHost","protocol","handle","key","slug","Object","keys","globalStore","state","localFileHandles","length","system","name","description","baseURL","unshift","commit","log","fileSystems","hidden","thumbnail","port","push","description_de","Vue","use","Vuex","Store","app","debug","authAttempts","breadcrumbs","fake","dashboardWidth","isFullScreen","isFullWidth","isShowingLeftBar","isDarkMode","mapStyles","needLoginForUrl","statusErrors","statusWarnings","statusMessage","svnProjects","visualizationTypes","Map","colorScheme","LightMode","runFolders","runFolderCount","resizeEvents","viewState","initial","pitch","bearing","maxZoom","longitude","latitude","zoom","updateRunFolders","value","number","folders","requestLogin","registerPlugin","set","kebabName","setBreadCrumbs","setCredentials","creds","btoa","username","pw","url","setFullScreen","setMapStyles","setMapCamera","jump","error","msg","desc","setStatus","warningObj","INFO","WARNING","clearError","splice","clearAllErrors","resize","rotateColors","DarkMode","setItem","body","style","backgroundColor","setLocale","toLocaleLowerCase","addLocalFileSystem","setLocalFileSystem","setShowLeftBar","toggleShowLeftBar","setDashboardWidth","setFullWidth","toggleFullWidth","actions","modules","getters","mapStyle","seen","__vitePreload","baseModule","deps","Promise","all","map","dep","isCss","endsWith","cssSelector","querySelector","as","crossOrigin","head","appendChild","res","rej","addEventListener","then","VueRouter","BASE","router","mode","base","routes","path","component","props","route","id","params","redirect","scrollBehavior","to","from","savedPosition","x","y","VueComponent","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","fullheight","fullwidth","overlay","right","open","on","$event","src","alt","label","_v","_s","whichLogin","placeholder","maxlength","model","callback","$$v","expression","password","disabled","click","clickedLogin","App","class","_m","staticStyle","margin","store","VueI18n","VuePlugin","Buefy","defaultIconPack","defaultInputHasCounter","config","productionTip","i18n","fallbackLocale","render","h","$mount"],"mappings":"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"}