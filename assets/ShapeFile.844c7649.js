var t=Object.defineProperty,e=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,n=(e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s,r=(t,e)=>{for(var i in e||(e={}))a.call(e,i)&&n(t,i,e[i]);if(s)for(var i of s(e))o.call(e,i)&&n(t,i,e[i]);return t};import{h as l,r as d,R as h,d as c,m as u}from"./vendor.e9c367ae.js";import{r as f}from"./index.a906c0e7.js";import{l as m,C as p}from"./Coords.6c17f2a7.js";import{r as g}from"./index.028cf17b.js";import{c as y}from"./turf.es.943b3175.js";import{b}from"./index.3d2ad359.js";import{g as v,R as C,M as D,C as w,n as F,D as j,S as L,b as $}from"./index.2deacc07.js";import{D as x,S}from"./deckgl.61194435.js";import{O as M}from"./LineOffsetLayer.5b80c65e.js";import{P as O}from"./PathOffsetLayer.f28047a8.js";import{G as z,D as N}from"./DrawingTool.daac4c85.js";import{r as T}from"./cubehelix.cc0b105a.js";import{D as k}from"./data-filter.bf997cc2.js";import{C as I}from"./ColorsAndWidths.e99b2bfb.js";import{V as E}from"./VizConfigurator.a07eac42.js";import{Z as J}from"./ZoomButtons.e860a156.js";import{H as V}from"./HTTPFileSystem.e57ad358.js";import{D as P,c as A,g as W}from"./DashboardDataManager.e0d06cdd.js";import{a as R}from"./util.b5d45f97.js";import{L as U}from"./LegendStore.11164198.js";import{m as _}from"./min.4e1438e9.js";import{s as B}from"./sum.da638719.js";import"./extends.f4cf4404.js";import"./layer.b20bd88e.js";import"./line-layer.600fa289.js";import"./path-layer.f17fbd6c.js";import"./text-layer.f1b6c0de.js";import"./layer-extension.27ef9a68.js";import"./rainbow.63463756.js";import"./index.39efad9c.js";import"./LegendBox.0a0c86dd.js";import"./RoadNetworkLoader.worker.30fe4a65.js";import"./index.5877f313.js";function H(t){if(!(a=t.length))return[];for(var e=-1,i=_(t,q),s=new Array(i);++e<i;)for(var a,o=-1,n=s[e]=new Array(a);++o<a;)n[o]=t[o][e];return s}function q(t){return t.length}var G=l(m),K=G.hasOwnProperty("default")?G.default:G;function X(t,e){return(i=t).length>=2&&"number"==typeof i[0]&&"number"==typeof i[1]?e(t):t.map((function(t){return X(t,e)}));var i}function Y(t,e,i){if(null==i)return i;var s=function(t){if(null==t||"object"!=typeof t)return t;var e=t.constructor();for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);return e}(i),a=Y.bind(this,t,e);switch(i.type){case"Feature":s.geometry=a(i.geometry);break;case"FeatureCollection":s.features=s.features.map(a);break;case"GeometryCollection":s.geometries=s.geometries.map(a);break;default:t(s)}return e&&e(s),s}function Z(t,e){var i,s=t.crs;if(void 0===s)throw new Error('Unable to detect CRS, GeoJSON has no "crs" property.');if("name"===s.type?i=e[s.properties.name]:"EPSG"===s.type&&(i=e["EPSG:"+s.properties.code]),!i)throw new Error("CRS defined in crs section could not be identified: "+JSON.stringify(s));return i}function Q(t,e){return"string"==typeof t||t instanceof String?e[t]||K.Proj(t):t}function tt(t,e,i,s){s=s||{},e=e?Q(e,s):Z(t,s),i=Q(i,s);var a=K(e,i).forward.bind(a);function o(t){var e=a(t);return 3===t.length&&void 0!==t[2]&&void 0===e[2]&&(e[2]=t[2]),e}return Y((function(t){t.crs&&delete t.crs,t.coordinates=X(t.coordinates,o)}),(function(t){t.bbox&&(t.bbox=function(t){var e=[Number.MAX_VALUE,Number.MAX_VALUE],i=[-Number.MAX_VALUE,-Number.MAX_VALUE];return Y((function(t){X(t.coordinates,(function(t){e[0]=Math.min(e[0],t[0]),e[1]=Math.min(e[1],t[1]),i[0]=Math.max(i[0],t[0]),i[1]=Math.max(i[1],t[1])}))}),null,t),[e[0],e[1],i[0],i[1]]}(t))}),t)}var et=function(t,e,i){return tt(t,e,K.WGS84,i)};function it(t){return t>=55296&&t<=56319}function st(t){return t>=56320&&t<=57343}function at(t){return t>=55296&&t<=56319}function ot(t){return t>=56320&&t<=57343}var nt=function(t,e,i){if("string"!=typeof e)throw new Error("Input must be string");for(var s,a,o=e.length,n=0,r=0;r<o;r+=1){if(s=e.charCodeAt(r),a=e[r],it(s)&&st(e.charCodeAt(r+1))&&(a+=e[r+=1]),(n+=t(a))===i)return e.slice(0,r+1);if(n>i)return e.slice(0,r-a.length+1)}return e}.bind(null,(function(t){if("string"!=typeof t)throw new Error("Input must be string");for(var e=t.length,i=0,s=null,a=null,o=0;o<e;o++)ot(s=t.charCodeAt(o))?null!=a&&at(a)?i+=1:i+=3:s<=127?i+=1:s>=128&&s<=2047?i+=2:s>=2048&&s<=65535&&(i+=3),a=s;return i})),rt=/[\/\?<>\\:\*\|"]/g,lt=/[\x00-\x1f\x80-\x9f]/g,dt=/^\.+$/,ht=/^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i,ct=/[\. ]+$/;function ut(t,e){if("string"!=typeof t)throw new Error("Input must be string");var i=t.replace(rt,e).replace(lt,e).replace(dt,e).replace(ht,e).replace(ct,e);return nt(i,255)}const ft={type:O,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}};class mt extends z{constructor(t){super(t)}_renderLineLayers(){const{extruded:t,stroked:e}=this.props,{layerProps:i}=this.state,s="polygons-stroke",a="linestrings",o=!t&&e&&this.shouldRenderSubLayer(s,i.polygonsOutline.data)&&this.getSubLayerClass(s,ft.type),n=this.shouldRenderSubLayer(a,i.lines.data)&&this.getSubLayerClass(a,ft.type);if(o||n){const t=function(t,e){const{transitions:i,updateTriggers:s}=t.props,a={updateTriggers:{},transitions:i&&{getPosition:i.geometry}};for(const o in e){const n=e[o];let r=t.props[o];o.startsWith("get")&&(r=t.getSubLayerAccessor(r),a.updateTriggers[n]=s[o],i&&(a.transitions[n]=i[o])),a[n]=r}return a}(this,ft.props);return[o&&new o(t,this.getSubLayerProps({id:s,updateTriggers:t.updateTriggers}),i.polygonsOutline),n&&new n(t,this.getSubLayerProps({id:a,updateTriggers:t.updateTriggers}),i.lines)]}return null}getShaders(){return t=r({},super.getShaders()),e(t,i({inject:{"vs:#decl":"\n            attribute float instanceOffset;\n            varying float offset;\n            ","vs:#main-start":"\n            offset = instanceOffset;\n            ","fs:#decl":"\n            varying float offset;\n            ","fs:#main-start":"\n            if (offset == 1.0 && vPathPosition.x < 0.0) {\n                discard;\n            }\n            if (offset == 2.0 && vPathPosition.x > 0.0) {\n                discard;\n            }\n            if (offset == 0.0 && abs(vPathPosition.x) > 0.5) {\n                discard;\n            }\n        "}}));var t}}mt.layerName="GeojsonOffsetLayer",mt.defaultProps={getOffset:{type:"accessor",value:2}};var pt={savePNG:async function(t,e){const i=t.context.deck.canvas.toDataURL("image/png"),s=null==e?void 0:e.toDataURL("image/png"),a=[];s&&a.push(s),a.push(i);const o=await(n={width:t.context.deck.canvas.width,height:t.context.deck.canvas.height,imageDataURLs:a},new Promise(((t,e)=>{var i=document.createElement("canvas");i.width=n.width,i.height=n.height,Promise.all(n.imageDataURLs.map((t=>function(t,e){return new Promise(((i,s)=>{t||s(),e||s();var a=new Image;a.onload=function(){t.getContext("2d").drawImage(this,0,0),i(!0)},a.src=e}))}(i,t)))).then((()=>{const e=i.getContext("2d"),s=i.width-152,a=i.height-8;e.beginPath(),e.rect(s-4,a-14,158,22),e.fillStyle="#ffffff44",e.fill(),e.font="11px Arial",e.fillStyle="#888",e.fillText("© Mapbox  © OpenStreetMap",s,a),t(i.toDataURL("image/png"))}))})));var n,r=document.createElement("a");r.setAttribute("href",o),r.setAttribute("download","screenshot.png"),r.style.display="none",document.body.appendChild(r),r.click(),document.body.removeChild(r)}};const gt=c({name:"BackgroundMapOnTop",components:{},data:()=>({containerId:`c${Math.floor(1e12*Math.random())}`,globalState:v.state,isDarkMode:!1,isMapMoving:!1,mapId:`map-${Math.floor(1e12*Math.random())}`,mymap:{},resizer:null}),computed:{},methods:{setupResizer(){this.resizer=new ResizeObserver((()=>{this.mymap.resize()}));const t=document.getElementById(this.containerId);this.resizer.observe(t)},handleMapMotion(){const t={longitude:this.mymap.getCenter().lng,latitude:this.mymap.getCenter().lat,bearing:this.mymap.getBearing(),zoom:this.mymap.getZoom(),pitch:this.mymap.getPitch()};this.$store.commit("setMapCamera",t),this.isMapMoving||(this.isMapMoving=!0)},async setupMap(){const t=v.state.mapStyles;try{this.mymap=new u.Map({container:this.mapId,style:this.isDarkMode?t.transparentDark:t.transparentLight,logoPosition:"top-left"});const e=r({},this.globalState.viewState);this.mymap.jumpTo(e)}catch(e){return void console.error("HUH?"+e)}this.mymap.on("load",this.mapIsReady),this.mymap.on("move",this.handleMapMotion);{let t=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-attrib mapboxgl-compact");for(const e of t)e.setAttribute("style","display: none");t=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-group");for(const e of t)e.setAttribute("style","display: none");t=document.getElementsByClassName("mapboxgl-ctrl-logo");for(const e of t)e.setAttribute("style","display: none")}},async mapIsReady(){this.setupResizer()},viewMoved(t){if(!this.mymap||this.isMapMoving)return void(this.isMapMoving=!1);const{bearing:e,longitude:i,latitude:s,zoom:a,pitch:o}=t;a&&(this.mymap.off("move",this.handleMapMotion),this.mymap.jumpTo({bearing:e,zoom:a,center:[i,s],pitch:o}),this.mymap.on("move",this.handleMapMotion))}},watch:{"$store.state.viewState"(t){this.viewMoved(t)},"$store.state.colorScheme"(){if(this.isDarkMode=this.$store.state.colorScheme===w.DarkMode,!this.mymap)return;const t=v.state.mapStyles;this.mymap.setStyle(this.isDarkMode?t.transparentDark:t.transparentLight),this.mymap.on("style.load",(()=>{}))},"$store.state.resizeEvents"(){this.mymap&&this.mymap.resize()}},async mounted(){this.isDarkMode=this.$store.state.colorScheme===w.DarkMode,this.setupMap()}});const yt={};var bt=F(gt,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"mymaplibre-map",attrs:{id:t.containerId}},[i("div",{staticClass:"mymap",attrs:{id:t.mapId}})])}),[],!1,vt,"234c4d38",null,null);function vt(t){for(let e in yt)this[e]=yt[e]}var Ct=function(){return bt.exports}();const Dt=["id","ID","TAZ","AB"];var wt=c({name:"ModalJoinColumnPicker",i18n:{messages:{en:{},de:{}}},props:{data1:{type:Object,required:!0}},data:()=>({selected1:0}),computed:{columns(){return[...this.data1.columns].sort()}},methods:{clickedJoin(){this.$emit("join",this.columns[this.selected1])},clickedCancel(){this.$emit("join","")}},mounted(){for(const t of Dt){const e=this.columns.indexOf(t);if(e>-1){this.selected1=e;break}}}});const Ft={};var jt=F(wt,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"join-picker"},[i("div",{staticClass:"picker-panel"},[t._m(0),i("p",{staticClass:"subheader"},[t._v("Which property contains the unique ID for each feature?")]),i("div",{staticClass:"split-panel"},[i("div",{staticClass:"column"},[i("p",[i("b",[t._v(t._s(t.data1.title))])]),i("div",{staticClass:"options-box"},t._l(t.columns,(function(e,s){return i("p",{key:"@"+s,class:{selected:s===t.selected1},on:{click:function(e){t.selected1=s}}},[t._v(t._s(e))])})),0)])]),i("div",{staticClass:"buttons"},[i("div",{staticClass:"button-holder"},[i("button",{staticClass:"button",on:{click:t.clickedCancel}},[t._v("Cancel")]),i("button",{staticClass:"button is-primary",on:{click:t.clickedJoin}},[t._v("Select")])])])])])}),[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("p",{staticClass:"header"},[i("b",[t._v("Select ID Column")])])}],!1,Lt,"37da10e6",null,null);function Lt(t){for(let e in Ft)this[e]=Ft[e]}const $t=c({name:"ShapeFilePlugin",components:{BackgroundMapOnTop:Ct,GeojsonLayer:function({viewId:t=0,fillColors:e="#59a14f",lineColors:i="#4e79a7",lineWidths:s=0,fillHeights:a=0,calculatedValues:o=null,calculatedValueLabel:n="",normalizedValues:r=null,opacity:l=1,pointRadii:c=4,screenshot:u=0,featureDataTable:f={},featureFilter:m=new Float32Array(0),tooltip:p=[],cbTooltip:g={}}){const[y,b]=d.exports.useState([]),[w,F]=d.exports.useState(v.state.viewState),[j,L]=d.exports.useState(u),$=d.exports.useRef();C[t]=()=>{F(v.state.viewState)},C[1e3+t]=t=>{const e=t.map((t=>{const e={type:""+t.type,geometry:JSON.parse(JSON.stringify(t.geometry)),properties:JSON.parse(JSON.stringify((null==t?void 0:t.properties)||{}))};return"id"in t&&(e.id=""+t.id),e}));b(e)};let O,z=u>j;if("string"==typeof e){const t=T(e);O=[t.r,t.g,t.b]}else O=(t,i)=>[e[3*i.index+0],e[3*i.index+1],e[3*i.index+2],255];const N=!!i;let I,E,J,V;if("string"==typeof i){const t=T(i);I=[t.r,t.g,t.b],N||I.push(0)}else I=(t,e)=>y[e.index].properties._hide?[0,0,0,0]:[i[3*e.index+0],i[3*e.index+1],i[3*e.index+2],255];function P({value:t,precision:e}){if("number"!=typeof t)return t;let i=""+t;return i.includes(".")&&i.indexOf(".")===i.lastIndexOf(".")&&/\d$/.test(i)?i.substring(0,5+i.lastIndexOf(".")):t}E="number"==typeof s?s:(t,e)=>s[e.index],J="number"==typeof c?c:(t,e)=>c[e.index],V="number"==typeof a?a:(t,e)=>a[e.index];const A=new mt({id:"geoJsonOffsetLayer",data:y,getLineWidth:E,getLineColor:I,getFillColor:O,getPointRadius:J,getElevation:V,autoHighlight:!0,extruded:!!a,highlightColor:[255,0,224],lineWidthUnits:"pixels",lineWidthScale:1,lineWidthMinPixels:"number"==typeof s?0:1,lineWidthMaxPixels:50,getOffset:M.RIGHT,opacity:a?1:.8,pickable:!0,pointRadiusUnits:"pixels",pointRadiusMinPixels:2,stroked:N,useDevicePixels:z,fp64:!1,updateTriggers:{getFillColor:e,getLineColor:i,getLineWidth:s,getPointRadius:c,getElevation:a,getFilterValue:m},transitions:{getFillColor:300,getLineColor:300,getLineWidth:300,getPointRadius:300},parameters:{depthTest:!!a,fp64:!1},glOptions:{preserveDrawingBuffer:!0,fp64:!1},extensions:[new k({filterSize:1})],filterRange:[0,1],getFilterValue:(t,e)=>m[e.index]}),W=h.createElement(x,{layers:[A],viewState:w,controller:!0,pickingRadius:4,getTooltip:function({object:t,index:e}){var i;if(!g)return null;if(null===t||!(null==(i=y[e])?void 0:i.properties))return g(null),null;const s=[];if(r){const t=null!=n?n:"Normalized Value";let i=P({value:r[e],precision:4});s.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${t}</td><td><b>${i}</b></td></tr>`)}if(o){let t=null!=n?n:"Value";const i=r?t.substring(0,t.lastIndexOf("/")):t;let a=P({value:o[e],precision:4});n.startsWith("%")&&(a=`${a} %`),s.push(`<tr><td style="text-align: right; padding-right: 0.5rem;">${i}</td><td><b>${a}</b></td></tr>\n         <tr><td>&nbsp;</td></tr>`)}let a="";const l=Object.entries(y[e].properties);for(const[o,n]of l){if(null===n)continue;a+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${o}</td><td><b>${P({value:n,precision:4})}</b></td></tr>`}a&&s.push(a);let d=Object.keys(f);p&&p.length&&(d=p.map((t=>t.substring(t.indexOf(".")+1))));let h="";if(d.forEach((t=>{if(f[t]){let i=f[t].values[e];if(null==i)return;"number"==typeof i&&(i=P({value:i,precision:4})),h+=`<tr><td style="text-align: right; padding-right: 0.5rem;">${t}</td><td><b>${i}</b></td></tr>`}})),h&&s.push(h),!s.length)return void g(null);let c=s.join("");return g(`<table>${c}</table>`),null},onClick:function(){console.log("click!")},onViewStateChange:t=>{var e;(e=t.viewState).latitude&&(e.center=[e.longitude,e.latitude],F(e),v.commit("setMapCamera",e))},getCursor:({isDragging:t,isHovering:e})=>t?"grabbing":e?"pointer":"grab",onAfterRender:async()=>{var t;u>j&&(await pt.savePNG(W.props.layers[0],null==(t=null==$?void 0:$.current)?void 0:t.getMap()._canvas),L(u))}},h.createElement(S,{mapStyle:v.getters.mapStyle,mapboxApiAccessToken:D}));return W},ModalIdColumnPicker:function(){return jt.exports}(),VizConfigurator:E,ZoomButtons:J,DrawingTool:N},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},datamanager:{type:Object},configFromDashboard:{type:Object},yamlConfig:String,thumbnail:Boolean},data(){return{boundaries:[],centroids:[],cbDatasetJoined:void 0,legendStore:new U,chosenNewFilterColumn:"",boundaryDataTable:{},dataFillColors:"#888",dataLineColors:"",dataLineWidths:1,dataPointRadii:5,dataFillHeights:0,dataCalculatedValues:null,dataNormalizedValues:null,constantLineWidth:null,dataCalculatedValueLabel:"",globalStore:v,globalState:v.state,layerId:Math.floor(1e12*Math.random()),activeColumn:"",useCircles:!1,sliderOpacity:100,maxValue:1e3,expColors:!1,isLoaded:!1,isAreaMode:!0,statusText:"Loading...",filters:{},needsInitialMapExtent:!0,datasetJoinColumn:"",featureJoinColumn:"",triggerScreenshot:0,datasetKeyToFilename:{},datasetJoinSelector:{},showJoiner:!1,myDataManager:this.datamanager||new P(this.root,this.subfolder),config:{},currentUIFilterDefinitions:{},currentUIFillColorDefinitions:{},currentUILineColorDefinitions:{},filterDefinitions:[],isEmbedded:!1,resizer:null,boundaryFilters:new Float32Array(0),thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",boundaryJoinLookups:{},datasetValuesColumn:"",tooltipHtml:"",vizDetails:{title:"",description:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",widthFactor:null,thumbnail:"",sum:!1,filters:[],shapes:"",zoom:null,center:null,pitch:null,bearing:null,display:{fill:{},fillHeight:{},color:{},width:{},lineColor:{},lineWidth:{},radius:{}},tooltip:[]},datasets:{}}},computed:{fileApi(){return new V(this.fileSystem,v)},fileSystem(){const t=this.$store.state.svnProjects.filter((t=>t.slug===this.root));if(0===t.length)throw console.log("no such project"),Error;return t[0]},configuratorSections(){return this.isAreaMode?["fill-color","fill-height","line-color","line-width","circle-radius","filters"]:["line-color","line-width","filters"]},datasetChoices(){return Object.keys(this.datasets)},generatedExportFilename(){var t;let e=(i=null!=(t=this.yamlConfig)?t:"",a=s&&s.replacement||"",o=ut(i,a),""===a?o:ut(o,""));var i,s,a,o;return e=e.replaceAll(" ","-"),e.startsWith("viz-map-")||(e="viz-map-"+e),e.endsWith(".yml")||e.endsWith(".yaml")||(e+=".yaml"),e},urlThumbnail(){return this.thumbnailUrl}},watch:{"globalState.viewState"(){C[this.layerId]&&C[this.layerId]()}},methods:{takeScreenshot(){this.triggerScreenshot++},setEmbeddedMode(){"embed"in this.$route.query&&(console.log("EMBEDDED MODE"),this.isEmbedded=!0,this.$store.commit("setShowLeftBar",!1),this.$store.commit("setFullWidth",!0))},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const t=document.getElementById(`container-${this.layerId}`);this.resizer.observe(t)},moveLogo(){const t=document.getElementById(`container-${this.layerId}`),e=null==t?void 0:t.querySelector(".mapboxgl-ctrl-bottom-left");if(e){const i=t.clientWidth>640?"280px":"36px";e.style.right=i}},columnsInDataset(t){const e=this.datasets[t];return Object.keys(e)},filterShapesNow(){const t=this.filterDefinitions.filter((t=>"shapes"===t.dataset));if(this.boundaryFilters=new Float32Array(this.boundaries.length),!t.length)return;const e=/^(<|>)/;for(const i of t){let t=i.value,s="";if("@categorical"==t)s="@categorical",t="";else if(e.test(t))t.startsWith("<=")?(s="<=",t=parseFloat(t.substring(2).trim())):t.startsWith(">=")?(s=">=",t=parseFloat(t.substring(2).trim())):t.startsWith("<")?(s="<",t=parseFloat(t.substring(1).trim())):t.startsWith(">")&&(s=">",t=parseFloat(t.substring(1).trim()));else if("string"==typeof t)if(t.indexOf(",")>-1)t=t.split(",").map((t=>t.trim())).map((t=>Number.isNaN(parseFloat(t))?t:parseFloat(t)));else{const e=parseFloat(t);Number.isNaN(e)||(t=e)}Array.isArray(t)||(t=[t]);const a={conditional:s,invert:i.invert||!1,values:t},o=this.boundaryDataTable[i.column].values;for(let e=0;e<this.boundaries.length;e++)A(a,o[e])||(this.boundaryFilters[e]=-1)}},cbTooltip(t){this.tooltipHtml=t},filterShapesNowOriginal(){const t=this.filterDefinitions.filter((t=>"shapes"===t.dataset));if(this.boundaryFilters=new Float32Array(this.boundaries.length),t.length)for(let e=0;e<this.boundaries.length;e++)for(const i of t){!this.checkIsFiltered(e,i)&&(this.boundaryFilters[e]=-1)}},checkIsFiltered(t,e){const i=("shapes"==e.dataset?this.boundaryDataTable:this.datasets[e.dataset])[e.column].values[t];let s=!1,a=e.value;return"string"==typeof a&&a.indexOf(",")>-1&&(a=a.split(",").map((t=>t.trim())).map((t=>isNaN(parseFloat(t))?t:parseFloat(t)))),s=Array.isArray(a)?a.indexOf(i)>-1:a==i,e.invert&&(s=!s),s},parseFilterDefinitions(t){if(!t)return[];const e=[];let i;i=Array.isArray(t)?t.map((t=>Object.entries(t)[0])):Object.entries(t);for(const s of i){const[t,i]=s,[a,o]=t.split("."),n={dataset:a,value:i,column:o.endsWith("!")?o.substring(0,o.length-1):o,invert:o.endsWith("!")};e.push(n)}return e},honorQueryParameters(){"dots"==this.$route.query.show&&(this.useCircles=!0)},setupQueryFilters(){const t=Object.keys(this.datasets);if(2!==t.length)return;const e=t[1],i=this.datasets[e],s=Object.keys(i),a=Object.keys(this.$route.query).filter((t=>s.indexOf(t)>-1));for(const o of a){this.filters[o]||(console.log("CREATING category filter:",o),this.handleUserCreatedNewFilter(`${e}:${o}`));const t=""+this.$route.query[o];t&&(this.filters[o].active=t.split(",")),this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[e],column:o,value:this.filters[o].active}),this.activateFiltersForDataset(e)}},convertCommasToArray:t=>void 0===t?[]:Array.isArray(t)?t:t=t.indexOf(",")>-1?t.split(",").map((t=>t.trim())):[t.trim()],async getVizDetails(){var t;const e={datasets:{},display:{fill:{}}};if(this.configFromDashboard)this.config=JSON.parse(JSON.stringify(this.configFromDashboard)),this.vizDetails=Object.assign({},e,this.configFromDashboard);else{const i=(null!=(t=this.yamlConfig)?t:"").toLocaleLowerCase();if((null==i?void 0:i.endsWith("yaml"))||(null==i?void 0:i.endsWith("yml"))){const t=await this.loadYamlConfig();this.config=t,this.vizDetails=Object.assign({},e,t)}if(/(\.geojson)(|\.gz)$/.test(i)||/\.shp$/.test(i)){const t=`${i.endsWith("shp")?"Shapefile":"GeoJSON"}: ${this.yamlConfig}`;this.vizDetails=Object.assign({},e,this.vizDetails,{title:t,description:this.subfolder,shapes:this.yamlConfig}),this.config=JSON.parse(JSON.stringify(this.vizDetails))}}const i=this.vizDetails.title||"Map";this.$emit("title",i)},buildOldJoinLookups(){const t={};for(const e of Object.keys(this.vizDetails.datasets||[])){const i=this.vizDetails.datasets[e].join;if(!i)continue;const s=i.indexOf(":");if(t[e]=i.substring(s+1),"string"==typeof this.vizDetails.shapes){const t=s>-1?i.substring(0,s):i;this.vizDetails.shapes={file:this.vizDetails.shapes,join:t}}}for(const e of Object.keys(this.vizDetails.display||[])){const i=this.vizDetails.display[e];!i.dataset&&!i.diff||i.join||(i.join=t[i.dataset])}},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await this.fileApi.getFileBlob(this.subfolder+"/"+this.vizDetails.thumbnail),e=await f.arraybuffer(t),i=R(e);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(t){console.error(t)}},getFileSystem(t){const e=this.$store.state.svnProjects.filter((e=>e.slug===t));if(0===e.length)throw console.log("no such project"),Error;return e[0]},async loadYamlConfig(){var t;const e=null!=(t=this.yamlConfig)?t:"",i=e.indexOf("/")>-1?e:this.subfolder+"/"+e;try{const t=await this.fileApi.getFileText(i);return b.parse(t)}catch(a){const t=""+a;t.startsWith("YAMLSemantic")&&this.$store.commit("error",`${i}: ${t}`),console.log(`${i} not found, trying config folders`)}const{vizes:s}=await this.fileApi.findAllYamlConfigs(this.subfolder);if(s[e])try{const t=await this.fileApi.getFileText(s[e]);return b.parse(t)}catch(a){console.error(`Also failed to load ${s[e]}`)}this.$store.commit("error","Could not load YAML: "+i)},changeConfiguration(t){console.log("PROPS",t);try{t.fill&&(this.vizDetails.display.fill=t.fill,this.handleNewFillColor(t.fill)),t.fillHeight&&(this.vizDetails.display.fillHeight=t.fillHeight,this.handleNewFillHeight(t.fillHeight)),t.lineColor&&(this.vizDetails.display.lineColor=t.lineColor,this.handleNewLineColor(t.lineColor)),t.lineWidth&&(this.vizDetails.display.lineWidth=t.lineWidth,this.handleNewLineWidth(t.lineWidth),this.currentUILineColorDefinitions&&this.handleNewLineColor(this.currentUILineColorDefinitions)),t.radius&&(this.vizDetails.display.radius=t.radius,this.handleNewRadius(t.radius)),t.dataset&&this.handleNewDataset(t.dataset),t.filters&&this.handleNewFilters(t.filters)}catch(e){this.$store.commit("error",""+e)}},async handleNewDataset(t){const{key:e,dataTable:i,filename:s}=t,a=e,o=s||a;if(console.log("HANDLE NEW DATSET:",a,o),!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[a],dataTable:i}),this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[a]},this.processFiltersNow),this.vizDetails.datasets[a]={file:o},this.vizDetails=Object.assign({},this.vizDetails),this.datasets[a]=i,this.datasets=Object.assign({},this.datasets)},setupJoin(t){var e;const{dataTable:i,datasetId:s,dataJoinColumn:a}=t;if(!a)return;if(`@@${a}`in i)return;if(!this.boundaryDataTable[this.featureJoinColumn])throw Error(`Geodata does not have property ${this.featureJoinColumn}`);if(!i[a])throw Error(`Dataset ${s} does not have column ${a}`);const o={type:j.LOOKUP,values:[],name:`@@${a}`},n=i[a].values,r=this.getBoundaryOffsetLookup(this.featureJoinColumn),l=(this.vizDetails.tooltip||[]).filter((t=>t.substring(0,t.indexOf(".")).startsWith(s))).map((t=>({id:t,column:t.substring(1+t.indexOf("."))})));for(const d of l)i[d.column]||this.globalStore.commit("setStatus",{type:L.WARNING,msg:`Tooltip references "${d.id}" but that column doesn't exist`,desc:"Check the tooltip spec and column names"});for(let d=0;d<n.length;d++){const t=r[n[d]];o.values[d]=t;const s=this.boundaries[t];for(const a of l){if(!i[a.column])continue;const t=(null==(e=i[a.column])?void 0:e.values[d])&&"";s&&t&&(s.properties[a.id]=t)}}C[1e3+this.layerId]&&C[1e3+this.layerId](this.boundaries),i[`@@${a}`]=o,this.myDataManager.setPreloadedDataset({key:this.datasetKeyToFilename[s],dataTable:i}),this.myDataManager.addFilterListener({dataset:this.datasetKeyToFilename[s]},this.processFiltersNow),this.vizDetails.datasets[s]={file:this.datasetKeyToFilename[s],join:this.featureJoinColumn===a?this.featureJoinColumn:`${this.featureJoinColumn}:${a}`},this.datasets[s]=i},getBoundaryOffsetLookup(t){if(this.boundaryJoinLookups[t])return this.boundaryJoinLookups[t];this.statusText="Joining datasets...",this.boundaryJoinLookups[t]={};const e=this.boundaryJoinLookups[t],i=this.boundaryDataTable[t].values;for(let s=0;s<this.boundaries.length;s++)e[i[s]]=s;return this.statusText="",e},removeAnyOldFilters(t){const e=new Set(Object.keys(this.currentUIFilterDefinitions).filter((t=>!t.startsWith("shapes."))));new Set(Object.keys(t).filter((t=>!t.startsWith("shapes.")))).forEach((t=>e.delete(t)));for(const i of e){console.log("REMOVING",i);const t=i.indexOf("."),e=i.slice(0,t),s=i.slice(t+1);if(this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[e],column:s,value:[]}),s in this.filters){const t=Object.assign({},this.$route.query);delete t[s],this.$router.replace({query:t}),delete this.filters[s]}}},handleNewFilters(t){this.removeAnyOldFilters(t),this.currentUIFilterDefinitions=t;const e=this.parseFilterDefinitions(t);this.filterDefinitions=e,this.filterShapesNow(),Object.keys(this.datasets).forEach(((t,e)=>{0!==e&&this.activateFiltersForDataset(t)}))},handleColorDiffMode(t,e){if(!e.diffDatasets)return;const i=e.columnName,s=e.join||"",a=e.diffDatasets[0]||"",o=this.datasets[a],n=e.diffDatasets[1]||"",r=this.datasets[n],l=!!e.relative;if(o&&r){this.setupJoin({datasetId:a,dataTable:o,dataJoinColumn:s}),this.setupJoin({datasetId:n,dataTable:r,dataJoinColumn:s});const d=o[`@@${s}`],h=r[`@@${s}`],c=o[i],u=r[i];if(!c)throw Error(`Dataset ${a} does not contain column "${i}"`);if(!u)throw Error(`Dataset ${n} does not contain column "${i}"`);let f,m;if(e.normalize){const[t,i]=e.normalize.split(":");if(!this.datasets[t]||!this.datasets[t][i])throw Error(`${t} does not contain column "${i}"`);this.dataCalculatedValueLabel+=`/ ${i}`,f=this.datasets[t][i],this.datasetChoices[0]!==t&&(this.setupJoin({datasetId:t,dataTable:this.datasets[t],dataJoinColumn:s}),m=this.datasets[t][`@@${i}`])}const{array:p,legend:g,calculatedValues:y}=I.getColorsForDataColumn({numFeatures:this.boundaries.length,data:c,data2:u,lookup:d,lookup2:h,normalize:f,normalLookup:m,options:e,filter:this.boundaryFilters,relative:l});if(!p)return;"fill"===t?this.dataFillColors=p:this.dataLineColors=p,this.dataCalculatedValues=y,this.dataCalculatedValueLabel=`${l?"% ":""}Diff: ${i}`,this.legendStore.setLegendSection({section:"fill"===t?"FillColor":"Line Color",column:c.name,values:g,diff:!0,relative:l,normalColumn:f?f.name:""})}},paintColorsWithFilter(t,e){const i="fill"===t?this.currentUIFillColorDefinitions:this.currentUILineColorDefinitions,s=i.columnName,a="@count"===i.join?e[`@@${s}`]:e[`@@${i.join}`];let o;if(i.normalize){const t=i.normalize.split(":");this.dataCalculatedValueLabel=s+"/"+t[1];const a=i.dataset;if(!this.datasets[t[0]]||!this.datasets[t[0]][t[1]])throw Error(`Dataset ${a} does not contain column "${s}"`);o=e[t[1]]}const n={numFeatures:this.boundaries.length,data:e[s],normalize:o,lookup:a,filter:this.boundaryFilters,options:i,join:i.join},{array:r,legend:l,calculatedValues:d}=I.getColorsForDataColumn(n);r&&("fill"===t?this.dataFillColors=r:this.dataLineColors=r,this.dataCalculatedValues=d,this.legendStore.setLegendSection({section:"fill"===t?"FillColor":"Line Color",column:s,values:l}))},handleNewFillColor(t){const e="columnName"in t,i=!e;if(e){const e=null==t?void 0:t.dataset,{filteredRows:i}=this.myDataManager.getFilteredDataset({dataset:`${e}`||""});if(i&&i.length)return this.currentUIFillColorDefinitions=t,void this.processFiltersNow(e)}if(i)return void this.paintColorsWithFilter("fill",t);const s=t;this.currentUIFillColorDefinitions=s;const a=s.columnName;if(s.diffDatasets)this.handleColorDiffMode("fill",s);else{if(!a)return this.dataFillColors=s.fixedColors[0],this.dataCalculatedValueLabel="",void this.legendStore.clear("FillColor");{const t=s.dataset||"",e=this.datasets[t];if(this.dataCalculatedValueLabel="",!e)return void console.warn("color: no selected dataset yet, maybe still loading");const i=e[a];if(!i)throw Error(`Dataset ${t} does not contain column "${a}"`);this.dataCalculatedValueLabel=null!=a?a:"";let o="";s.join&&"@count"!==s.join?o=s.join:"@count"===s.join?o=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:t,dataTable:e,dataJoinColumn:o});const n=e[`@@${o}`];let r,l;if(s.normalize){const[t,e]=s.normalize.split(":");if(!this.datasets[t]||!this.datasets[t][e])throw Error(`${t} does not contain column "${e}"`);this.dataCalculatedValueLabel+=`/ ${e}`,r=this.datasets[t][e],this.datasetChoices[0]!==t&&(this.setupJoin({datasetId:t,dataTable:this.datasets[t],dataJoinColumn:o}),l=this.datasets[t][`@@${e}`])}const{array:d,legend:h,calculatedValues:c,normalizedValues:u}=I.getColorsForDataColumn({numFeatures:this.boundaries.length,data:i,normalize:r,normalLookup:l,lookup:n,filter:this.boundaryFilters,options:s,join:s.join});d&&(this.dataFillColors=d,this.dataCalculatedValues=c,this.dataNormalizedValues=u||null,this.legendStore.setLegendSection({section:"FillColor",column:i.name,values:h,normalColumn:r?r.name:""}))}}},handleNewLineColor(t){if(!1===t)return this.dataLineColors="",void this.legendStore.clear("Line Color");const e="columnName"in t,i=!e;if(e){const e=null==t?void 0:t.dataset,{filteredRows:i}=this.myDataManager.getFilteredDataset({dataset:`${e}`||""});if(i&&i.length)return this.currentUILineColorDefinitions=t,void this.processFiltersNow(e)}if(i)return void this.paintColorsWithFilter("lineColor",t);const s=t;this.currentUILineColorDefinitions=s;const a=s.columnName;if(s.diffDatasets)this.handleColorDiffMode("lineColor",s);else{if(!a)return this.dataLineColors=s.fixedColors[0],this.dataCalculatedValueLabel="",void this.legendStore.clear("Line Color");{const t=s.dataset||"",e=this.datasets[t];if(this.dataCalculatedValueLabel="",!e)return void console.warn("color: no selected dataset yet, maybe still loading");const i=e[a];if(!i)throw Error(`Dataset ${t} does not contain column "${a}"`);this.dataCalculatedValueLabel=null!=a?a:"";let o="";s.join&&"@count"!==s.join?o=s.join:"@count"===s.join?o=a:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:t,dataTable:e,dataJoinColumn:o});const n=e[`@@${o}`];let r,l;if(s.normalize){const[t,e]=s.normalize.split(":");if(!this.datasets[t]||!this.datasets[t][e])throw Error(`${t} does not contain column "${e}"`);this.dataCalculatedValueLabel+=`/ ${e}`,r=this.datasets[t][e],this.datasetChoices[0]!==t&&(this.setupJoin({datasetId:t,dataTable:this.datasets[t],dataJoinColumn:o}),l=this.datasets[t][`@@${e}`])}const d=I.getColorsForDataColumn({numFeatures:this.boundaries.length,data:i,normalize:r,normalLookup:l,lookup:n,filter:this.boundaryFilters,options:s,join:s.join}),{array:h,legend:c,calculatedValues:u,normalizedValues:f,hasCategory:m}=d;if(!h)return;if(this.dataLineColors=h,this.dataCalculatedValues=u,this.dataNormalizedValues=f||null,m&&null!==this.constantLineWidth){const t=this.constantLineWidth,e=new Float32Array(this.boundaries.length).fill(1);Object.keys(m).forEach((i=>{e[i]=t})),this.dataLineWidths=e}this.legendStore.setLegendSection({section:"Line Color",column:i.name,values:c,normalColumn:r?r.name:""})}}},handleNewLineWidth(t){const e=t.columnName||"";if(t.dataset&&/^@\d$/.test(t.dataset))return this.dataLineWidths=Number.parseInt(t.dataset.substring(1)),this.constantLineWidth=this.dataLineWidths,void this.legendStore.clear("Line Width");if(this.constantLineWidth=null,t.scaleFactor&&isNaN(t.scaleFactor))return this.dataLineWidths=1,void this.legendStore.clear("Line Width");if(t.diffDatasets){const i=t.join||"",s=t.diffDatasets[0]||"",a=this.datasets[s],o=t.diffDatasets[1]||"",n=this.datasets[o];if(a&&n){this.setupJoin({datasetId:s,dataTable:a,dataJoinColumn:i}),this.setupJoin({datasetId:o,dataTable:n,dataJoinColumn:i});const r=a[`@@${i}`],l=n[`@@${i}`],d=a[e],h=n[e];if(!d)throw Error(`Dataset ${s} does not contain column "${e}"`);if(!h)throw Error(`Dataset ${o} does not contain column "${e}"`);const{array:c,legend:u,calculatedValues:f}=I.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:d,data2:h,lookup:r,lookup2:l,options:t});this.dataLineWidths=c||0,this.dataCalculatedValues=f,this.dataCalculatedValueLabel="Diff: "+e,this.legendStore.setLegendSection({section:"Line Width",column:`${d.name} (Diff)`,values:u})}}else if(e){const i=t.dataset||"",s=this.datasets[i];if(s){const a=s[e];if(!a)throw Error(`Dataset ${i} does not contain column "${e}"`);let o="";t.join&&"@count"!==t.join?o=t.join:"@count"===t.join?o=e:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`],{array:r,legend:l,calculatedValues:d}=I.getWidthsForDataColumn({numFeatures:this.boundaries.length,data:a,lookup:n,join:t.join,options:t});this.dataLineWidths=r||0,this.dataCalculatedValues=d,this.dataCalculatedValueLabel=e,l.length?this.legendStore.setLegendSection({section:"Line Width",column:a.name,values:l}):this.legendStore.clear("Line Width")}}else this.dataLineWidths=1,this.dataCalculatedValueLabel="",this.legendStore.clear("Line Width")},handleNewFillHeight(t){const e=t.columnName;if(e){const i=t.dataset||"",s=this.datasets[i];if(s){const a=s[e];if(!a)throw Error(`Dataset ${i} does not contain column "${e}"`);let o="";t.join&&"@count"!==t.join?o=t.join:"@count"===t.join?o=e:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`];let r;if(t.normalize){const s=t.normalize.split(":");if(!this.datasets[s[0]]||!this.datasets[s[0]][s[1]])throw Error(`Dataset ${i} does not contain column "${e}"`);r=this.datasets[s[0]][s[1]],this.dataCalculatedValueLabel=e+"/"+s[1]}const{heights:l,calculatedValues:d,normalizedValues:h}=I.getHeightsBasedOnNumericValues({length:this.boundaries.length,data:a,lookup:n,options:t,normalize:r,join:t.join});if(this.dataFillHeights=l,this.dataCalculatedValues=d,this.dataNormalizedValues=h||null,0==this.$store.state.viewState.pitch){const t=Object.assign({},this.$store.state.viewState,{pitch:30});this.$store.commit("setMapCamera",t)}}}else this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel=""},handleNewRadius(t){const e=t.columnName;if(e){const i=t.dataset||"",s=this.datasets[i];if(!s)return void console.warn("radius: no selected dataset yet, maybe still loading");if(s){const a=s[e];if(!a)throw Error(`Dataset ${i} does not contain column "${e}"`);let o="";t.join&&"@count"!==t.join?o=t.join:"@count"===t.join?o=e:this.datasetChoices.length>1&&console.warn("No join; lets hope user just wants to display data in boundary file"),this.setupJoin({datasetId:i,dataTable:s,dataJoinColumn:o});const n=s[`@@${o}`],{radius:r,calculatedValues:l}=I.getRadiusForDataColumn({length:this.boundaries.length,data:a,lookup:n,join:o,options:t});this.dataPointRadii=r,this.dataCalculatedValues=l,this.dataCalculatedValueLabel=a.name}}else this.dataPointRadii=5;C[1e3+this.layerId]&&C[1e3+this.layerId]("number"==typeof this.dataPointRadii?this.boundaries:this.centroids)},async handleMapClick(t){try{const{x:e,y:i,data:s}=t.points[0];this.config.groupBy}catch(e){console.error(e)}},async figureOutFeatureIdColumn(){if(this.featureJoinColumn)return this.featureJoinColumn;if("string"!=typeof this.vizDetails.shapes&&this.vizDetails.shapes.join)return this.vizDetails.shapes.join;const t=this.datasets[Object.keys(this.datasets)[0]],e=Object.keys(t);if(1===e.length)return e[0];const i=await new Promise(((e,i)=>{const s=new Set;this.boundaries[0].id&&s.add("id"),Object.keys(t).forEach((t=>s.add(t))),this.datasetJoinSelector={data1:{title:"Properties",columns:Array.from(s)}},this.showJoiner=!0,this.cbDatasetJoined=t=>{this.datasetJoinSelector={},this.showJoiner=!1,e(t)}}));return i.length?i:"id"},async processFiltersNow(t){var e,i;console.log("> processFiltersNow",t);const{filteredRows:s}=this.myDataManager.getFilteredDataset({dataset:t||""}),a={};if(s){(s.length>0?Object.keys(s[0]):[]).forEach((t=>{const e={name:t,values:[],type:j.UNKNOWN};for(const i of s)e.values.push(i[t]);a[t]=e}))}(null==(e=this.currentUIFillColorDefinitions)?void 0:e.dataset)&&this.handleNewFillColor(s?a:this.currentUIFillColorDefinitions),(null==(i=this.currentUILineColorDefinitions)?void 0:i.dataset)&&this.handleNewLineColor(s?a:this.currentUILineColorDefinitions)},async loadBoundaries(){const t=this.config.boundaries||this.config.shapes||this.config.geojson||this.config.network;if(!t)return;let e,i=t.file||t,s=[];try{this.statusText="Loading features...",e=i.startsWith("http")?(await fetch(i).then((async t=>await t.json()))).features:i.toLocaleLowerCase().endsWith(".shp")?await this.loadShapefileFeatures(i):(await this.fileApi.getFileJson(`${this.subfolder}/${i}`)).features;let a=!0,o=!0,n=!1;e.forEach((t=>{var e;const i=null!=(e=t.properties)?e:{};"id"in t&&(i.id=t.id),s.push(i),t.properties={},"Point"!=t.geometry.type&&"MultiPoint"!=t.geometry.type||(n=!0),!a||"LineString"!=t.geometry.type&&"MultiLineString"!=t.geometry.type||(a=!1),!o||"Polygon"!=t.geometry.type&&"MultiPolygon"!=t.geometry.type||(o=!1)})),this.moveLogo(),await this.setFeaturePropertiesAsDataSource(i,[...s],t),(!a||e.length<5e3)&&(this.dataLineColors="#4e79a7"),o&&(this.isAreaMode=!1),n&&(this.isAreaMode=!0),this.boundaries=e,!o||n?await this.generateCentroidsAndMapCenter():this.needsInitialMapExtent&&this.calculateAndMoveToCenter(),C[1e3+this.layerId]&&C[1e3+this.layerId](this.boundaries)}catch(a){throw console.error(a),this.$store.commit("error",""+a),Error(`Could not load "${i}"`)}if(!this.boundaries)throw Error('No "features" found in shapes file')},async setFeaturePropertiesAsDataSource(t,e,i){const s=await this.myDataManager.setFeatureProperties(t,e,i);this.boundaryDataTable=s;const a=t.substring(1+t.lastIndexOf("/"));this.datasets[a]=s,this.vizDetails.datasets[a]={file:a,join:this.datasetJoinColumn},this.config.datasets=Object.assign({},this.vizDetails.datasets)},async calculateAndMoveToCenter(){var t;let e=0,i=0,s=0;const a=this.boundaries.length;for(let o=0;o<a;o+=256){const a=y(this.boundaries[o]);(null==(t=null==a?void 0:a.geometry)?void 0:t.coordinates)&&(e+=a.geometry.coordinates[0],i+=a.geometry.coordinates[1],s+=1)}e/=s,i/=s,console.log("CENTER",e,i),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:e,latitude:i,center:[e,i],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async generateCentroidsAndMapCenter(){this.statusText="Calculating centroids...",await this.$nextTick();const t=this.config.shapes.join||"id";let e=0,i=0;for(const s of this.boundaries){const a=y(s);a.properties||(a.properties={}),s.properties[this.config.boundariesLabel]&&(a.properties.label=s.properties[this.config.boundariesLabel]),a.properties.id=s.properties[t],void 0===a.properties.id&&(a.properties.id=s[t]),this.centroids.push(a),a.geometry&&(e+=a.geometry.coordinates[0],i+=a.geometry.coordinates[1])}e/=this.centroids.length,i/=this.centroids.length,console.log("CENTER",e,i),this.needsInitialMapExtent&&!this.vizDetails.center&&(this.$store.commit("setMapCamera",{longitude:e,latitude:i,center:[e,i],bearing:0,pitch:0,zoom:9,initial:!0}),this.needsInitialMapExtent=!1)},async loadShapefileFeatures(t){var e,i;this.statusText="Loading shapefile...",console.log("loading",t);const s=`${this.subfolder}/${t}`;let a={};try{const t=this.fileApi.getFileBlob(s),o=s.replace(".shp",".dbf").replace(".SHP",".DBF").replace(".Shp",".Dbf"),n=this.fileApi.getFileBlob(o);await Promise.all([t,n]);const r=await(null==(e=await t)?void 0:e.arrayBuffer()),l=await(null==(i=await n)?void 0:i.arrayBuffer());if(!r||!l)return[];this.statusText="Generating shapes...",a=await g(r,l)}catch(h){return console.error(h),this.$store.commit("error",""+h),[]}let o=$;const n=s.replace(".shp",".prj").replace(".SHP",".PRJ").replace(".Shp",".Prj");try{o=await this.fileApi.getFileText(n)}catch(h){}const r=this.vizDetails.projection||p.guessProjection(o);function l(t){return Array.isArray(t[0])?l(t[0]):[t[0],t[1]]}console.log({guessCRS:r}),r&&(this.statusText="Projecting coordinates...",await this.$nextTick(),a=et(a,r,p.allEPSGs),this.statusText="");const d=l(a.features[0].geometry.coordinates);if(Math.abs(d[0])>180||Math.abs(d[1])>90){const t=`Coordinates not lon/lat. Try providing ${n.substring(1+n.lastIndexOf("/"))}`;return this.$store.commit("error",t),this.statusText=t,[]}{const t=[],e=[];for(let o=0;o<a.features.length;o+=128){const i=l(a.features[o].geometry.coordinates);t.push(i[0]),e.push(i[1])}const i=t.reduce(((t,e)=>t+e))/t.length,s=e.reduce(((t,e)=>t+e))/e.length;this.$store.commit("setMapCamera",{longitude:i,latitude:s,bearing:0,pitch:0,zoom:9,center:[i,s],initial:!0})}return this.needsInitialMapExtent=!1,a.features},async loadDatasets(){const t=Object.keys(this.vizDetails.datasets);for(const e of t)e in this.datasets||await this.loadDataset(e)},async loadDataset(t){try{if(!t)return;const e="string"==typeof this.config.datasets[t]?this.config.datasets[t]:this.config.datasets[t].file;this.statusText=`Loading dataset ${e} ...`,await this.$nextTick();let i={dataset:e};"string"!=typeof this.config.datasets[t]&&(i=Object.assign(i,this.config.datasets[t])),this.datasetKeyToFilename[t]=e;const s=await this.myDataManager.getDataset(i),a="string"==typeof this.config.datasets[t]?Object.keys(s.allRows)[0]:this.config.datasets[t].join,o=(null==a?void 0:a.split(":"))||[];2==o.length&&(this.featureJoinColumn=o[0]),1==o.length&&o.push(o[0]),this.datasets[t]=s.allRows,await this.$nextTick(),this.myDataManager.addFilterListener({dataset:e},this.processFiltersNow),this.activateFiltersForDataset(t)}catch(e){const t=""+e;console.error(t),this.$store.commit("error",t)}return[]},activateFiltersForDataset(t){const e=this.filterDefinitions.filter((e=>e.dataset===t));for(const i of e)console.log(3,JSON.stringify(i)),"@categorical"==i.value?this.filters[i.column]?i.value=this.filters[i.column].active:this.handleUserCreatedNewFilter(`${t}:${i.column}`):this.myDataManager.setFilter(Object.assign(i,{dataset:this.datasetKeyToFilename[t]}))},filterLabel(t){let e=this.filters[t].active.join(",").substring(0,50)||"Select...";return 50===e.length&&(e+="..."),e},async handleUserSelectedNewMetric(){await this.$nextTick(),console.log("METRIC",this.datasetValuesColumn);const t=Object.assign({},this.$route.query);t.display=this.datasetValuesColumn,this.$router.replace({query:t}),this.maxValue=this.boundaryDataTable[this.datasetValuesColumn].max||0,console.log("MAXVALUE",this.maxValue),this.vizDetails.display.fill.columnName=this.datasetValuesColumn,this.vizDetails=Object.assign({},this.vizDetails),this.processFiltersNow()},handleUserSelectedNewFilters(t){const e=this.filters[t],i=e.active;this.myDataManager.setFilter({dataset:this.datasetKeyToFilename[e.dataset],column:t,invert:!1,value:i});const s=Object.assign({},this.$route.query);for(const a of Object.entries(this.filters))a[1].active.length?s[a[0]]=a[1].active.join(","):delete s[a[0]];JSON.stringify(this.$route.query)!==JSON.stringify(s)&&this.$router.replace({query:s})},showCircles(t){this.useCircles=t;const e=Object.assign({},this.$route.query);t?e.show="dots":delete e.show,this.$router.replace({query:e})},handleUserCreatedNewFilter(t){const e=t||this.chosenNewFilterColumn,[i,s]=e.split(":");let a=[...new Set(this.datasets[i][s].values)];this.chosenNewFilterColumn="",a.length>48?alert(`Column ${s} has too many values to be used as a filter.`):this.filters[s]={column:s,label:s,options:a,active:[],dataset:i}},updateChart(){var t;if(!this.config.display||!this.config.datasets)return;let e="id";(null==(t=this.config.shapes)?void 0:t.join)&&(e=this.config.shapes.join);const i=this.datasetJoinColumn;if(!i)return void console.error(`No join column ${i}`);let s=this.config.display.fill.values;if(!s)throw this.statusText="",Error("Need to specify column for data values");this.$route.query.display&&(this.config.display.fill.columnName=this.$route.query.display);let a=this.config.display.fill.columnName||s[0];this.datasetValuesColumn=a;const o=this.boundaryDataTable[i].values,n=this.boundaryDataTable[a].values,r=W(function(){return H(arguments)}(o,n),(t=>t[0]));let l=0;for(let d=0;d<this.boundaries.length;d++){const t=this.boundaries[d],i=this.centroids[d];let s=t[e];null==s&&(s=t.properties[e]),void 0===s&&this.$store.commit("error",`Shape is missing property "${e}"`);const a=r.get(s);a?(t.properties.value=B(a.map((t=>t[1]))),l=Math.max(l,t.properties.value)):t.properties.value="N/A",i&&(i.properties.value=t.properties.value)}this.maxValue=this.boundaryDataTable[a].max||0,this.centroids=this.centroids.sort(((t,e)=>t.properties.value>e.properties.value?-1:1)),this.activeColumn="value"},clearData(){this.boundaries=[],this.centroids=[],this.boundaryDataTable={},this.boundaryFilters=new Float32Array(0),this.datasets={},this.dataFillColors="#888",this.dataLineColors="",this.dataLineWidths=1,this.dataPointRadii=5,this.dataFillHeights=0,this.dataCalculatedValues=null,this.dataCalculatedValueLabel=""}},async mounted(){var t,e,i,s;try{if(this.setEmbeddedMode(),this.clearData(),await this.getVizDetails(),this.vizDetails.center&&"string"==typeof this.vizDetails.center&&(this.vizDetails.center=this.vizDetails.center.split(",").map((t=>parseFloat(t))),this.config.center=this.config.center.split(",").map((t=>parseFloat(t)))),this.buildThumbnail(),this.thumbnail)return;this.buildOldJoinLookups(),this.filterDefinitions=this.parseFilterDefinitions(this.vizDetails.filters),this.setupLogoMover(),this.needsInitialMapExtent&&this.vizDetails.center&&(this.$store.commit("setMapCamera",{center:this.vizDetails.center,zoom:this.vizDetails.zoom||9,bearing:this.vizDetails.bearing||0,pitch:this.vizDetails.pitch||0,longitude:this.vizDetails.center?this.vizDetails.center[0]:0,latitude:this.vizDetails.center?this.vizDetails.center[1]:0,initial:!0}),this.needsInitialMapExtent=!1),this.expColors=null==(e=null==(t=this.config.display)?void 0:t.fill)?void 0:e.exponentColors,this.dataFillColors=v.state.isDarkMode?"#44445580":"#dddddd80",this.config.display.fill||(this.config.display.fill={}),(null==(s=null==(i=this.config.display)?void 0:i.fill)?void 0:s.values)&&(this.config.display.fill.values=this.convertCommasToArray(this.config.display.fill.values)),await this.loadBoundaries(),this.filterShapesNow(),this.isLoaded=!0,this.$emit("isLoaded"),await this.loadDatasets(),this.datasets=Object.assign({},this.datasets),this.config.datasets=JSON.parse(JSON.stringify(this.datasets)),this.vizDetails=Object.assign({},this.vizDetails),this.honorQueryParameters(),this.statusText="",this.featureJoinColumn=await this.figureOutFeatureIdColumn()}catch(a){this.$store.commit("error","Mapview "+a)}},beforeDestroy(){var t;delete C[this.layerId],C[1e3+this.layerId]&&(C[1e3+this.layerId]([]),delete C[1e3+this.layerId]),this.clearData(),this.legendStore.clear(),null==(t=this.resizer)||t.disconnect(),this.myDataManager.removeFilterListener(this.config,this.processFiltersNow),this.$store.commit("setFullScreen",!1)}});const xt={};var St=F($t,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"map-layout",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[i("div",{directives:[{name:"show",rawName:"v-show",value:t.statusText,expression:"statusText"}],staticClass:"status-bar"},[t._v(t._s(t.statusText))]),t.showJoiner?i("modal-id-column-picker",t._b({on:{join:t.cbDatasetJoined}},"modal-id-column-picker",t.datasetJoinSelector,!1)):t._e(),t.thumbnail?t._e():i("div",{staticClass:"area-map",attrs:{id:`container-${t.layerId}`}},[t.needsInitialMapExtent?t._e():i("geojson-layer",{attrs:{viewId:t.layerId,fillColors:t.dataFillColors,featureDataTable:t.boundaryDataTable,lineColors:t.dataLineColors,lineWidths:t.dataLineWidths,fillHeights:t.dataFillHeights,screenshot:t.triggerScreenshot,calculatedValues:t.dataCalculatedValues,calculatedValueLabel:t.dataCalculatedValueLabel,normalizedValues:t.dataNormalizedValues,featureFilter:t.boundaryFilters,opacity:t.sliderOpacity,pointRadii:t.dataPointRadii,tooltip:t.vizDetails.tooltip,cbTooltip:t.cbTooltip}}),t.isLoaded?i("viz-configurator",{attrs:{embedded:t.isEmbedded,sections:t.configuratorSections,fileSystem:t.fileSystem,subfolder:t.subfolder,yamlConfig:t.generatedExportFilename,vizDetails:t.vizDetails,datasets:t.datasets,legendStore:t.legendStore,filterDefinitions:t.currentUIFilterDefinitions},on:{update:t.changeConfiguration,screenshot:t.takeScreenshot}}):t._e(),t.tooltipHtml&&!t.statusText?i("div",{staticClass:"details-panel",domProps:{innerHTML:t._s(t.tooltipHtml)}}):t._e()],1),t.isLoaded&&!t.thumbnail?i("zoom-buttons"):t._e(),!t.thumbnail&&!t.isEmbedded&&t.isLoaded&&Object.keys(t.filters).length?i("div",{staticClass:"config-bar",class:{"is-standalone":!t.configFromDashboard,"is-disabled":!t.isLoaded}},t._l(Object.keys(t.filters),(function(e){return i("div",{staticClass:"filter"},[i("p",[t._v(t._s(e))]),i("b-dropdown",{attrs:{scrollable:t.filters[e].active.length>10,"max-height":"250",multiple:"","aria-role":"list","mobile-modal":!1,"close-on-click":!0},on:{change:function(i){return t.handleUserSelectedNewFilters(e)}},scopedSlots:t._u([{key:"trigger",fn:function(s){return s.active,[i("b-button",{staticClass:"is-primary",attrs:{type:t.filters[e].active.length?"":"is-outlined",label:t.filterLabel(e)}})]}}],null,!0),model:{value:t.filters[e].active,callback:function(i){t.$set(t.filters[e],"active",i)},expression:"filters[filter].active"}},t._l(t.filters[e].options,(function(e){return i("b-dropdown-item",{key:e,attrs:{value:e,"aria-role":"listitem"}},[t._v(t._s(e))])})),1)],1)})),0):t._e()],1)}),[],!1,Mt,"04045425",null,null);function Mt(t){for(let e in xt)this[e]=xt[e]}var Ot=function(){return St.exports}();export{Ot as default};
//# sourceMappingURL=ShapeFile.844c7649.js.map
