var t=Object.defineProperty,e=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,a=(e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i,o=(t,o)=>{for(var n in o||(o={}))s.call(o,n)&&a(t,n,o[n]);if(e)for(var n of e(o))i.call(o,n)&&a(t,n,o[n]);return t};import{d as n,r as l,R as r}from"./vendor.e9c367ae.js";import{d as c}from"./index.e02ae17f.js";import{r as d}from"./index.a906c0e7.js";import{b as h}from"./index.3d2ad359.js";import{n as m,D as u,g as v,R as g,M as p,C as f,S as y,c as w}from"./index.2deacc07.js";import{d as b}from"./index.39efad9c.js";import{V as D}from"./vue-slider-component.umd.min.efc39df5.js";import{L as C,O as k}from"./LineOffsetLayer.5b80c65e.js";import{D as S,S as L}from"./deckgl.61194435.js";import{C as z}from"./layer.b20bd88e.js";import{f as j}from"./pureFunctionsAny.generated.76a4d98e.js";import{H as R}from"./HTTPFileSystem.e57ad358.js";import{D as F}from"./DrawingTool.daac4c85.js";import{V as T}from"./VizConfigurator.a07eac42.js";import{Z as W}from"./ZoomButtons.e860a156.js";import{L as A}from"./LegendStore.11164198.js";import{C as M}from"./Coords.6c17f2a7.js";import{a as x}from"./util.b5d45f97.js";import{D as N}from"./DashboardDataManager.e0d06cdd.js";import{r as O}from"./cubehelix.cc0b105a.js";import{o as $,t as _}from"./ColorsAndWidths.e99b2bfb.js";import"./line-layer.600fa289.js";import"./extends.f4cf4404.js";import"./text-layer.f1b6c0de.js";import"./path-layer.f17fbd6c.js";import"./LegendBox.0a0c86dd.js";import"./RoadNetworkLoader.worker.30fe4a65.js";import"./index.5877f313.js";import"./rainbow.63463756.js";var I=n({name:"TimeSliderLinksGl",components:{VueSlider:D},props:{useRange:Boolean,stops:{type:Array,required:!0},dropdownValue:String},data:()=>({sliderValue:"",timeSlider:{adsorb:!0,contained:!0,data:[],"enable-cross":!1,height:8,piecewise:!0,show:!1,marks:[],minRange:1,processStyle:{backgroundColor:"#00bb5588",borderColor:"#f05b72"},sliderStyle:[{backgroundColor:"#f05b72"},{backgroundColor:"#3498db"}],"tooltip-placement":"bottom"}}),watch:{dropdownValue(t){this.sliderValue=t},useRange(t){this.sliderValue=t?[this.stops[0],this.stops[this.stops.length-1]]:[this.stops[0]],console.log("changed to: "+this.sliderValue)},sliderValue(t){this.$emit("change",t)}},mounted(){this.sliderValue=this.stops[0]||"...",this.timeSlider.data=this.stops,this.timeSlider.marks=[this.stops[0],this.stops[Math.floor(this.stops.length/2)],this.stops[this.stops.length-1]]}});const B={};var V=m(I,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"time-slider-main-content"},[s("vue-slider",t._b({staticClass:"time-slider",model:{value:t.sliderValue,callback:function(e){t.sliderValue=e},expression:"sliderValue"}},"vue-slider",t.timeSlider,!1))],1)}),[],!1,E,"b4113e16",null,null);function E(t){for(let e in B)this[e]=B[e]}var K=n({name:"SelectorPanel",i18n:{messages:{en:{selectColumn:"Data:",loading:"Loading...",bandwidths:"Widths: 1 pixel =:",timeOfDay:"",colors:"Colors"},de:{selectColumn:"Datenmengen:",loading:"Laden...",bandwidths:"Linienbreiten: 1 pixel =:",timeOfDay:"",colors:"Farben"}}},components:{TimeSlider:function(){return V.exports}()},props:{csvData:{type:Object,required:!0},scaleWidth:{type:Number,required:!0},showDiffs:{type:Boolean,required:!0},vizDetails:{type:Object,required:!0}},data:()=>({isButtonActive:!1,isColorButtonActive:!1,scaleWidthValue:"",debounceScale:{},handleTimeSliderChanged:{}}),computed:{activeColumn(){return this.csvData.activeColumn},buttonTitle(){return this.activeColumn?this.activeColumn:""+this.$i18n.t("loading")}},watch:{scaleWidth(){this.scaleWidthValue=""+this.scaleWidth},scaleWidthValue(){isNaN(parseFloat(this.scaleWidthValue))||this.debounceScale()}},methods:{getColumns(){return Object.values(this.csvData.dataTable).slice(1).filter((t=>t.name&&t.type!==u.LOOKUP)).map((t=>t.name))},gotNewScale(){this.$emit("scale",parseFloat(this.scaleWidthValue))},changeTimeSlider(t){console.log("new slider!",t),t.length&&1===t.length&&(t=t[0]),this.$emit("slider",{dataset:this.csvData,column:t})},handleClickDropdown(){this.isButtonActive=!this.isButtonActive},handleColorRamp(t){console.log(t),this.isColorButtonActive=!1,this.$emit("colors",t)},clearDropdown(){console.log("boop"),this.isButtonActive=!1},async handleSelectColumn(t){console.log("panel: selected",t),this.isButtonActive=!1,this.$emit("column",{dataset:this.csvData,column:t})}},mounted(){this.debounceScale=b.debounce(this.gotNewScale,500),this.handleTimeSliderChanged=b.debounce(this.changeTimeSlider,250),this.scaleWidthValue=""+this.scaleWidth}});const P={};var Y=m(K,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"config-panel"},[t.vizDetails.useSlider&&t.activeColumn?s("div",{staticClass:"panel-item expand"},[s("p",[s("b",[t._v(t._s(t.activeColumn))])]),s("time-slider",{staticClass:"time-slider",attrs:{useRange:!1,stops:t.getColumns(),dropdownValue:t.activeColumn},on:{change:t.handleTimeSliderChanged}})],1):t._e(),t.vizDetails.useSlider?t._e():s("div",{staticClass:"panel-item"},[s("p",[s("b",[t._v(t._s(t.$t("selectColumn")))])]),s("div",{staticClass:"dropdown is-up full-width",class:{"is-active":t.isButtonActive}},[s("div",{staticClass:"dropdown-trigger"},[s("button",{staticClass:"full-width is-warning button",class:{"is-loading":!t.activeColumn},attrs:{"aria-haspopup":"true","aria-controls":"dropdown-menu-column-selector"},on:{click:t.handleClickDropdown}},[s("b",[t._v(t._s(t.buttonTitle))]),t._m(0)])]),s("div",{staticClass:"dropdown-menu",style:{"max-height":"24rem","overflow-y":"auto",border:"1px solid #ccc"},attrs:{id:"dropdown-menu-column-selector",role:"menu"}},[s("div",{staticClass:"dropdown-content"},t._l(t.getColumns(),(function(e){return s("a",{staticClass:"dropdown-item",on:{click:function(s){return t.handleSelectColumn(e)}}},[t._v(t._s(e))])})),0)])])])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("span",{staticClass:"icon is-small"},[e("i",{staticClass:"fas fa-angle-down",attrs:{"aria-hidden":"true"}})])}],!1,q,"3f859606",null,null);function q(t){for(let e in P)this[e]=P[e]}const U=n({name:"NetworkLinksPlugin",i18n:{messages:{en:{all:"All",colors:"Colors",loading:"Loading",selectColumn:"Select data column",timeOfDay:"Time of day",bandwidths:"Widths: 1 pixel =",showDiffs:"Show Differences"},de:{all:"Alle",colors:"Farben",loading:"Wird geladen",selectColumn:"Datenspalte w√§hlen",timeOfDay:"Uhrzeit",bandwidths:"Linienbreiten: 1 pixel =",showDiffs:"Differenzen"}}},components:{SelectorPanel:function(){return Y.exports}(),DrawingTool:F,LinkGlLayer:function({viewId:t=0,links:e={source:new Float32Array,dest:new Float32Array},colorRampType:s=-1,build:i={},base:a={},widths:o={},widthsBase:n={},newColors:c=new Uint8Array,newWidths:d=new Float32Array,dark:h=!1,projection:m="",scaleWidth:f=1,mapIsIndependent:y=!1}){const w=f?1/f:0,[b,D]=l.exports.useState(v.state.viewState),R=i.dataTable[i.activeColumn],F=a.dataTable[a.activeColumn],T=o.dataTable[o.activeColumn],W=0===s||(null==R?void 0:R.type)==u.STRING;function A(t){return j(t,{lowerExp:-6,upperExp:6,precision:5})}function M(t,e,s){try{if(!t)return null;const o=i.csvRowFromLinkRow[s];let n=t.values[o];if(W)return Number.isFinite(n)?`<b>${t.name}</b><p>${A(n)}</p>`:null;let l=null;Number.isFinite(n)&&(l=`<b>${t.name}</b><p>Value: ${A(n)}</p>`);const r=null==a?void 0:a.csvRowFromLinkRow[s];if(r){let t=a?a.dataTable[e.name].values[r]:null,s=n-t;Number.isFinite(t)&&(l+=`<p>Base: ${A(t)}</p>`,l+=`<p>+/- Base: ${A(s)}</p>`)}return l}catch(o){return null}}g[t]=t=>{D(t||v.state.viewState)};const x="Atlantis"==m?z.METER_OFFSETS:z.DEFAULT,N=new C({id:"linkLayer",data:{length:e.source.length/2,attributes:{getSourcePosition:{value:e.source,size:2},getTargetPosition:{value:e.dest,size:2},getColor:{value:c,size:4},getWidth:{value:d,size:1}}},widthUnits:"pixels",widthScale:w,widthMinPixels:.5,widthMaxPixels:50,pickable:!0,coordinateSystem:x,opacity:1,autoHighlight:!0,highlightColor:[255,0,224],offsetDirection:k.RIGHT,updateTriggers:{getSourcePosition:[e.source],getTargetPosition:[e.dest],getColor:[c,h],getWidth:[d]},transitions:{getColor:250,getWidth:250,widthScale:250},parameters:{depthTest:!1}});return r.createElement(S,{layers:[N],viewState:b,controller:!0,pickingRadius:5,getTooltip:function({object:t,index:e}){try{let t=M(R,F,e);if(T&&T.name!==R.name){const s=M(T,n.dataTable[n.activeColumn],e);s&&(t=t?t+s:s)}return t?{html:t,style:{color:h?"#ccc":"#223",backgroundColor:h?"#2a3c4f":"white"}}:null}catch(s){return console.warn(s),null}},getCursor:({isDragging:t,isHovering:e})=>t?"grabbing":e?"pointer":"grab",onClick:function(){console.log("click!")},onViewStateChange:t=>{return e=t.viewState,D(e),e.center=[e.longitude,e.latitude],void(y||v.commit("setMapCamera",e));var e}},r.createElement(L,{mapStyle:v.getters.mapStyle,mapboxApiAccessToken:p}))},ToggleButton:c.exports.ToggleButton,VizConfigurator:T,ZoomButtons:W},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data(){return{standaloneYAMLconfig:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},YAMLrequirementsLinks:{},vizDetails:{title:"",description:"",csvFile:"",csvBase:"",datasets:{},useSlider:!1,showDifferences:!1,shpFile:"",dbfFile:"",network:"",geojsonFile:"",projection:"",center:null,zoom:0,widthFactor:null,thumbnail:"",sum:!1,nodes:"",links:[],mapIsIndependent:!1,display:{color:{},width:{}}},currentUIFilterDefinitions:{},datasets:{},isButtonActiveColumn:!1,linkLayerId:`linklayer-${Math.floor(1e12*Math.random())}`,scaleWidth:0,numLinks:0,showTimeRange:!1,legendStore:new A,geojsonData:{source:new Float32Array,dest:new Float32Array,linkIds:[],projection:""},fixedColors:["#4e79a7"],myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},csvData:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidth:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},csvWidthBase:{datasetKey:"",activeColumn:"",dataTable:{},csvRowFromLinkRow:[]},isDarkMode:this.$store.state.colorScheme===f.DarkMode,isDataLoaded:!1,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",currentWidthDefinition:{columnName:""},myDataManager:this.datamanager||new N(this.root,this.subfolder),resizer:void 0,dataLoaderWorkers:[],csvRowLookupFromLinkRow:{},colorArray:new Uint8Array,widthArray:new Float32Array}},computed:{fileApi(){return new R(this.fileSystem,v)},fileSystem(){const t=this.$store.state.svnProjects.filter((t=>t.slug===this.root));if(0===t.length)throw console.log("no such project"),Error;return t[0]},urlThumbnail(){return this.thumbnailUrl},colorRampType(){var t,e;const s=null==(e=null==(t=this.vizDetails.display.color)?void 0:t.colorRamp)?void 0:e.style;return void 0===s?-1:s},buttonTitle(){return this.csvData.activeColumn||"Loading..."}},watch:{"$store.state.viewState"(){this.vizDetails.mapIsIndependent||g[this.linkLayerId]&&g[this.linkLayerId]()},"$store.state.colorScheme"(){setTimeout((()=>this.isDarkMode=this.$store.state.colorScheme===f.DarkMode),100)},"vizDetails.showDifferences"(){this.generateWidthArray(),this.generateColorArray()}},methods:{setDataIsLoaded(){this.isDataLoaded=!0},async getVizDetails(){const t=this.myState.yamlConfig,e={showDifferences:!1,datasets:{},display:{color:{},width:{}}};if(this.config)return this.validateYAML(),void(this.vizDetails=Object.assign({},e,this.config));if(((null==t?void 0:t.endsWith("yaml"))||(null==t?void 0:t.endsWith("yml")))&&await this.loadStandaloneYamlConfig(),/(shp|xml|geojson|geo\.json)(|\.gz)$/.test(t)){const t="Network: "+this.myState.yamlConfig;this.vizDetails=Object.assign({},this.vizDetails,{network:this.myState.yamlConfig,title:t,description:this.myState.subfolder})}const s=this.vizDetails.title?this.vizDetails.title:t||"Network Links";this.$emit("title",s)},async loadStandaloneYamlConfig(){try{const t=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,e=await this.fileApi.getFileText(t);this.standaloneYAMLconfig=Object.assign({},h.parse(e)),this.validateYAML(),this.setVizDetails()}catch(t){console.error("failed");const e=t;this.fileSystem.needPassword&&401===e.status&&this.$store.commit("requestLogin",this.fileSystem.slug)}},async validateYAML(){let t;new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?(console.log("has yaml"),t=this.standaloneYAMLconfig):(console.log("no yaml"),t=this.config);for(const e in this.YAMLrequirementsLinks)e in t==!1&&this.$store.commit("setStatus",{type:y.ERROR,msg:`YAML file missing required key: ${e}`,desc:"Check this.YAMLrequirementsLinks for required keys"});(t.zoom<5||t.zoom>20)&&this.$store.commit("setStatus",{type:y.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "});!t.network&&t.geojsonFile&&this.$store.commit("setStatus",{type:y.WARNING,msg:"YAML field geojsonFile deprecated",desc:"Use YAML field network instad. "}),t.display||this.$store.commit("setStatus",{type:y.WARNING,msg:"Display properties not set",desc:"Standard values are used"})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail),e=await d.arraybuffer(t),s=x(e);s&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${s})`)}catch(t){console.error(t)}},toggleShowDiffs(){this.vizDetails.showDifferences=!this.vizDetails.showDifferences},changeConfiguration(t){t.color&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.color=t.color,this.handleNewColor(t.color)),t.width&&(this.vizDetails=Object.assign({},this.vizDetails),this.vizDetails.display.width=t.width,this.handleNewWidth(t.width)),t.dataset&&this.handleNewDataset(t.dataset)},handleNewFilter(t){this.csvData=Object.assign({},this.csvData,{activeColumn:t[0]}),this.csvWidth=Object.assign({},this.csvWidth,{activeColumn:t[0]})},handleNewWidth(t){if(function(t,e){if(t===e)return!0;if(!t||!e)return!1;var s=Object.keys(t),i=Object.keys(e),a=s.length;if(i.length!==a)return!1;for(var o=0;o<a;o++){var n=s[o];if(t[n]!==e[n]||!Object.prototype.hasOwnProperty.call(e,n))return!1}return!0}(t,this.currentWidthDefinition))return;const{columnName:e,dataset:s,scaleFactor:i}=t;if(!s)return void(this.scaleWidth=0);void 0!==i&&(this.scaleWidth=i);let a=!0;if(e||(a=!1),t.columnName===this.currentWidthDefinition.columnName&&t.dataset===this.currentWidthDefinition.dataset&&(a=!1),this.currentWidthDefinition=t,!a)return;const o=s?this.datasets[s]:this.csvWidth.dataTable;if(!o)return;this.csvWidth.dataTable!==o&&(this.csvWidth.dataTable=o,this.csvWidth.activeColumn=e||"",this.csvWidthBase.activeColumn=e||"");if(!o[e||""]){const t=`Width: column "${e}" not found in dataset "${this.csvData.datasetKey}"`;return console.error(t),void this.$store.commit("setStatus",{type:y.ERROR,msg:t})}this.csvWidth={datasetKey:s||this.csvWidth.datasetKey,dataTable:o,activeColumn:e||"",csvRowFromLinkRow:s?this.csvRowLookupFromLinkRow[s]:[]},this.generateWidthArray()},handleNewColor(t){this.fixedColors=t.fixedColors;const e=t.columnName;if(!e)return void this.generateColorArray();const s=t.dataset,i=this.datasets[s];if(!i)return;this.csvData.dataTable!==i&&(this.csvData={datasetKey:s,dataTable:i,activeColumn:"",csvRowFromLinkRow:this.csvRowLookupFromLinkRow[s]});const a=this.csvData.dataTable[e];if(!a){const t=`Color: Column "${e}" not found in dataset "${this.csvData.datasetKey}"`;return console.error(t),void this.$store.commit("setStatus",{type:y.ERROR,msg:t})}this.csvData.activeColumn=a.name,this.csvBase.activeColumn=a.name,this.isButtonActiveColumn=!1,this.generateColorArray()},setMapCenterFromVizDetails(){"string"==typeof this.vizDetails.center&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number)),this.vizDetails.zoom||(this.vizDetails.zoom=9),this.$store.commit("setMapCamera",{longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom,jump:!1});const t={longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom||10,jump:!1};g[this.linkLayerId]&&g[this.linkLayerId](t)},async setMapCenter(){if(this.vizDetails.center)return this.setMapCenterFromVizDetails();const t=this.geojsonData;if(!t.source.length)return;let e=0,s=0,i=0;if(console.log({projection:this.geojsonData.projection}),"Atlantis"===this.geojsonData.projection){const e="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs",a=M.toLngLat(e,[t.source[0],t.source[1]]);s=a[0],i=a[1]}else{const a=t.source.length/2,o=a<4096?2:1024;for(let n=0;n<a;n+=o)s+=t.source[2*n],i+=t.source[2*n+1],e++;s/=e,i/=e}console.log("center",s,i),this.$store.commit("setMapCamera",{longitude:s,latitude:i,bearing:0,pitch:0,zoom:8,jump:!1})},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const t=document.getElementById(`container-${this.linkLayerId}`);this.resizer.observe(t)},moveLogo(){const t=document.getElementById(`container-${this.linkLayerId}`),e=null==t?void 0:t.querySelector(".mapboxgl-ctrl-bottom-left");if(e){const s=t.clientWidth>640?"280px":"36px";e.style.right=s}},async updateStatus(t){this.myState.statusMessage=t},async loadNetwork(){if(!this.myDataManager)throw Error("links: no datamanager");this.myState.statusMessage="Loading network...";const t=this.vizDetails.network||this.vizDetails.geojsonFile;try{const e=await this.myDataManager.getRoadNetwork(t,this.myState.subfolder,this.vizDetails,this.updateStatus);this.numLinks=e.linkIds.length,this.geojsonData=e,"Atlantis"==e.projection&&(this.vizDetails.projection="Atlantis",this.$store.commit("setMapStyles",w)),this.setMapCenter(),this.myState.statusMessage="",this.moveLogo(),this.$emit("isLoaded",!0),this.loadCSVFiles()}catch(e){this.$store.commit("error",""+e),this.$emit("isLoaded")}},handleNewDataset(t){console.log("NEW dataset",t);const{key:e,dataTable:s,filename:i}=t,a=s[Object.keys(s)[0]];let n={};for(let o=0;o<a.values.length;o++)n[a.values[o]]=o;const l=[];for(let o=0;o<this.geojsonData.linkIds.length;o++){const t=n[this.geojsonData.linkIds[o]];void 0!==t&&(l[o]=t)}this.csvRowLookupFromLinkRow[e]=l,n={},i&&(this.vizDetails.datasets[e]=i),this.datasets=Object.assign(o({},this.datasets),{[e]:s}),this.handleDatasetisLoaded(e)},generateWidthArray(){var t,e,s,i;const a=this.geojsonData.linkIds.length,o=new Float32Array(a),n=null==(e=null==(t=this.csvWidth)?void 0:t.dataTable[this.csvWidth.activeColumn])?void 0:e.values,l=null==(i=null==(s=this.csvBase)?void 0:s.dataTable[this.csvBase.activeColumn])?void 0:i.values,r=t=>{const e=this.csvWidth.csvRowFromLinkRow[t],s=n[e];if(this.vizDetails.showDifferences){const e=this.csvBase.csvRowFromLinkRow[t],i=l[e];return Math.abs(s-i)}return s};for(let c=0;c<a;c++)o[c]=r(c);this.widthArray=o},generateColorArray(){const t=this.fixedColors.map((t=>{const e=O(t);return[e.r,e.g,e.b,255]})),e=new Array(this.fixedColors.length-1).fill(0).map(((t,e)=>Math.pow(1/this.fixedColors.length*(e+1),4))),s=this.csvData.dataTable,i=this.csvBase.dataTable,a=this.csvData.activeColumn,o=s[a]||{values:[]};i[a];const n=0===this.colorRampType||o.type==u.STRING,l=n?$().range(t):_().range(t).domain(e),r=this.geojsonData.linkIds.length,c=new Uint8Array(4*r),d=v.state.isDarkMode?[80,80,80,96]:[212,212,212,40],h=[0,0,0,0],m=e=>{var r;const c=this.csvData.csvRowFromLinkRow[e];let m=null==(r=s[this.csvData.activeColumn])?void 0:r.values[c];if(1===this.fixedColors.length)return t[0];if(!m&&!this.vizDetails.showDifferences)return h;if(n)return l(m);if(this.vizDetails.showDifferences){const t=this.csvBase.csvRowFromLinkRow[e],s=m-i[a].values[t];return 0===s?d:this.isDarkMode?s>0?[255,64,64,255]:[64,96,255,255]:s>0?[255,0,0,255]:[32,64,255,255]}{let t=m/(o.max||1);return l(t)}};for(let u=0;u<r;u++)c.set(m(u),4*u);this.colorArray=c},loadCSVFiles(){this.myState.statusMessage="Loading datasets...",this.vizDetails.datasets||(this.vizDetails.datasets={}),this.vizDetails.csvFile&&(this.vizDetails.datasets.csvFile=this.vizDetails.csvFile),this.vizDetails.csvBase&&(this.vizDetails.datasets.csvBase=this.vizDetails.csvBase);const t=Object.entries(this.vizDetails.datasets);if(t.length)for(const[e,s]of t)this.loadOneCSVFile(e,s);else this.showSimpleNetworkWithNoDatasets()},showSimpleNetworkWithNoDatasets(){this.csvData={datasetKey:"",dataTable:{_LINK_OFFSET_:{name:"_LINK_OFFSET_",type:u.LOOKUP,values:[]}},activeColumn:"_LINK_OFFSET_",csvRowFromLinkRow:[]};const t=this.geojsonData.source.length/2,e=[...Array(t).keys()];this.csvData.dataTable._LINK_OFFSET_.values=e,this.myState.statusMessage="",this.setDataIsLoaded();const s={fixedColors:this.fixedColors,dataset:"",columnName:"",normalize:""};this.changeConfiguration({color:s})},handleDatasetisLoaded(t){const e=Object.keys(this.datasets);if("csvBase"===t||"base"===t)this.csvBase={datasetKey:t,dataTable:this.datasets[t],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[t],activeColumn:""},this.csvWidthBase={datasetKey:t,dataTable:this.datasets[t],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[t],activeColumn:""};else if(""===this.csvData.activeColumn&&!this.vizDetails.display.color&&!this.vizDetails.display.width){const e=Object.values(this.datasets[t])[0].name;this.csvData={datasetKey:t,dataTable:this.datasets[t],csvRowFromLinkRow:this.csvRowLookupFromLinkRow[t],activeColumn:e}}e.length===Object.keys(this.vizDetails.datasets).length&&(this.setDataIsLoaded(),this.myState.statusMessage="",console.log({DATASETS:this.datasets}))},async loadOneCSVFile(t,e){try{const s=(await this.myDataManager.getDataset({dataset:e})).allRows;console.log("loaded",t),this.myState.statusMessage="Analyzing...";const i={};for(const t of Object.keys(s))t&&(i[t]=s[t]);this.datasets=Object.assign(o({},this.datasets),{[t]:i}),this.handleNewDataset({key:t,dataTable:i})}catch(s){this.$store.commit("error","Could not load "+e),this.$emit("isLoaded")}},handleNewDataColumn(t){const{dataset:e,column:s}=t,i={};if(e.datasetKey===this.csvWidth.datasetKey){const t=o({},this.vizDetails.display.width);t.columnName=s,i.width=t}if(e.datasetKey===this.csvData.datasetKey){const t=o({},this.vizDetails.display.color);t.columnName=s,i.color=t}this.changeConfiguration(i)}},async mounted(){var t,e,s;this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=null!=(t=this.yamlConfig)?t:"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),this.scaleWidth=(null==(s=null==(e=this.vizDetails.display)?void 0:e.width)?void 0:s.widthFactor)||250,this.thumbnail?this.buildThumbnail():(this.setupLogoMover(),this.loadNetwork())},beforeDestroy(){delete g[this.linkLayerId];try{for(const t of this.dataLoaderWorkers)t.terminate()}catch(t){}this.$store.commit("setFullScreen",!1)}});const G={};var H=m(U,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"link-volume-plot",class:{"hide-thumbnail":!t.thumbnail},style:{background:t.urlThumbnail},attrs:{oncontextmenu:"return false"}},[t.thumbnail?t._e():s("div",{staticClass:"plot-container",attrs:{id:`container-${t.linkLayerId}`}},[s("link-gl-layer",{staticClass:"map-area",attrs:{viewId:t.linkLayerId,links:t.geojsonData,colorRampType:t.colorRampType,build:t.csvData,base:t.csvBase,widths:t.csvWidth,widthsBase:t.csvWidthBase,dark:t.isDarkMode,newColors:t.colorArray,newWidths:t.widthArray,scaleWidth:t.scaleWidth,projection:t.vizDetails.projection,mapIsIndependent:t.vizDetails.mapIsIndependent}}),t.thumbnail?t._e():s("zoom-buttons"),!t.thumbnail&&t.isDataLoaded?s("viz-configurator",{attrs:{vizDetails:t.vizDetails,datasets:t.datasets,fileSystem:t.fileSystem,subfolder:t.myState.subfolder,yamlConfig:t.yamlConfig,legendStore:t.legendStore,filterDefinitions:t.currentUIFilterDefinitions},on:{update:t.changeConfiguration}}):t._e(),t.thumbnail?t._e():s("div",{staticClass:"bottom-panel"},[t.myState.statusMessage?s("div",{staticClass:"status-message"},[s("p",[t._v(t._s(t.myState.statusMessage))])]):t._e(),s("div",{directives:[{name:"show",rawName:"v-show",value:t.csvWidth.activeColumn,expression:"csvWidth.activeColumn"}],staticClass:"panel-items"},[s("div",{staticClass:"panel-item config-section"},[s("selector-panel",{attrs:{vizDetails:t.vizDetails,csvData:t.csvWidth,scaleWidth:t.scaleWidth,showDiffs:t.vizDetails.showDifferences},on:{column:t.handleNewDataColumn,slider:t.handleNewDataColumn}})],1),t.vizDetails.datasets.csvBase?s("div",{staticClass:"panel-item diff-section"},[s("toggle-button",{staticClass:"toggle",attrs:{width:40,value:t.vizDetails.showDifferences,sync:!0,labels:!1,color:{checked:"#4b7cc4",unchecked:"#222"}},on:{change:t.toggleShowDiffs}}),s("p",[s("b",[t._v(t._s(t.$t("showDiffs")))])])],1):t._e()])])],1)])}),[],!1,Z,"638a1e70",null,null);function Z(t){for(let e in G)this[e]=G[e]}var J=function(){return H.exports}();export{J as default};
//# sourceMappingURL=NetworkLinks.4be167ce.js.map
