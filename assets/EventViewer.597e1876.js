import{r as t,R as e,d as i}from"./vendor.e9c367ae.js";import{T as s,G as a}from"./TimeSlider.cdf580ab.js";import{b as o}from"./index.3d2ad359.js";import{c as n}from"./index.7080a99e.js";import{u as r}from"./util.b5d45f97.js";import{R as l,g as h,M as m,S as g,n as c}from"./index.2deacc07.js";import{C as d}from"./CollapsiblePanel.58a8eae6.js";import{D as u}from"./DrawingTool.daac4c85.js";import{H as p}from"./HTTPFileSystem.e57ad358.js";import{L as f}from"./LegendBox.0a0c86dd.js";import{L as y}from"./LegendStore.11164198.js";import{D as v,S as b}from"./deckgl.61194435.js";import{I as S,W as w}from"./moving-icons-vehicles-layer.02757695.js";import{D as k}from"./data-filter.bf997cc2.js";import{S as C}from"./text-layer.f1b6c0de.js";import{Z as D}from"./ZoomButtons.e860a156.js";import{D as T}from"./DashboardDataManager.e0d06cdd.js";import"./layer.b20bd88e.js";import"./path-layer.f17fbd6c.js";import"./extends.f4cf4404.js";import"./index.84f8ccb6.js";import"./icon-manager.2c4c9b5c.js";import"./layer-extension.27ef9a68.js";import"./RoadNetworkLoader.worker.30fe4a65.js";import"./index.5877f313.js";const L={marker:{x:0,y:0,width:128,height:128,mask:!0},info:{x:128,y:0,width:128,height:128,mask:!0},vehicle:{x:128,y:128,width:128,height:128,mask:!0},diamond:{x:0,y:128,width:128,height:128,mask:!1}},z=new k({filterSize:1}),M={pitch:0,zoom:8,bearing:0,longitude:14,latitude:52};const A=i({name:"EventViewerPlugin",i18n:{messages:{en:{loading:"Loading data...",sorting:"Sorting into bins...",aggregate:"Summary",maxHeight:"3D Height",showDetails:"Show Details",selection:"Selection",areas:"Areas",count:"Count",promptCRS:'Enter the coordinate reference system, e.g. EPSG:25832\n\nThese coordinates are not in long/lat format. To fix this permanently, convert them to long/lat or add "# EPSG:xxxx" to your CSV header'},de:{loading:"Dateien laden...",sorting:"Sortieren...",aggregate:"Daten",maxHeight:"3-D Höhe",showDetails:"Details anzeigen",selection:"Ausgewählt",areas:"Orte",count:"Anzahl"}}},components:{CollapsiblePanel:d,DrawingTool:u,EventMap:function({viewId:i=0,eventLayers:s=[],network:a={},linkIdLookup:o={},timeFilter:n=[],dark:r=!1,colors:g=[[1,0,0],[.25,.25,1]],breakpoints:c=[0],radius:d=5,mapIsIndependent:u=!1,simulationTime:p=2e4}){const[f,y]=t.exports.useState(M);function w(t){return t.index<0?null:"hi"}l[i]=()=>{y(h.state.viewState)};const k=[...s.map(((t,e)=>{const i=t.times[0]>n[1]||t.times[t.times.length-1]<n[0];return new C({data:{length:t.times.length,attributes:{getFilterValue:{value:t.times,size:1},getPosition:{value:t.positions,size:2}}},autoHighlight:!0,breakpoints:c,colors:g,extensions:[z],id:"hello"+e,filled:!0,filterRange:n.length?n:null,getRadius:20,getFillColor:[240,128,10],highlightColor:[255,0,224],opacity:1,parameters:{depthTest:!1},pickable:!0,radiusScale:1,stroked:!1,updateTriggers:{getPosition:s,getFilterValue:n},visible:!i})})),...s.map(((t,e)=>{const i=t.vehicles.t0[0]>n[1]||t.vehicles.t1[t.vehicles.t1.length-1]<n[0];return new S({data:{length:t.vehicles.t0.length,attributes:{getTimeStart:{value:t.vehicles.t0,size:1},getTimeEnd:{value:t.vehicles.t1,size:1},getPathStart:{value:t.vehicles.locO,size:2},getPathEnd:{value:t.vehicles.locD,size:2}}},id:"vehicles"+e,getColor:[64,96,255],iconMoving:"vehicle",iconStill:"diamond",getSize:20,opacity:1,currentTime:p,shadowEnabled:!0,iconAtlas:"/simwrapper//images/icon-atlas.png",iconMapping:L,sizeScale:1,billboard:!1,pickable:!0,depthTest:!0,autoHighlight:!1,highlightColor:[255,0,255],parameters:{depthTest:!1},visible:!i})}))];return e.createElement(v,{layers:k,controller:!0,useDevicePixels:!0,viewState:f,onViewStateChange:t=>{var e;(e=t.viewState).latitude&&(e.center||(e.center=[0,0]),e.center[0]=e.longitude,e.center[1]=e.latitude,y(e),u||h.commit("setMapCamera",e))},pickingRadius:4,onClick:w,getTooltip:w},e.createElement(b,{mapStyle:h.getters.mapStyle,preventStyleDiffing:!0,mapboxApiAccessToken:m}))},LegendBox:f,TimeSlider:s,ZoomButtons:D},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean,datamanager:{type:Object}},data:()=>({myDataManager:null,network:{source:new Float32Array,dest:new Float32Array,linkIds:[]},linkIdLookup:{},guiConfig:{buckets:7,exponent:4,radius:5,"clip max":100,"color ramp":"viridis",flip:!1,colorRamps:["bathymetry","electric","inferno","jet","magma","par","viridis"]},viewId:"xyt-id-"+Math.floor(1e12*Math.random()),configId:"gui-config-"+Math.floor(1e12*Math.random()),timeLabels:[0,1],startTime:0,isAnimating:!1,timeFilter:[0,3599],colors:[[128,128,128],[128,128,128]],breakpoints:[0],range:[1/0,-1/0],timeRange:[1/0,-1/0],legendStore:null,standaloneYAMLconfig:{title:"",description:"",file:"",projection:"",thumbnail:"",radius:250,maxHeight:0,center:null,zoom:9},YAMLrequirementsXY:{file:""},columnLookup:[],gzipWorker:null,vizDetails:{title:"",description:"",file:"",projection:"",thumbnail:"",center:null,zoom:9},myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},eventLayers:[],isLoaded:!1,animator:null,guiController:null,resizer:null,thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",ANIMATE_SPEED:.25,animationElapsedTime:0,animationClockTime:0}),computed:{fileApi(){return new p(this.fileSystem,h)},fileSystem(){const t=this.$store.state.svnProjects.filter((t=>t.slug===this.root));if(0===t.length)throw console.log("no such project"),Error;return t[0]},urlThumbnail(){return this.thumbnailUrl}},watch:{"$store.state.viewState"(){l[this.viewId]&&l[this.viewId]()}},methods:{handleTimeSliderValues(t){this.animationElapsedTime=t[0],this.timeFilter=t,this.timeLabels=[this.convertSecondsToClockTimeMinutes(t[0]),this.convertSecondsToClockTimeMinutes(t[1])]},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const t=document.getElementById(`id-${this.viewId}`);this.resizer.observe(t)},moveLogo(){const t=document.getElementById(`${this.viewId}`),e=null==t?void 0:t.querySelector(".mapboxgl-ctrl-bottom-left");if(e){const i=t.clientWidth>640?"280px":"36px";e.style.right=i}},setupGui(){this.guiController=new a({title:"Color Settings",injectStyles:!0,width:200,container:document.getElementById(this.configId)||void 0});const t=this.guiController;t.add(this.guiConfig,"buckets",2,19,1).onChange(this.setColors),t.add(this.guiConfig,"exponent",1,10,1).onChange(this.setColors),t.add(this.guiConfig,"clip max",0,100,1).onChange(this.setColors),t.add(this.guiConfig,"radius",1,20,1),t.add(this.guiConfig,"color ramp",this.guiConfig.colorRamps).onChange(this.setColors),t.add(this.guiConfig,"flip").onChange(this.setColors)},async solveProjection(){if(!this.thumbnail){console.log("WHAT PROJECTION:");try{const t=await this.fileApi.getFileText(this.myState.subfolder+"/"+this.myState.yamlConfig);this.vizDetails=o.parse(t)}catch(t){console.error(t)}}},async getVizDetails(){if(this.config)return this.validateYAML(),void(this.vizDetails=Object.assign({},this.config));new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?await this.loadStandaloneYAMLConfig():this.setConfigForRawCSV()},setConfigForRawCSV(){this.vizDetails={title:"EVENTS: "+this.myState.yamlConfig,description:this.myState.yamlConfig,file:this.myState.yamlConfig,projection:"EPSG:4326",center:this.vizDetails.center,zoom:this.vizDetails.zoom},this.$emit("title",this.vizDetails.title||this.vizDetails.file)},async loadStandaloneYAMLConfig(){if(this.fileApi)try{const t=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,e=await this.fileApi.getFileText(t);this.standaloneYAMLconfig=Object.assign({},o.parse(e)),this.validateYAML(),this.setVizDetails()}catch(t){console.log("failed"),this.$store.commit("setStatus",{type:g.ERROR,msg:"File not found",desc:`Could not find: ${this.myState.subfolder}/${this.myState.yamlConfig}`})}},validateYAML(){let t;new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?(console.log("has yaml"),t=this.standaloneYAMLconfig):(console.log("no yaml"),t=this.config);for(const e in this.YAMLrequirementsXY)e in t==!1&&this.$store.commit("setStatus",{type:g.ERROR,msg:`YAML file missing required key: ${e}`,desc:"Check this.YAMLrequirementsXY for required keys"});0==t.radius&&this.$store.commit("setStatus",{type:g.WARNING,msg:"Radius set to zero",desc:"Radius can not be zero, preset value used instead. "}),(t.zoom<5||t.zoom>20)&&this.$store.commit("setStatus",{type:g.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig);const t=this.vizDetails.title?this.vizDetails.title:"EVENTS: "+this.vizDetails.file;this.$emit("title",t)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail),e=await t.arrayBuffer(),i=r.arrayBufferToBase64(e);i&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${i})`)}catch(t){console.error(t)}},async streamEventFile(t){this.myState.statusMessage="Loading file...";let e=0;this.range=[1/0,-1/0],this.timeRange=[1/0,-1/0],this.animationElapsedTime=0,this.timeFilter=[0,59],this.gzipWorker&&this.gzipWorker.terminate(),this.eventLayers=[],this.gzipWorker=new w;const i=Intl.NumberFormat();this.gzipWorker.onmessage=async t=>{const s=t.data;if(s.status)this.myState.statusMessage=s.status;else if(s.error)this.myState.statusMessage=s.error,this.$store.commit("setStatus",{type:g.ERROR,msg:"XYT Loading Error",desc:`Error loading: ${this.myState.subfolder}/${this.vizDetails.file}`});else if(s.finished)this.finishedLoadingData(e,s);else{const t=s.events;console.log(t.length),e+=t.length,this.myState.statusMessage="Loading "+i.format(e)+" events",this.timeRange=[Math.min(this.timeRange[0],t[0].time),Math.max(this.timeRange[1],t[t.length-1].time)],this.timeRange=[Math.min(this.timeRange[0],s.vehicleTrips[0].t0),Math.max(this.timeRange[1],s.vehicleTrips[s.vehicleTrips.length-1].t1)];const a=t.map((t=>({time:t.time,link:t.link}))),o=new Float32Array(2*a.length).fill(NaN);for(let e=0;e<a.length;e++){const t=2*this.linkIdLookup[a[e].link];o[2*e]=this.network.source[t],o[2*e+1]=this.network.source[t+1]}const n=s.vehicleTrips.length,r={locO:new Float32Array(2*n).fill(NaN),locD:new Float32Array(2*n).fill(NaN),t0:new Float32Array(n).fill(NaN),t1:new Float32Array(n).fill(NaN)};for(let e=0;e<n;e++){const t=s.vehicleTrips[e],i=2*this.linkIdLookup[t.link];r.locO[2*e+0]=this.network.source[0+i],r.locO[2*e+1]=this.network.source[1+i],r.locD[2*e+0]=this.network.dest[0+i],r.locD[2*e+1]=this.network.dest[1+i],0==e?(r.locO[2*e+0]=.5*(r.locO[2*e+0]+r.locD[2*e+0]),r.locO[2*e+1]=.5*(r.locO[2*e+1]+r.locD[2*e+1])):e==n-1&&(r.locD[2*e+0]=.5*(r.locO[2*e+0]+r.locD[2*e+0]),r.locD[2*e+1]=.5*(r.locO[2*e+1]+r.locD[2*e+1])),r.t0[e]=t.t0,r.t1[e]=t.t1}this.eventLayers.push({events:t.slice(1,2),positions:o,vehicles:r,times:s.times})}},this.gzipWorker.postMessage({filePath:t,fileSystem:this.fileSystem,projection:this.vizDetails.projection})},setFirstZoom(t,e){const i=.5*(t[0]+t[2*e-2]),s=.5*(t[1]+t[2*e-1]);Number.isFinite(i)&&Number.isFinite(s)&&h.commit("setMapCamera",Object.assign({},h.state.viewState,{longitude:i,latitude:s,zoom:10}))},finishedLoadingData(t,e){this.isLoaded=!0,this.range=e.range,this.myState.statusMessage="",this.timeFilter=[this.timeRange[0],this.timeRange[0]+59],this.gzipWorker&&this.gzipWorker.terminate(),this.setColors(),this.moveLogo(),console.log("ALL DONE",{totalRows:t,data:e.range,time:this.timeRange,layers:this.eventLayers.length})},toggleAnimation(){this.isAnimating=!this.isAnimating,this.isAnimating&&(this.animationElapsedTime=this.timeFilter[0]-this.timeRange[0],this.startTime=Date.now()-this.animationElapsedTime/this.ANIMATE_SPEED,this.animate())},setColors(){const t=this.guiConfig.exponent;let e=n({colormap:this.guiConfig["color ramp"],nshades:256,format:"rba",alpha:1}).map((t=>[t[0],t[1],t[2]]));this.guiConfig.flip&&(e=e.reverse());const i=256/(this.guiConfig.buckets-1),s=[];for(let n=0;n<this.guiConfig.buckets-1;n++)s.push(e[Math.round(i*n)]);s.push(e[255]);const a=Math.pow(this.range[1],1/t)*this.guiConfig["clip max"]/100,o=[];for(let n=1;n<this.guiConfig.buckets;n++){const e=a*n/this.guiConfig.buckets,i=Math.pow(e,t);o.push(i)}this.isLoaded&&this.setLegend(s,o),this.colors=s,this.breakpoints=o},setLegend(t,e){this.range[1]-this.range[0]!=0&&(this.legendStore=new y,this.legendStore.setLegendSection({section:"Legend",column:"Legend",values:t.map(((i,s)=>{const a=e[0==s?s:s-1];let o=""+Math.round(1e6*a)/1e6;return 0==s&&(o="< "+o),s==t.length-1&&(o="> "+o),{label:o,value:i}}))}))},async loadNetwork(){if(!this.myDataManager)throw Error("event viewer: no datamanager");let t=this.vizDetails.file.replace("events.xml","network.xml");const e=await this.myDataManager.getRoadNetwork(t,this.myState.subfolder,Object.assign({projection:"25833"},this.vizDetails)),i={};let s=0;for(const a of e.linkIds)i[`${a}`]=s,s++;return{network:e,linkIdLookup:i}},async loadFiles(){const{network:t,linkIdLookup:e}=await this.loadNetwork();this.network=t,this.linkIdLookup=e;if(!this.fileApi)return{dataArray:[]};try{let t=`${this.myState.subfolder}/${this.vizDetails.file}`;await this.streamEventFile(t)}catch(i){console.error(i),this.myState.statusMessage=""+i,this.$store.commit("setStatus",{type:g.ERROR,msg:"Loading/Parsing Error",desc:"Error loading/parsing: ${this.myState.subfolder}/${this.vizDetails.file}"})}},animate(){if(!this.isAnimating)return;this.animationElapsedTime=this.ANIMATE_SPEED*(Date.now()-this.startTime),this.animationClockTime=this.animationElapsedTime+this.timeRange[0],this.animationClockTime>this.timeRange[1]&&(this.startTime=Date.now(),this.animationElapsedTime=0);const t=this.timeFilter[1]-this.timeFilter[0];this.timeFilter=[this.animationClockTime,this.animationClockTime+t],this.animator=window.requestAnimationFrame(this.animate)},convertSecondsToClockTimeMinutes(t){const e=Math.floor(t/3600),i=Math.floor((t-3600*e)/60),s=t-3600*e-60*i,a=`${e}`,o=`${i}`.padStart(2,"0");`${s}`.padStart(2,"0");return`${a}:${o}`}},async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,this.myDataManager=this.datamanager||new T(this.root,this.subfolder),await this.getVizDetails(),await this.buildThumbnail(),this.thumbnail||(this.setupLogoMover(),this.myState.statusMessage=`${this.$i18n.t("loading")}`,this.isLoaded||await this.loadFiles())},beforeDestroy(){l[this.viewId]=void 0,delete l[this.viewId];try{this.gzipWorker&&(this.gzipWorker.postMessage({terminate:!0}),this.gzipWorker.terminate()),this.guiController&&this.guiController.destroy()}catch(t){console.warn(t)}this.animator&&window.cancelAnimationFrame(this.animator),this.$store.commit("setFullScreen",!1)}});const E={};var x=c(A,(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"viz-plugin",attrs:{oncontextmenu:"return false",id:`id-${t.viewId}`}},[!t.thumbnail&&t.isLoaded?i("event-map",{staticClass:"map-layer",attrs:{viewId:t.viewId,eventLayers:t.eventLayers,network:t.network,linkIdLookup:t.linkIdLookup,timeFilter:t.timeFilter,dark:this.$store.state.isDarkMode,colors:this.colors,breakpoints:this.breakpoints,radius:this.guiConfig.radius,mapIsIndependent:!1,simulationTime:t.timeFilter[1]}}):t._e(),t.thumbnail?t._e():i("zoom-buttons",{attrs:{corner:"bottom"}}),i("div",{staticClass:"top-right"},[i("div",{staticClass:"gui-config",attrs:{id:t.configId}})]),i("div",{staticClass:"bottom-right"},[t.legendStore?i("div",{staticClass:"legend-area"},[i("legend-box",{attrs:{legendStore:t.legendStore}})],1):t._e()]),t.isLoaded?i("time-slider",{staticClass:"time-slider-area",attrs:{range:t.timeRange,activeTimeExtent:t.timeFilter,labels:t.timeLabels,isAnimating:t.isAnimating},on:{timeExtent:t.handleTimeSliderValues,toggleAnimation:t.toggleAnimation,drag:function(e){t.isAnimating=!1}}}):t._e(),!t.thumbnail&&t.myState.statusMessage?i("div",{staticClass:"message"},[i("p",{staticClass:"status-message"},[t._v(t._s(t.myState.statusMessage))])]):t._e()],1)}),[],!1,R,"74f7b665",null,null);function R(t){for(let e in E)this[e]=E[e]}var j=function(){return x.exports}();export{j as default};
//# sourceMappingURL=EventViewer.597e1876.js.map
