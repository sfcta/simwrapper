{"version":3,"file":"PathTraceLayer.8ed3807c.js","sources":["../../src/components/PlaybackControls.vue","../../src/components/PlaybackControls.vue?vue&type=template&lang.js","../../node_modules/@deck.gl/core/dist/esm/effects/lighting/point-light.js","../../src/layers/moving-icons/moving-icons-layer.ts","../../src/layers/PathTraceLayer.ts"],"sourcesContent":["<template lang=\"pug\">\r\n.slider-thingy\r\n  b-slider.slider(\r\n    v-model=\"sliderValue\"\r\n    v-bind=\"sliderOptions\"\r\n    size=\"is-large\"\r\n    @dragging=\"dragging\"\r\n    @dragstart=\"dragStart\"\r\n    @dragend=\"dragEnd\")\r\n\r\n  .buttons\r\n    .playpause(@click='toggleSimulation')\r\n      i.button-icon.fa.fa-1x.fa-pause(v-if=\"isRunning\")\r\n      i.button-icon.fa.fa-1x.fa-play(v-else)\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport * as timeConvert from 'convert-seconds'\r\n\r\nexport default defineComponent({\r\n  name: 'PlaybackControls',\r\n  props: {\r\n    isRunning: { type: Boolean, required: true },\r\n    timeStart: { type: Number, required: true },\r\n    timeEnd: { type: Number, required: true },\r\n    currentTime: { type: Number, required: true },\r\n  },\r\n  data: () => {\r\n    return {\r\n      pauseWhileDragging: false,\r\n      sliderValue: 0,\r\n      sliderOptions: {\r\n        min: 0,\r\n        max: 1000000,\r\n        clickable: false,\r\n        duration: 0,\r\n        lazy: true,\r\n        tooltip: true,\r\n        'tooltip-placement': 'top',\r\n      } as any,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.sliderOptions['custom-formatter'] = (v: number) => {\r\n      return this.convertSecondsToClockTimeMinutes(v)\r\n    }\r\n    window.addEventListener('keyup', this.onKeyPressed)\r\n  },\r\n\r\n  beforeDestroy() {\r\n    window.removeEventListener('keyup', this.onKeyPressed)\r\n  },\r\n  watch: {\r\n    currentTime() {\r\n      this.sliderValue =\r\n        (1000000.0 * (this.currentTime - this.timeStart)) / (this.timeEnd - this.timeStart)\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    toggleSimulation() {\r\n      this.$emit('click')\r\n    },\r\n\r\n    convertSecondsToClockTimeMinutes(index: number) {\r\n      const seconds = this.getSecondsFromSlider(index)\r\n\r\n      try {\r\n        const hms = timeConvert(seconds)\r\n        const minutes = ('00' + hms.minutes).slice(-2)\r\n        return `${hms.hours}:${minutes}`\r\n      } catch (e) {\r\n        return '00:00'\r\n      }\r\n    },\r\n\r\n    dragStart() {\r\n      if (this.isRunning) {\r\n        this.pauseWhileDragging = true\r\n        this.$emit('click')\r\n      }\r\n    },\r\n\r\n    dragEnd() {\r\n      if (this.pauseWhileDragging) this.$emit('click')\r\n      this.pauseWhileDragging = false\r\n    },\r\n\r\n    dragging(value: number) {\r\n      this.$emit('time', this.getSecondsFromSlider(value))\r\n    },\r\n\r\n    onKeyPressed(ev: KeyboardEvent) {\r\n      if (ev.code === 'Space') this.toggleSimulation()\r\n    },\r\n\r\n    getSecondsFromSlider(value: number) {\r\n      let seconds = ((this.timeEnd - this.timeStart) * value) / 1000000.0\r\n      if (seconds === this.timeEnd) seconds = this.timeEnd - 1\r\n      return seconds\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\n.slider-thingy {\r\n  display: flex;\r\n  flex-direction: row;\r\n  z-index: 1;\r\n}\r\n\r\n.slider {\r\n  margin: auto 0;\r\n  flex: 1;\r\n  font-weight: bold;\r\n}\r\n\r\n.buttons {\r\n  margin: 0 0 0 2rem;\r\n}\r\n\r\n.playpause {\r\n  width: 3rem;\r\n  height: 3rem;\r\n  border-radius: 50%;\r\n  color: white;\r\n  background-color: $themeColor;\r\n  display: flex;\r\n  text-align: center;\r\n  // box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n  cursor: pointer;\r\n  pointer-events: auto;\r\n}\r\n\r\n.playpause:hover {\r\n  background-color: #39a8f1;\r\n  border: 2px solid white;\r\n}\r\n\r\n.button-icon {\r\n  margin: auto auto;\r\n}\r\n\r\n@media only screen and (max-width: 640px) {\r\n  .slider-thingy {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  .slider {\r\n    flex: 1;\r\n    margin: auto 0rem;\r\n  }\r\n\r\n  .buttons {\r\n    margin: 0.25rem 0 0 2rem;\r\n  }\r\n}\r\n</style>\r\n","\r\n.slider-thingy\r\n  b-slider.slider(\r\n    v-model=\"sliderValue\"\r\n    v-bind=\"sliderOptions\"\r\n    size=\"is-large\"\r\n    @dragging=\"dragging\"\r\n    @dragstart=\"dragStart\"\r\n    @dragend=\"dragEnd\")\r\n\r\n  .buttons\r\n    .playpause(@click='toggleSimulation')\r\n      i.button-icon.fa.fa-1x.fa-pause(v-if=\"isRunning\")\r\n      i.button-icon.fa.fa-1x.fa-play(v-else)\r\n\r\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib/constants';\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nlet idCount = 0;\nexport class PointLight {\n  constructor(props = {}) {\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"color\", void 0);\n\n    _defineProperty(this, \"intensity\", void 0);\n\n    _defineProperty(this, \"type\", 'point');\n\n    _defineProperty(this, \"position\", void 0);\n\n    _defineProperty(this, \"attenuation\", void 0);\n\n    _defineProperty(this, \"projectedLight\", void 0);\n\n    const {\n      color = DEFAULT_LIGHT_COLOR\n    } = props;\n    const {\n      intensity = DEFAULT_LIGHT_INTENSITY\n    } = props;\n    const {\n      position = DEFAULT_LIGHT_POSITION\n    } = props;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = { ...this\n    };\n  }\n\n  getProjectedLight({\n    layer\n  }) {\n    const {\n      projectedLight\n    } = this;\n    const viewport = layer.context.viewport;\n    const {\n      coordinateSystem,\n      coordinateOrigin\n    } = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n\n}\n\nfunction getAttenuation(props) {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n\n  if ('intensity' in props) {\n    return [0, 0, props.intensity || 0];\n  }\n\n  return DEFAULT_ATTENUATION;\n}\n//# sourceMappingURL=point-light.js.map","// BC 2021-04-30: this file forked from https://github.com/visgl/deck.gl\r\n//\r\n// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport { Layer, project32, picking, log } from '@deck.gl/core'\r\nimport GL from '@luma.gl/constants'\r\nimport { Model, Geometry } from '@luma.gl/core'\r\n\r\nimport vertShader from './icon-layer.glsl.vert?raw'\r\nimport fragShader from './icon-layer.glsl.frag?raw'\r\n\r\nimport IconManager from './icon-manager'\r\n\r\nconst DEFAULT_COLOR = [0, 0, 0, 255]\r\n\r\nconst defaultProps = {\r\n  iconAtlas: { type: 'image', value: null, async: true },\r\n  iconMapping: { type: 'object', value: {}, async: true },\r\n  sizeScale: { type: 'number', value: 1, min: 0 },\r\n  billboard: false,\r\n  sizeUnits: 'pixels',\r\n  sizeMinPixels: { type: 'number', min: 0, value: 0 }, //  min point radius in pixels\r\n  sizeMaxPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER }, // max point radius in pixels\r\n  alphaCutoff: { type: 'number', value: 0.05, min: 0, max: 1 },\r\n  iconStill: { type: 'object', value: null },\r\n\r\n  getIcon: { type: 'accessor', value: (x: any) => x.icon },\r\n  getColor: { type: 'accessor', value: DEFAULT_COLOR },\r\n  getSize: { type: 'accessor', value: 1 },\r\n  getAngle: { type: 'accessor', value: 0 },\r\n  getPixelOffset: { type: 'accessor', value: [0, 0] },\r\n\r\n  getPathStart: { type: 'accessor', value: null },\r\n  getPathEnd: { type: 'accessor', value: null },\r\n  getTimeStart: { type: 'accessor', value: null },\r\n  getTimeEnd: { type: 'accessor', value: null },\r\n  currentTime: { type: 'number', value: 0 },\r\n\r\n  pickable: { type: 'boolean', value: true },\r\n  onIconError: { type: 'function', value: null, compare: false, optional: true },\r\n}\r\n\r\nexport default class IconLayer extends Layer {\r\n  getShaders() {\r\n    return super.getShaders({ vs: vertShader, fs: fragShader, modules: [project32, picking] })\r\n  }\r\n\r\n  initializeState() {\r\n    this.state = {\r\n      iconManager: new IconManager(this.context.gl, {\r\n        onUpdate: this._onUpdate.bind(this),\r\n        onError: this._onError.bind(this) as any,\r\n      }),\r\n    }\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n\r\n    /* eslint-disable max-len */\r\n    attributeManager.addInstanced({\r\n      instanceTimestamps: {\r\n        size: 1,\r\n        accessor: 'getTimeStart',\r\n      },\r\n      instanceTimestampsNext: {\r\n        size: 1,\r\n        accessor: 'getTimeEnd',\r\n      },\r\n      instanceStartPositions: {\r\n        size: 2,\r\n        accessor: 'getPathStart',\r\n      },\r\n      instanceEndPositions: {\r\n        size: 2,\r\n        accessor: 'getPathEnd',\r\n      },\r\n      instanceSizes: {\r\n        size: 1,\r\n        transition: true,\r\n        accessor: 'getSize',\r\n        defaultValue: 1,\r\n      },\r\n      instanceOffsets: { size: 2, accessor: 'getIcon', transform: this.getInstanceOffset },\r\n      instanceIconFrames: { size: 4, accessor: 'getIcon', transform: this.getInstanceIconFrame },\r\n      instanceColorModes: {\r\n        size: 1,\r\n        type: GL.UNSIGNED_BYTE,\r\n        accessor: 'getIcon',\r\n        transform: this.getInstanceColorMode,\r\n      },\r\n      instanceColors: {\r\n        size: this.props.colorFormat.length,\r\n        type: GL.UNSIGNED_BYTE,\r\n        normalized: true,\r\n        transition: true,\r\n        accessor: 'getColor',\r\n        defaultValue: DEFAULT_COLOR,\r\n      },\r\n      instanceAngles: {\r\n        size: 1,\r\n        transition: true,\r\n        accessor: 'getAngle',\r\n      },\r\n      instancePixelOffset: {\r\n        size: 2,\r\n        transition: true,\r\n        accessor: 'getPixelOffset',\r\n      },\r\n    })\r\n    /* eslint-enable max-len */\r\n  }\r\n\r\n  /* eslint-disable max-statements, complexity */\r\n  updateState({ oldProps, props, changeFlags }: any) {\r\n    super.updateState({ props, oldProps, changeFlags })\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n    const { iconAtlas, iconMapping, data, getIcon } = props\r\n    const { iconManager } = this.state\r\n\r\n    iconManager.setProps({ loadOptions: props.loadOptions })\r\n\r\n    let iconMappingChanged = false\r\n    const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas')\r\n\r\n    // prepacked iconAtlas from user\r\n    if (prePacked) {\r\n      if (oldProps.iconAtlas !== props.iconAtlas) {\r\n        iconManager.setProps({ iconAtlas, autoPacking: false })\r\n      }\r\n\r\n      if (oldProps.iconMapping !== props.iconMapping) {\r\n        iconManager.setProps({ iconMapping })\r\n        iconMappingChanged = true\r\n      }\r\n    } else {\r\n      // otherwise, use autoPacking\r\n      iconManager.setProps({ autoPacking: true })\r\n    }\r\n\r\n    // handle data changed\r\n    if (\r\n      changeFlags.dataChanged ||\r\n      (changeFlags.updateTriggersChanged &&\r\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon))\r\n    ) {\r\n      iconManager.setProps({ data, getIcon })\r\n    }\r\n\r\n    if (iconMappingChanged) {\r\n      attributeManager.invalidate('instanceOffsets')\r\n      attributeManager.invalidate('instanceIconFrames')\r\n      attributeManager.invalidate('instanceColorModes')\r\n    }\r\n\r\n    if (changeFlags.extensionsChanged) {\r\n      const { gl } = this.context\r\n      this.state.model?.delete()\r\n      this.state.model = this._getModel(gl)\r\n      attributeManager.invalidateAll()\r\n    }\r\n  }\r\n  /* eslint-enable max-statements, complexity */\r\n\r\n  get isLoaded() {\r\n    return super.isLoaded && this.state.iconManager.isLoaded\r\n  }\r\n\r\n  finalizeState() {\r\n    super.finalizeState()\r\n    // Release resources held by the icon manager\r\n    this.state.iconManager.finalize()\r\n  }\r\n\r\n  draw({ uniforms }: any) {\r\n    const {\r\n      sizeScale,\r\n      sizeMinPixels,\r\n      sizeMaxPixels,\r\n      sizeUnits,\r\n      billboard,\r\n      alphaCutoff,\r\n      currentTime,\r\n      iconStill,\r\n      pickable,\r\n    } = this.props\r\n\r\n    const { iconManager } = this.state\r\n    const { viewport } = this.context\r\n\r\n    const iconsTexture = iconManager.getTexture()\r\n    if (iconsTexture) {\r\n      this.state.model\r\n        .setUniforms(uniforms)\r\n        .setUniforms({\r\n          iconsTexture,\r\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\r\n          sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\r\n          sizeMinPixels,\r\n          sizeMaxPixels,\r\n          billboard,\r\n          alphaCutoff,\r\n          currentTime,\r\n          pickable,\r\n          iconStillOffsets: this.getInstanceOffset(iconStill),\r\n          iconStillFrames: this.getInstanceIconFrame(iconStill),\r\n        })\r\n        .draw()\r\n    }\r\n  }\r\n\r\n  _getModel(gl: any) {\r\n    // The icon-layer vertex shader uses 2d positions\r\n    // specifed via: attribute vec2 positions;\r\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1]\r\n\r\n    return new Model(gl, {\r\n      ...this.getShaders(),\r\n      id: this.props.id,\r\n      geometry: new Geometry({\r\n        drawMode: GL.TRIANGLE_FAN,\r\n        attributes: {\r\n          // The size must be explicitly passed here otherwise luma.gl\r\n          // will default to assuming that positions are 3D (x,y,z)\r\n          positions: {\r\n            size: 2,\r\n            value: new Float32Array(positions),\r\n          },\r\n        },\r\n      }),\r\n      isInstanced: true,\r\n    })\r\n  }\r\n\r\n  _onUpdate() {\r\n    this.setNeedsRedraw()\r\n  }\r\n\r\n  _onError(evt: any) {\r\n    const { onIconError } = this.getCurrentLayer().props\r\n    if (onIconError) {\r\n      onIconError(evt)\r\n    } else {\r\n      log.error(evt.error)()\r\n    }\r\n  }\r\n\r\n  getInstanceOffset(icon: any) {\r\n    const rect = this.state.iconManager.getIconMapping(icon)\r\n    return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0]\r\n  }\r\n\r\n  getInstanceColorMode(icon: any) {\r\n    const mapping = this.state.iconManager.getIconMapping(icon)\r\n    return mapping.mask ? 1 : 0\r\n  }\r\n\r\n  getInstanceIconFrame(icon: any) {\r\n    const rect = this.state.iconManager.getIconMapping(icon)\r\n    return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0]\r\n  }\r\n}\r\n\r\nIconLayer.layerName = 'FlatIconLayer'\r\nIconLayer.defaultProps = defaultProps\r\n","import { LineLayer } from '@deck.gl/layers'\r\n\r\nconst defaultProps = {\r\n  currentTime: { type: 'number', value: 0, min: 0 },\r\n  getTimeStart: { type: 'accessor', value: null },\r\n  getTimeEnd: { type: 'accessor', value: null },\r\n  searchFlag: { type: 'number', value: 0 },\r\n}\r\n\r\nexport default class PathTraceLayer extends LineLayer {\r\n  getShaders() {\r\n    const shaders = super.getShaders()\r\n    shaders.inject = {\r\n      // Timestamp of the vertex\r\n      'vs:#decl': `\\\r\n        attribute float timeStart;\r\n        attribute float timeEnd;\r\n        uniform float currentTime;\r\n        uniform float searchFlag;\r\n        varying float vTime;\r\n      `,\r\n      'vs:#main-start': `\\\r\n        if (searchFlag == 1.0) {\r\n          vTime = 999.0;\r\n        } else if(timeStart > currentTime || timeEnd < currentTime ) {\r\n          vTime = -1.0;\r\n          return;\r\n        } else {\r\n          float nearBeginning = currentTime - timeStart;\r\n          float nearEnd = timeEnd - currentTime;\r\n          vTime = min(nearBeginning, nearEnd);\r\n        }\r\n      `,\r\n      'fs:#decl': `\\\r\n        uniform float currentTime;\r\n        varying float vTime;\r\n        uniform float searchFlag;\r\n      `,\r\n      'fs:#main-start': `\\\r\n        if (searchFlag == 0.0 && vTime == -1.0 ) discard;\r\n      `,\r\n      // fade the traces in and out\r\n      'fs:DECKGL_FILTER_COLOR': `\\\r\n        if (searchFlag == 0.0 && vTime <= 10.0) color.a *= (vTime / 10.0);\r\n      `,\r\n    }\r\n    return shaders\r\n  }\r\n\r\n  initializeState(params: any) {\r\n    super.initializeState(params)\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n    attributeManager.addInstanced({\r\n      timeStart: { size: 1, accessor: 'getTimeStart' },\r\n      timeEnd: { size: 1, accessor: 'getTimeEnd' },\r\n    })\r\n  }\r\n\r\n  draw(params: any) {\r\n    const { currentTime, searchFlag } = this.props\r\n\r\n    params.uniforms = Object.assign({}, params.uniforms, {\r\n      currentTime,\r\n      searchFlag,\r\n    })\r\n\r\n    super.draw(params)\r\n  }\r\n}\r\n\r\nPathTraceLayer.layerName = 'PathTraceLayer'\r\nPathTraceLayer.defaultProps = defaultProps\r\n"],"names":["__vue2_script","defineComponent","name","props","isRunning","type","Boolean","required","timeStart","Number","timeEnd","currentTime","data","pauseWhileDragging","sliderValue","sliderOptions","min","max","clickable","duration","lazy","tooltip","mounted","this","v","convertSecondsToClockTimeMinutes","window","addEventListener","onKeyPressed","beforeDestroy","removeEventListener","watch","methods","toggleSimulation","$emit","index","seconds","getSecondsFromSlider","hms","timeConvert","minutes","slice","hours","e","dragStart","dragEnd","dragging","value","ev","code","_vm","_h","$createElement","_c","_self","staticClass","_b","attrs","size","on","dragstart","dragend","model","callback","$$v","expression","click","DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","PointLight","constructor","_defineProperty","color","intensity","position","id","concat","attenuation","getAttenuation","projectedLight","__spreadValues","getProjectedLight","layer","viewport","context","coordinateSystem","coordinateOrigin","projectPosition","fromCoordinateSystem","isGeospatial","COORDINATE_SYSTEM","LNGLAT","CARTESIAN","fromCoordinateOrigin","DEFAULT_COLOR","defaultProps","iconAtlas","async","iconMapping","sizeScale","billboard","sizeUnits","sizeMinPixels","sizeMaxPixels","MAX_SAFE_INTEGER","alphaCutoff","iconStill","getIcon","x","icon","getColor","getSize","getAngle","getPixelOffset","getPathStart","getPathEnd","getTimeStart","getTimeEnd","pickable","onIconError","compare","optional","IconLayer","Layer","getShaders","super","vs","vertShader","fs","fragShader","modules","project32","picking","initializeState","state","iconManager","IconManager","gl","onUpdate","_onUpdate","bind","onError","_onError","getAttributeManager","addInstanced","instanceTimestamps","accessor","instanceTimestampsNext","instanceStartPositions","instanceEndPositions","instanceSizes","transition","defaultValue","instanceOffsets","transform","getInstanceOffset","instanceIconFrames","getInstanceIconFrame","instanceColorModes","GL","UNSIGNED_BYTE","getInstanceColorMode","instanceColors","colorFormat","length","normalized","instanceAngles","instancePixelOffset","updateState","oldProps","changeFlags","attributeManager","setProps","loadOptions","iconMappingChanged","internalState","isAsyncPropLoading","autoPacking","dataChanged","updateTriggersChanged","all","invalidate","extensionsChanged","_a","delete","_getModel","invalidateAll","isLoaded","finalizeState","finalize","draw","uniforms","iconsTexture","getTexture","setUniforms","iconsTextureDim","width","height","metersPerPixel","iconStillOffsets","iconStillFrames","Model","geometry","Geometry","drawMode","TRIANGLE_FAN","attributes","positions","Float32Array","isInstanced","setNeedsRedraw","evt","getCurrentLayer","log","error","rect","getIconMapping","anchorX","anchorY","mask","y","layerName","PathTraceLayer","LineLayer","shaders","inject","params","searchFlag","Object","assign"],"mappings":"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"}