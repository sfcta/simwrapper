var t=Object.defineProperty,e=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,a=(e,s,r)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[s]=r,i=(t,e,s)=>(a(t,"symbol"!=typeof e?e+"":e,s),s);import{g as o,S as n}from"./index.2deacc07.js";import{H as l}from"./HTTPFileSystem.e57ad358.js";import{f as c}from"./util.b5d45f97.js";import{W as d}from"./RoadNetworkLoader.worker.30fe4a65.js";import{I as f}from"./index.5877f313.js";function u(t){return t}function h(t,...e){return m(t,u,u,e)}function g(t,e,...s){return m(t,u,e,s)}function m(t,e,s,r){return function t(a,i){if(i>=r.length)return s(a);const o=new f,n=r[i++];let l=-1;for(const e of a){const t=n(e,++l,a),s=o.get(t);s?s.push(e):o.set(t,[e])}for(const[e,s]of o)o.set(e,t(s,i));return e(o)}(t,0)}function v(){return new Worker("/simwrapper/assets/DataFetcher.worker.6cf2376f.js",{type:"module"})}const p=!!!window.showDirectoryPicker;class w{constructor(...t){i(this,"files",[]),i(this,"threads",[]),i(this,"subfolder",""),i(this,"root",""),i(this,"fileApi"),i(this,"networks",{}),i(this,"datasets",{}),this.root=t.length?t[0]:"",this.subfolder=t.length?t[1]:"",this.fileApi=this._getFileSystem(this.root)}kill(){for(const t of this.threads)t.terminate()}getFilteredDataset(t){if(!(t.dataset in this.datasets))return{filteredRows:null};return{filteredRows:this.datasets[t.dataset].filteredRows}}async OLDgetFiltered(t){const e=this.datasets[t.dataset].filteredRows;if(!e)return{filteredRows:null};let s={};if(t.value&&t.groupBy){const r=t.value,a=t.groupBy;s=g(e,(t=>t.reduce(((t,e)=>t+e[r]),0)),(t=>t[a]))}return{filteredRows:{x:Array.from(s.keys()),y:Array.from(s.values())}}}async getDataset(t,i){try{this.datasets[t.dataset]||(console.log("load:",t.dataset),this.datasets[t.dataset]={dataset:this._fetchDataset(t,i),activeFilters:{},filteredRows:null,filterListeners:new Set});let o=await this.datasets[t.dataset].dataset,n=((t,i)=>{for(var o in i||(i={}))s.call(i,o)&&a(t,o,i[o]);if(e)for(var o of e(i))r.call(i,o)&&a(t,o,i[o]);return t})({},o);return t.ignoreColumns&&t.ignoreColumns.forEach((t=>{delete n[t]})),t.useLastRow&&Object.keys(n).forEach((t=>{const e=o[t].values;n[t]=e[e.length-1]})),{allRows:n}}catch(o){return{allRows:{}}}}setFeatureProperties(t,e,s){const r=t.substring(t.lastIndexOf("/")+1);let a={dataset:r};return"string"!=typeof s&&(a=Object.assign(a,s)),this.datasets[r]={activeFilters:{},filteredRows:null,filterListeners:new Set,dataset:new Promise(((s,r)=>{const i=new v;this.threads.push(i);try{i.postMessage({config:a,featureProperties:e}),i.onmessage=e=>{i.terminate(),e.data.error&&(console.log(e.data.error),o.commit("setStatus",{type:n.ERROR,msg:`Problem loading properties in ${t}`,desc:"File loaded from storage, but properties table could not be parsed"}),r()),s(e.data)}}catch(l){i.terminate(),console.error(l),r(l)}}))},this.datasets[r].dataset}setPreloadedDataset(t){this.datasets[t.key]={dataset:new Promise(((e,s)=>{e(t.dataTable)})),activeFilters:{},filteredRows:null,filterListeners:new Set}}async getRoadNetwork(t,e,s,r){const a=`/${e}/${t}`;return this.networks[a]||(this.networks[a]=this._fetchNetwork({subfolder:e,filename:t,vizDetails:s,cbStatus:r})),await this.networks[a]}setFilter(t){const{dataset:e,column:s,value:r,invert:a,range:i}=t;if(!this.datasets[e])return console.warn(`${e} doesn't exist yet`),void console.warn(Object.keys(this.datasets));console.log("> setFilter",e,s,r);const o=Array.isArray(r)?r:[r];null==this.datasets[e].activeFilters&&(this.datasets[e].activeFilters={});const n=this.datasets[e].activeFilters;o.length?n[s]={values:o,invert:a,range:i}:delete n[s],this._updateFilters(e)}addFilterListener(t,e){if(!this.datasets[t.dataset])throw Error("No dataset named: "+t.dataset);this.datasets[t.dataset].filterListeners.add(e)}removeFilterListener(t,e){try{this.datasets[t.dataset].filterListeners&&this.datasets[t.dataset].filterListeners.delete(e)}catch(s){}}clearCache(){this.kill(),this.datasets={},this.networks={}}async _updateFilters(t){console.log("> updateFilters ",t);const e=this.datasets[t];if(console.log({metaData:e}),!Object.keys(e.activeFilters).length)return console.log("no keys"),e.filteredRows=null,void this._notifyListeners(t);const s=await e.dataset,r=Object.keys(s);let a=[];const i=s[r[0]].values.length;console.log("FILTERS:",e.activeFilters),console.log("TOTLROWS",i);const n=new Array(i).fill(!0),l=/^(<|>)/;for(const[c,d]of Object.entries(e.activeFilters)){const e=s[c];if(void 0!==d.values[0]&&""!==d.values[0]||o.commit("error",t+": filter error"),l.test(d.values[0]))d.values[0].startsWith("<=")?(d.conditional="<=",d.values[0]=d.values[0].substring(2).trim()):d.values[0].startsWith(">=")?(d.conditional=">=",d.values[0]=d.values[0].substring(2).trim()):d.values[0].startsWith("<")?(d.conditional="<",d.values[0]=d.values[0].substring(1).trim()):d.values[0].startsWith(">")&&(d.conditional=">",d.values[0]=d.values[0].substring(1).trim());else if(1===d.values.length&&"string"==typeof d.values[0]){const t=parseFloat(d.values[0]);Number.isFinite(t)&&d.values.push(t)}for(let t=0;t<i;t++)y(d,e.values[t])||(n[t]=!1)}for(let o=0;o<i;o++)if(n[o]){const t={};r.forEach((e=>t[e]=s[e].values[o])),a.push(t)}e.filteredRows=a,this._notifyListeners(t)}_notifyListeners(t){const e=this.datasets[t];for(const s of e.filterListeners)s(t)}async _fetchDataset(t,e){if(!this.files.length){const{files:t}=await new l(this.fileApi).getDirectory(this.subfolder);this.files=t}return new Promise(((s,r)=>{const a=new v;this.threads.push(a);try{a.postMessage({fileSystemConfig:this.fileApi,subfolder:this.subfolder,files:this.files,config:t,options:e}),a.onmessage=e=>{if(a.terminate(),e.data.error){let s=""+e.data.error;s=s.replace("[object Response]","Error loading file"),(null==t?void 0:t.dataset)&&-1===s.indexOf(t.dataset)&&(s+=`: ${t.dataset}`),o.commit("setStatus",{type:n.ERROR,msg:s,desc:JSON.stringify(t)}),r()}s(e.data)}}catch(i){a.terminate(),console.error(i),r(i)}}))}async _fetchNetwork(t){return new Promise((async(e,s)=>{const{subfolder:r,filename:a,vizDetails:i,cbStatus:o}=t,n=`/${r}/${a}`;console.log("load network:",n);let f=n.indexOf("/")>-1?n.substring(0,n.lastIndexOf("/")):this.subfolder;const{files:u}=await new l(this.fileApi).getDirectory(f);let h=-1===n.indexOf("/")?n:n.substring(n.lastIndexOf("/")+1);1!==c(u,h).length&&s("File not found: "+n);const g=new d;try{g.onmessage=t=>{if(t.data.promptUserForCRS){let t=prompt("Enter the coordinate reference system, e.g. EPSG:25832")||"EPSG:31468";return Number.isInteger(parseInt(t))&&(t=`EPSG:${t}`),void g.postMessage({crs:t})}t.data.status?o&&o(t.data.status):(g.terminate(),t.data.error&&(console.error(t.data.error),s(t.data.error)),e(t.data.links))},g.postMessage({filePath:n,fileSystem:this.fileApi,vizDetails:i,isFirefox:p})}catch(m){g.terminate(),console.error(m),s(m)}}))}_getFileSystem(t){const e=o.state.svnProjects.filter((e=>e.slug===t));if(0===e.length)throw console.error("DDM: no such project"),Error;return e[0]}}function y(t,e){const s={"<":()=>e<t.values[0],"<=":()=>e<=t.values[0],">":()=>e>t.values[0],">=":()=>e>=t.values[0]};let r;return r=t.range?e>=t.values[0]&&e<=t.values[1]:t.conditional?s[t.conditional]():t.values.includes(e),t.invert?!r:r}export{w as D,v as W,y as c,h as g,g as r};
//# sourceMappingURL=DashboardDataManager.e0d06cdd.js.map
