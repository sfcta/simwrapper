import{d as e,m as t}from"./vendor.e9c367ae.js";import{r as i}from"./index.028cf17b.js";import{c as s,l as a}from"./turf.es.943b3175.js";import{d as o}from"./index.39efad9c.js";import{n as r}from"./nprogress.49cbb77e.js";import{C as n,p as l}from"./Coords.6c17f2a7.js";import{r as d}from"./index.a906c0e7.js";import{V as h}from"./vue-slider-component.umd.min.efc39df5.js";import{b as c}from"./index.3d2ad359.js";import{f as m}from"./util.b5d45f97.js";import{C as p}from"./CollapsiblePanel.58a8eae6.js";import{n as u,g as y,S as g,C as f}from"./index.2deacc07.js";import{Z as b}from"./ZoomButtons.e860a156.js";import{H as v}from"./HTTPFileSystem.e57ad358.js";var C=e({name:"LegendBoxOD",i18n:{messages:{en:{linewidth:"Line widths:",legend:"Legend:"},de:{linewidth:"Linienbreite:",legend:"Legende:"}}},props:{rows:{type:Array,required:!0}}});const S={};var w=u(C,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{attrs:{id:"legend-container"}},[i("p",{staticClass:"title"},[e._v(e._s(e.$t("legend")))]),e._l(e.rows,(function(t){return i("div",{staticClass:"legend-item"},["string"==typeof t&&t.includes("#")?i("div",{staticClass:"legend-col",style:{"background-color":t}}):e._e(),"string"!=typeof t||t.includes("#")||"↓"!=t?e._e():i("div",{staticClass:"legend-element1"},[e._v(e._s(t))]),"string"!=typeof t||t.includes("#")||"↓"==t?e._e():i("div",{staticClass:"legend-element2"},[e._v(e._s(t))])])}))],2)}),[],!1,x,"25f20161",null,null);function x(e){for(let t in S)this[t]=S[t]}var F=function(){return w.exports}(),L=e({name:"LineFilterSlider",props:{initialValue:{type:Number,required:!0}},data:()=>({sliderValue:0,options:{size:"is-small",indicator:!0,min:0,max:100,"tooltip-always":!0,tooltip:!0,data:[0,1,2,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,"Alle"]}}),mounted(){this.options["custom-formatter"]=e=>""+this.options.data[e],this.sliderValue=this.initialValue,this.sliderValue=this.options.data.includes(this.initialValue)?this.options.data.indexOf(this.initialValue):0,this.options.max=this.options.data.length-1},watch:{sliderValue(e){this.$emit("change",this.options.data[e])}}});const _={};var k=u(L,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("b-slider",e._b({staticClass:"time-slider",attrs:{"tooltip-always":""},model:{value:e.sliderValue,callback:function(t){e.sliderValue=t},expression:"sliderValue"}},"b-slider",e.options,!1),e._l(e.options.data,(function(e,t){return i("b-slider-tick",{key:t,attrs:{value:t}})})),1)}),[],!1,T,"b6d8f2c4",null,null);function T(e){for(let t in _)this[t]=_[t]}var D=function(){return k.exports}();var M=e({name:"LineFilterSlider",i18n:{messages:{en:{linewidth:"Line widths:",legend:"Legend:",trips:"trips"},de:{linewidth:"Linienbreite:",legend:"Legende:",trips:"Fahrten"}}},props:{rows:{type:Array,required:!0}}});const $={};var j=u(M,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{attrs:{id:"scale-container"}},[i("p",{staticClass:"title"},[e._v(e._s(e.$t("linewidth")))]),i("div",{staticClass:"scale-element"},[e._v(e._s("|↔︎|"))]),i("div",{staticClass:"scale-scale"},[e._v(e._s(`~ ${this.rows[0]} `+e.$t("trips")))]),i("p")])}),[],!1,V,"8348752a",null,null);function V(e){for(let t in $)this[t]=$[t]}var z=function(){return j.exports}(),E=e({name:"TimeSliderX",components:{},props:{useRange:Boolean,all:String,stops:{type:Array,required:!0}},data:()=>({sliderValue:0}),computed:{allStops(){return[...this.all?[this.all]:[],...this.stops]},stopLabel(){return Array.isArray(this.sliderValue)?`${this.allStops[this.sliderValue[0]]} : ${this.allStops[this.sliderValue[1]]}`:this.allStops[this.sliderValue]}},watch:{useRange(e){this.sliderValue=e?[1,this.allStops.length-1]:this.sliderValue[0]},sliderValue(){const e=Array.isArray(this.sliderValue)?[this.allStops[this.sliderValue[0]],this.allStops[this.sliderValue[1]]]:this.allStops[this.sliderValue];this.$emit("change",e)}},mounted(){},methods:{}});const O={};var A=u(E,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"time-slider"},[i("b-slider",{attrs:{min:0,max:e.stops.length,tooltip:!1},model:{value:e.sliderValue,callback:function(t){e.sliderValue=t},expression:"sliderValue"}},e._l(e.allStops,(function(e,t){return i("b-slider-tick",{key:e,attrs:{value:t}})})),1),i("p",[i("b",[e._v(e._s(e.stopLabel))])])],1)}),[],!1,I,"91754016",null,null);function I(e){for(let t in O)this[t]=O[t]}var R=function(){return A.exports}(),W=e({name:"ScaleSlider",props:{stops:{type:Array,required:!0},initialValue:{type:Number,required:!0}},data:()=>({sliderValue:1,options:{"tooltip-always":!0,min:0,size:"is-small",max:100,indicator:!0,data:[],"custom-formatter":{}}}),mounted(){this.options["custom-formatter"]=e=>""+this.options.data[e],this.options.max=this.stops.length-1,this.options.data=this.stops,this.sliderValue=this.stops.includes(this.initialValue)?this.stops.indexOf(this.initialValue):0},watch:{sliderValue(){this.sliderChangedEvent()}},methods:{sliderChangedEvent(){this.$emit("change",this.options.data[this.sliderValue])}}});const Y={};var B=u(W,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return e.options.data.length?i("b-slider",e._b({staticClass:"time-slider",model:{value:e.sliderValue,callback:function(t){e.sliderValue=t},expression:"sliderValue"}},"b-slider",e.options,!1),e._l(e.options.data,(function(e,t){return i("b-slider-tick",{key:t,attrs:{value:t}})})),1):e._e()}),[],!1,P,"00beb8d2",null,null);function P(e){for(let t in Y)this[t]=Y[t]}function X(){return new Worker("/simwrapper/assets/AggregateDatasetStreamer.worker.b4d46d40.js",{type:"module"})}const N=[1,3,5,10,25,50,100,150,200,300,400,450,500,1e3,5e3],G=e({name:"AggregateOD",i18n:{messages:{en:{legend:"Legend:",lineWidth:"Line width:",lineWidths:"Line widths",hide:"Hide smaller than",time:"Time of Day",duration:"Duration",circle:"Centroids",showCentroids:"Show centroids",showNumbers:"Show totals",total:"Totals for",origins:"Origins",dest:"Destinations"},de:{}}},components:{CollapsiblePanel:p,LegendBox:F,LineFilterSlider:D,ScaleBox:z,ScaleSlider:function(){return B.exports}(),TimeSlider:R,ZoomButtons:b,VueSlider:h},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean},data:()=>({globalState:y.state,isFinishedLoading:!1,myState:{subfolder:"",yamlConfig:"",thumbnail:!1},vizDetails:{csvFile:"",shpFile:"",dbfFile:"",projection:"",scaleFactor:1,title:"",description:"",mapIsIndependent:!1},standaloneYAMLconfig:{csvFile:"",shpFile:"",dbfFile:"",projection:"",scaleFactor:1,title:"",description:"",mapIsIndependent:!1},YAMLrequirementsOD:{shpFile:"",dbfFile:"",csvFile:"",projection:"",scaleFactor:1},containerId:`c${Math.floor(1e12*Math.random())}`,mapId:`map-c${Math.floor(1e12*Math.random())}`,centroids:{},centroidSource:{},linkData:{},spiderLinkFeatureCollection:{},zoneData:{},dailyData:{},marginals:{},hoveredStateId:0,rowName:"",colName:"",headers:[],geojson:{},idColumn:"",mapIsIndependent:!1,showTimeRange:!1,showCentroids:!0,showCentroidLabels:!0,isOrigin:!0,selectedCentroid:0,maxZonalTotal:0,loadingText:"Aggregierte Quell-Ziel Muster",mymap:{},project:{},scaleFactor:1,scaleValues:N,currentScale:N[0],currentTimeBin:"Alle >>",allTimeBinsLabel:"Alle >>",lineFilter:0,projection:"",hoverId:null,_mapExtentXYXY:null,_maximum:null,bounceTimeSlider:{},bounceScaleSlider:{},bounceLineFilter:{},resizer:null,isMapMoving:!1,isDarkMode:!1,csvWorker:null}),computed:{fileSystem(){const e=this.$store.state.svnProjects.filter((e=>e.slug===this.root));if(0===e.length)throw console.log("no such project"),Error;return e[0]},fileApi(){return new v(this.fileSystem,y)},isMobile(){const e=window,t=document,i=t.documentElement,s=t.getElementsByTagName("body")[0],a=e.innerWidth||i.clientWidth||s.clientWidth;return e.innerHeight||i.clientHeight||s.clientHeight,a<640},legendRows:()=>["#00aa66","#880033","↓","↑"],scaleRows(){return[Math.min(Math.round((1200*Math.pow(this.currentScale,-1)+20)*Math.sqrt(this.scaleFactor)),1e3*this.scaleFactor)]}},methods:{setupResizer(){this.resizer=new ResizeObserver((()=>{this.mymap&&this.mymap.resize()}));const e=document.getElementById(this.containerId);this.resizer.observe(e)},configureSettings(){(this.vizDetails.lineWidths||this.vizDetails.lineWidth)&&(this.currentScale=this.vizDetails.lineWidth||this.vizDetails.lineWidths||1),this.vizDetails.hideSmallerThan&&(this.lineFilter=this.vizDetails.hideSmallerThan)},handleMapMotion(){const e={longitude:this.mymap.getCenter().lng,latitude:this.mymap.getCenter().lat,bearing:this.mymap.getBearing(),zoom:this.mymap.getZoom(),pitch:this.mymap.getPitch()};this.mapIsIndependent||this.$store.commit("setMapCamera",e),this.isMapMoving||(this.isMapMoving=!0)},async getVizDetails(){if(this.config)this.validateYAML(),this.vizDetails=Object.assign({},this.config);else try{const e=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,t=await this.fileApi.getFileText(e);this.standaloneYAMLconfig=Object.assign({},c.parse(t)),this.validateYAML(),this.setVizDetails()}catch(e){console.error(""+e)}this.$emit("title",this.vizDetails.title),this.scaleFactor=this.vizDetails.scaleFactor,this.projection=this.vizDetails.projection,this.mapIsIndependent=!!this.vizDetails.mapIsIndependent,this.idColumn=this.vizDetails.idColumn?this.vizDetails.idColumn:"id",r.done()},validateYAML(){let e={};e=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?this.standaloneYAMLconfig:this.config;for(const t in this.YAMLrequirementsOD)t in e==!1&&this.$store.commit("setStatus",{type:g.ERROR,msg:`${this.yamlConfig}: missing required key: ${t}`,desc:""})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig);const e=this.vizDetails.title?this.vizDetails.title:"Aggregate OD";this.$emit("title",e)},async findFilenameFromWildcard(e){let t=e.indexOf("/")>-1?e.substring(0,e.lastIndexOf("/")):this.subfolder;const{files:i}=await this.fileApi.getDirectory(t);let s=-1===e.indexOf("/")?e:e.substring(e.lastIndexOf("/")+1);const a=m(i,s);if(1===a.length)return`${t}/${a[0]}`;throw Error("File not found: "+e)},async loadFiles(){try{this.loadingText="Dateien laden...";const e=await this.findFilenameFromWildcard(`${this.myState.subfolder}/${this.vizDetails.shpFile}`),t=await this.findFilenameFromWildcard(`${this.myState.subfolder}/${this.vizDetails.dbfFile}`),i=await this.fileApi.getFileBlob(e),s=await d.arraybuffer(i),a=await this.fileApi.getFileBlob(t);return{shpFile:s,dbfFile:await d.arraybuffer(a)}}catch(e){const t=e;let i=t.statusText||""+t;return t.url&&(i+=": "+t.url),console.error(i),this.loadingText=""+e,this.$store.commit("error",i),null}},async setupMap(){try{this.mymap=new t.Map({container:this.mapId,style:y.getters.mapStyle,logoPosition:"top-left"})}catch(e){return void console.error("HUH?")}try{const e=localStorage.getItem(this.$route.fullPath+"-bounds");if(e){const t=JSON.parse(e);this.isMobile;this.$store.commit("setMapCamera",{longitude:.5*(t[0]+t[2]),latitude:.5*(t[1]+t[3]),zoom:8,pitch:0,bearing:0,jump:!0})}}catch(e){}if(this.mymap.on("click",this.handleEmptyClick),this.mymap.on("load",this.mapIsReady),this.mymap.on("move",this.handleMapMotion),this.thumbnail){let e=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-attrib mapboxgl-compact");for(const t of e)t.setAttribute("style","display: none");e=document.getElementsByClassName("mapboxgl-ctrl mapboxgl-ctrl-group");for(const t of e)t.setAttribute("style","display: none");e=document.getElementsByClassName("mapboxgl-ctrl-logo");for(const t of e)t.setAttribute("style","display: none")}else{let e=document.getElementsByClassName("mapboxgl-ctrl-logo");for(const t of e)t.setAttribute("style","margin-bottom: 3rem;")}},handleEmptyClick(e){0===this.mymap.queryRenderedFeatures(e.point).filter((e=>"centroids"===e.source||"spider-source"===e.source)).length&&(this.fadeUnselectedLinks(-1),this.selectedCentroid=0,this.isMobile)},async mapIsReady(){const e=await this.loadFiles();e&&(this.geojson=await this.processShapefile(e),this.geojson&&this.loadCSVData()),r.done()},createSpiderLinks(){this.spiderLinkFeatureCollection={type:"FeatureCollection",features:[]};for(const t of Object.keys(this.linkData)){const i=this.linkData[t];if(!(i.daily<=this.lineFilter))try{const e=this.centroids[i.orig].geometry.coordinates,s=this.centroids[i.dest].geometry.coordinates,a=e[1]-s[1]>0?"#00aa66":"#880033",o=.7,r={id:t,orig:i.orig||0,dest:i.dest||0,daily:i.daily||0,color:a,fade:o};r["Alle >>"]=i.daily,i.values.forEach(((e,t)=>{r[this.headers[t]]=null!=e?e:0}));const n={type:"Feature",properties:r,geometry:{type:"LineString",coordinates:[e,s]}};this.spiderLinkFeatureCollection.features.push(n)}catch(e){}}},updateSpiderLinks(){if(this.createSpiderLinks(),this.selectedCentroid)this.fadeUnselectedLinks(this.selectedCentroid);else{this.mymap.getSource("spider-source").setData(this.spiderLinkFeatureCollection)}},buildSpiderLinks(){this.mymap.getSource("spider-source")||(this.createSpiderLinks(),this.mymap.addSource("spider-source",{data:this.spiderLinkFeatureCollection,type:"geojson"})),this.mymap.getLayer("spider-layer")&&this.mymap.removeLayer("spider-layer"),this.mymap.addLayer({id:"spider-layer",source:"spider-source",type:"line",paint:{"line-color":["get","color"],"line-width":["*",.002*this.scaleFactor,["get","daily"]],"line-offset":["*",.5,["get","daily"]],"line-opacity":["get","fade"]},filter:[">",["get",this.currentTimeBin],0]},"centroid-layer"),this.changedScale(this.currentScale);const e=this;this.mymap.on("click","spider-layer",(function(t){e.clickedOnSpiderLink(t)})),this.mymap.on("mousemove","spider-layer",(function(t){e.mymap.getCanvas().style.cursor=t?"pointer":"grab"})),this.mymap.on("mouseleave","spider-layer",(function(){e.mymap.getCanvas().style.cursor="grab"}))},clickedOrigins(){this.isOrigin=!0,this.updateCentroidLabels(),this.convertRegionColors(this.geojson);this.mymap.getSource("shpsource").setData(this.geojson)},clickedDestinations(){this.isOrigin=!1,this.updateCentroidLabels(),this.convertRegionColors(this.geojson);this.mymap.getSource("shpsource").setData(this.geojson)},updateCentroidLabels(){const e=this.isOrigin?"{dailyFrom}":"{dailyTo}",t=this.isOrigin?"widthFrom":"widthTo";this.mymap.getLayer("centroid-layer")&&this.mymap.removeLayer("centroid-layer"),this.mymap.getLayer("centroid-label-layer")&&this.mymap.removeLayer("centroid-label-layer"),this.showCentroids&&this.mymap.addLayer({layout:{visibility:this.thumbnail?"none":"visible"},id:"centroid-layer",source:"centroids",type:"circle",paint:{"circle-color":"#ec0","circle-radius":["get",t],"circle-stroke-width":2,"circle-stroke-color":"white"},filter:[">",["get",this.isOrigin?"dailyFrom":"dailyTo"],0]}),this.showCentroidLabels&&this.mymap.addLayer({id:"centroid-label-layer",source:"centroids",type:"symbol",layout:{"text-field":e,"text-size":11},paint:this.showCentroids?{}:{"text-halo-color":"white","text-halo-width":2},filter:[">",["get",this.isOrigin?"dailyFrom":"dailyTo"],0]})},unselectAllCentroids(){this.fadeUnselectedLinks(-1),this.selectedCentroid=0},clickedOnCentroid(e){e.originalEvent.stopPropagating=!0;const t=e.features[0].properties.id;t!==this.selectedCentroid?(this.selectedCentroid=t,this.fadeUnselectedLinks(t)):this.unselectAllCentroids()},fadeUnselectedLinks(e){const t=this.mymap;for(const i of this.spiderLinkFeatureCollection.features){const t=i.properties.id.split(":");let s=t[0]===String(e)||t[1]===String(e)?.7:0;-1===e&&(s=.7),i.properties.fade=s}t.getSource("spider-source").setData(this.spiderLinkFeatureCollection)},clickedOnSpiderLink(e){if(e.originalEvent.stopPropagating)return;const i=e.features[0].properties,s=Math.round(1e4*i.daily*this.scaleFactor)/1e4;let a=0;const o=i.dest+":"+i.orig;this.linkData[o]&&(a=Math.round(1e4*this.linkData[o].daily*this.scaleFactor)/1e4);const r=s+a;let n=`<h1><b>${r} Bidirectional Trip${1!==r?"s":""}</b></h1>`;n+='<p style="width: max-content">_________________________</p>',n+=`<p style="width: max-content">${s} trip${1!==s?"s":""} // ${a} reverse trip${1!==a?"s":""}</p>`,new t.Popup({closeOnClick:!0}).setLngLat(e.lngLat).setHTML(n).addTo(this.mymap)},convertRegionColors(e){for(const t of e.features){if(!t.properties)continue;let e=128+127*(1-(this.isOrigin?t.properties.dailyFrom:t.properties.dailyTo)/this.maxZonalTotal);e||(e=255),t.properties.blue=e}},handleCentroidsForTimeOfDayChange(e){const t={type:"FeatureCollection",features:[]};for(const i of this.geojson.features){const a=s(i);a.properties.id=i.id;const o=this.calculateCentroidValuesForZone(e,i);a.properties.dailyFrom=Math.round(1e4*o.from*this.scaleFactor)/1e4,a.properties.dailyTo=Math.round(1e4*o.to*this.scaleFactor)/1e4;let r=Math.log10(a.properties.dailyFrom);a.properties.widthFrom=6+3.5*r,r=Math.log10(a.properties.dailyTo),a.properties.widthTo=6+3.5*r,i.properties||(i.properties={}),i.properties.dailyFrom=o.from,i.properties.dailyTo=o.to,a.properties.dailyFrom+a.properties.dailyTo>0&&(t.features.push(a),i.properties&&(this.centroids[i.properties[this.idColumn]]=a))}this.centroidSource=t;this.mymap.getSource("centroids").setData(this.centroidSource),this.updateCentroidLabels()},calculateCentroidValuesForZone(e,t){let i=0,s=0;if("Alle >>"===e)return s=t.properties.dailyTo,i=t.properties.dailyFrom,{from:i,to:s};const a=this.marginals.from[t.id],o=this.marginals.to[t.id];if(Array.isArray(e)){let t=this.headers.indexOf(e[0])-1;t<0&&(t=0);const r=this.headers.indexOf(e[1])-1;for(let e=t;e<=r;e++)i+=a?Math.round(a[e]):0,s+=o?Math.round(o[e]):0;return{from:i,to:s}}const r=this.headers.indexOf(e)-1;return i=a?Math.round(a[r]):0,s=o?Math.round(o[r]):0,{from:i,to:s}},buildCentroids(e){const t={type:"FeatureCollection",features:[]};for(const i of e.features){if(!i.id)continue;const e=s(i);e.properties.id=i.id,e.id=i.id;let a=Math.round(this.marginals.rowTotal[i.id]),o=Math.round(this.marginals.colTotal[i.id]);a||(a=0),o||(o=0),e.properties.dailyFrom=a*this.scaleFactor,e.properties.dailyTo=o*this.scaleFactor;let r=Math.log10(e.properties.dailyFrom);e.properties.widthFrom=6+3.5*r,r=Math.log10(e.properties.dailyTo),e.properties.widthTo=6+3.5*r,a&&(this.maxZonalTotal=Math.max(this.maxZonalTotal,a)),o&&(this.maxZonalTotal=Math.max(this.maxZonalTotal,o)),i.properties||(i.properties={}),i.properties.dailyFrom=a,i.properties.dailyTo=o,e.properties.dailyFrom+e.properties.dailyTo>0&&(t.features.push(e),i.properties&&(this.centroids[i.id]=e),this.updateMapExtent(e.geometry.coordinates))}this.centroidSource=t,this.mymap.getSource("centroids")||this.mymap.addSource("centroids",{data:this.centroidSource,type:"geojson"}),this.updateCentroidLabels(),this.mymap.on("click","centroid-layer",(e=>{this.clickedOnCentroid(e)})),this.mymap.on("mousemove","centroid-layer",(e=>{this.mymap.getCanvas().style.cursor=e?"pointer":"grab"})),this.mymap.on("mouseleave","centroid-layer",(()=>{this.mymap.getCanvas().style.cursor="grab"}))},setMapExtent(){localStorage.setItem(this.$route.fullPath+"-bounds",JSON.stringify(this._mapExtentXYXY));const e=this.thumbnail?{animate:!1}:{padding:{top:25,bottom:25,right:100,left:100},animate:!1};this.mymap.fitBounds(this._mapExtentXYXY,e)},setupKeyListeners(){window.addEventListener("keyup",(e=>{27===e.keyCode&&this.pressedEscape()})),window.addEventListener("keydown",(e=>{38===e.keyCode&&this.pressedArrowKey(-1),40===e.keyCode&&this.pressedArrowKey(1)}))},processGeojson(){for(const e of this.geojson.features){const t=e.properties;0!==t.dailyFrom||0!==t.dailyTo?e.properties.isVisible=!0:e.properties.isVisible=!1}},async processShapefile(e){this.loadingText="Verkehrsnetz bauarbeiten...";const t=await i(e.shpFile,e.dbfFile);t.features.length>150&&(this.lineFilter=10),this.loadingText="Koordinaten berechnen...";for(const i of t.features){const e=i.properties;if(!this.idColumn&&e&&(this.idColumn=Object.keys(e)[0]),!(this.idColumn in e))return void this.$store.commit("error",`Shapefile does not contain ID column "${this.idColumn}"`);i.properties&&(i.id=i.properties[this.idColumn]);try{"MultiPolygon"===i.geometry.type?this.convertMultiPolygonCoordinatesToWGS84(i):this.convertPolygonCoordinatesToWGS84(i)}catch(s){console.error("ERR with feature: "+i),console.error(s)}}return t},convertPolygonCoordinatesToWGS84(e){for(const t of e.geometry.coordinates){const e=[];for(const i of t){const t=n.toLngLat(this.projection,i);e.push(t)}t.length=0,t.push(...e)}},origConvertMultiPolygonCoordinatesToWGS84(e){for(const t of e.geometry.coordinates){const e=t[0],i=[];for(const t of e){const e=l(this.projection,"WGS84",t);i.push(e)}t[0]=i}},convertMultiPolygonCoordinatesToWGS84(e){e.geometry.coordinates=this.recurseWGS84(e.geometry.coordinates)},recurseWGS84(e){const t=[];for(let i of e)Array.isArray(i[0])?t.push(this.recurseWGS84(i)):t.push(l(this.projection,"WGS84",i));return t},async getDailyDataSummary(){const e={},t={},i={},s={};for(const a of Object.keys(this.zoneData)){i[a]=Array(this.headers.length-1).fill(0);for(const o of Object.keys(this.zoneData[a])){e[a]||(e[a]=0),t[o]||(t[o]=0),this.dailyData[a][o]&&(e[a]+=this.dailyData[a][o],t[o]+=this.dailyData[a][o]),s[o]||(s[o]=Array(this.headers.length-1).fill(0));for(let e=0;e<this.headers.length-1;e++)this.zoneData[a][o][e]&&(i[a][e]+=this.zoneData[a][o][e],s[o][e]+=this.zoneData[a][o][e])}}return{rowTotal:e,colTotal:t,from:i,to:s}},async loadCSVData(){this.loadingText="Load CSV data...";let e="";try{e=await this.findFilenameFromWildcard(`${this.myState.subfolder}/${this.vizDetails.csvFile}`)}catch(t){return void this.$store.commit("error",`Error loading ${this.myState.subfolder}/${this.vizDetails.csvFile}`)}this.csvWorker=new X,this.csvWorker.onmessage=e=>{var t,i;const s=e.data;s.status?this.loadingText=s.status:s.error?(null==(t=this.csvWorker)||t.terminate(),this.loadingText=s.error,this.$store.commit("setStatus",{type:g.ERROR,msg:`Aggr.OD: Error loading "${this.myState.subfolder}/${this.vizDetails.csvFile}"`,desc:"Check the path and filename"})):s.finished&&(null==(i=this.csvWorker)||i.terminate(),this.finishedLoadingData(s))},this.csvWorker.postMessage({fileSystem:this.fileSystem,filePath:e})},async finishedLoadingData(e){console.log(222,"done"),this.loadingText="Building diagram...",this.isFinishedLoading=!0,await this.$nextTick(),this.rowName=e.rowName,this.colName=e.colName,this.headers=e.headers,this.dailyData=e.dailyZoneData,this.zoneData=e.zoneData,this.linkData=e.dailyLinkData,this.marginals=await this.getDailyDataSummary(),this.buildCentroids(this.geojson),this.convertRegionColors(this.geojson),this.addGeojsonToMap(this.geojson),this.setMapExtent(),this.buildSpiderLinks(),this.setupKeyListeners(),this.loadingText=""},updateMapExtent(e){this._mapExtentXYXY[0]=Math.min(this._mapExtentXYXY[0],e[0]),this._mapExtentXYXY[1]=Math.min(this._mapExtentXYXY[1],e[1]),this._mapExtentXYXY[2]=Math.max(this._mapExtentXYXY[2],e[0]),this._mapExtentXYXY[3]=Math.max(this._mapExtentXYXY[3],e[1])},addGeojsonToMap(e){this.processGeojson(),this.addGeojsonLayers(e),this.addNeighborhoodHoverEffects()},addGeojsonLayers(e){this.mymap.getSource("shpsource")||this.mymap.addSource("shpsource",{data:e,type:"geojson"}),this.mymap.getLayer("shplayer-fill")&&this.mymap.removeLayer("shplayer-fill"),this.mymap.addLayer({id:"shplayer-fill",source:"shpsource",type:"fill",paint:{"fill-color":["rgb",["get","blue"],["get","blue"],255],"fill-opacity":.5}},"water"),this.mymap.getLayer("shplayer-border")&&this.mymap.removeLayer("shplayer-border"),this.mymap.addLayer({id:"shplayer-border",source:"shpsource",type:"line",paint:{"line-color":"#66f","line-opacity":.5,"line-width":["case",["boolean",["feature-state","hover"],!1],3,1]},filter:["==","isVisible",!0]},"centroid-layer")},addNeighborhoodHoverEffects(){const e=this;this.mymap.on("mousemove","shplayer-fill",(function(t){const i=e.mymap;t.features.length>0&&(e.hoveredStateId&&i.setFeatureState({source:"shpsource",id:e.hoveredStateId},{hover:!1}),e.hoveredStateId=t.features[0].properties[e.idColumn],i.setFeatureState({source:"shpsource",id:e.hoveredStateId},{hover:!0}))})),this.mymap.on("mouseleave","shplayer-fill",(function(){const t=e.mymap;e.hoveredStateId&&t.setFeatureState({source:"shpsource",id:e.hoveredStateId},{hover:!1}),e.hoveredStateId=null}))},offsetLineByMeters(e,t){try{return a(e,t,{units:"meters"})}catch(i){}return e},pressedEscape(){this.unselectAllCentroids()},pressedArrowKey(e){},changedTimeSlider(e){this.currentTimeBin=e;const t=this.currentScale/500*this.scaleFactor;if(0==this.showTimeRange)this.mymap.setPaintProperty("spider-layer","line-width",["*",t,["get",e]]),this.mymap.setPaintProperty("spider-layer","line-offset",["*",.5*t,["get",e]]);else{const i=["+"];let s=!1;for(const t of this.headers)t===e[0]&&(s=!0),"Alle >>"!==t&&(s&&i.push(["get",t]),t===e[1]&&(s=!1));this.mymap.setPaintProperty("spider-layer","line-width",["*",t,i]),this.mymap.setPaintProperty("spider-layer","line-offset",["*",.5*t,i])}this.handleCentroidsForTimeOfDayChange(e)},changedScale(e){this.isFinishedLoading&&(this.currentScale=e,this.changedTimeSlider(this.currentTimeBin))},changedLineFilter(e){this.lineFilter="Alle"===e?1/0:e,this.updateSpiderLinks()}},watch:{"globalState.viewState"(e){if(this.mapIsIndependent)return;if(!this.mymap||this.isMapMoving||this.thumbnail)return void(this.isMapMoving=!1);const{bearing:t,longitude:i,latitude:s,zoom:a,pitch:o}=e;if(a)try{this.mymap.off("move",this.handleMapMotion),this.mymap.jumpTo({bearing:t,zoom:a,center:[i,s],pitch:o}),this.mymap.on("move",this.handleMapMotion)}catch(r){}},"$store.state.colorScheme"(){this.isDarkMode=this.$store.state.colorScheme===f.DarkMode,this.mymap&&(this.mymap.setStyle(y.getters.mapStyle),this.mymap.on("style.load",(()=>{this.buildCentroids(this.geojson),this.buildSpiderLinks(),this.addGeojsonToMap(this.geojson)})))},"$store.state.resizeEvents"(){this.mymap&&this.mymap.resize()},showTimeRange(){},showCentroids(){this.updateCentroidLabels()},showCentroidLabels(){this.updateCentroidLabels()}},async created(){this._mapExtentXYXY=[180,90,-180,-90],this._maximum=0},async mounted(){y.commit("setFullScreen",!this.thumbnail),this.isDarkMode=this.$store.state.colorScheme===f.DarkMode,this.bounceTimeSlider=o.debounce(this.changedTimeSlider,100),this.bounceScaleSlider=o.debounce(this.changedScale,50),this.bounceLineFilter=o.debounce(this.changedLineFilter,250),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),this.thumbnail||(this.setupMap(),this.configureSettings(),this.setupResizer())},beforeDestroy(){this.csvWorker&&this.csvWorker.terminate()},destroyed(){y.commit("setFullScreen",!1)}});const Z={};var q=u(G,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"mycomponent",attrs:{id:e.containerId}},[e.thumbnail?e._e():i("zoom-buttons",{staticClass:"zoom-buttons"}),i("div",{staticClass:"map-container"},[i("div",{staticClass:"mymap",attrs:{id:e.mapId}}),i("div",{directives:[{name:"show",rawName:"v-show",value:!e.thumbnail&&e.loadingText,expression:"!thumbnail && loadingText"}],staticClass:"status-blob"},[i("p",[e._v(e._s(e.loadingText))])]),e.thumbnail||e.loadingText?e._e():i("div",{staticClass:"lower-left"},[i("div",{staticClass:"subheading"},[e._v(e._s(e.$t("lineWidths")))]),i("scale-slider",{staticClass:"scale-slider",attrs:{stops:e.scaleValues,initialValue:e.currentScale},on:{change:e.bounceScaleSlider}}),i("div",{staticClass:"subheading"},[e._v(e._s(e.$t("hide")))]),i("line-filter-slider",{staticClass:"scale-slider",attrs:{initialValue:e.lineFilter},on:{change:e.bounceLineFilter}})],1),e.thumbnail||e.isMobile?e._e():i("div",{staticClass:"lower-right"},[i("legend-box",{staticClass:"complication",attrs:{rows:e.legendRows}}),i("scale-box",{staticClass:"complication",attrs:{rows:e.scaleRows}})],1)]),e.thumbnail?e._e():i("div",{staticClass:"widgets",style:{padding:e.yamlConfig?"0 0.5rem 0.5rem 0.5rem":"0 0"}},[this.headers.length>2?i("div",{staticClass:"widget-column",staticStyle:{"min-width":"8rem"}},[i("h4",{staticClass:"heading"},[e._v(e._s(e.$t("time")))]),i("b-checkbox",{staticClass:"checkbox",model:{value:e.showTimeRange,callback:function(t){e.showTimeRange=t},expression:"showTimeRange"}},[e._v(e._s(e.$t("duration")))]),i("time-slider",{staticClass:"xtime-slider",attrs:{useRange:e.showTimeRange,stops:e.headers,all:e.allTimeBinsLabel},on:{change:e.bounceTimeSlider}})],1):e._e(),i("div",{staticClass:"widget-column"},[i("h4",{staticClass:"heading"},[e._v(e._s(e.$t("circle")))]),i("b-checkbox",{staticClass:"checkbox",model:{value:e.showCentroids,callback:function(t){e.showCentroids=t},expression:"showCentroids"}},[e._v(" "+e._s(e.$t("showCentroids")))]),i("b-checkbox",{staticClass:"checkbox",model:{value:e.showCentroidLabels,callback:function(t){e.showCentroidLabels=t},expression:"showCentroidLabels"}},[e._v(" "+e._s(e.$t("showNumbers")))])],1),i("div",{staticClass:"widget-column",staticStyle:{margin:"0 0 0 auto"}},[i("h4",{staticClass:"heading"},[e._v(e._s(e.$t("total")))]),i("b-button",{staticClass:"is-small",class:{"is-link":e.isOrigin,"is-active":e.isOrigin},on:{click:e.clickedOrigins}},[e._v(e._s(e.$t("origins")))]),i("b-button",{staticClass:"is-small",class:{"is-link":!e.isOrigin,"is-active":!e.isOrigin},attrs:{hint:"Hide"},on:{click:e.clickedDestinations}},[e._v(e._s(e.$t("dest")))])],1)])],1)}),[],!1,H,"1fc636f8",null,null);function H(e){for(let t in Z)this[t]=Z[t]}var K=function(){return q.exports}();export{K as default};
//# sourceMappingURL=AggregateOd.73027dde.js.map
