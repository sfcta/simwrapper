{"version":3,"file":"VehicleAnimation.5ea69f43.js","sources":["../../src/plugins/vehicle-animation/SettingsPanel.vue","../../src/plugins/vehicle-animation/SettingsPanel.vue?vue&type=template&lang.js","../../src/plugins/vehicle-animation/DrtRequestLayer.tsx","../../src/plugins/vehicle-animation/TripViz.tsx","../../src/plugins/vehicle-animation/VehicleAnimation.vue","../../src/plugins/vehicle-animation/LegendColors.tsx","../../src/plugins/vehicle-animation/VehicleAnimation.vue?vue&type=template&lang.js"],"sourcesContent":["<template lang=\"pug\">\r\n.settings-panel-content\r\n  h4 {{ $t('showhide')}}\r\n\r\n  .row(:key=\"label\" v-for=\"label in Object.keys(items)\")\r\n    toggle-button.toggle(\r\n      :width=\"40\"\r\n      :value=\"items[label]\"\r\n      :labels=\"false\"\r\n      :color=\"{checked: '#4b7cc4', unchecked: '#222'}\"\r\n      @change=\"$emit('click',label)\")\r\n    label(v-html=\"$t(label)\")\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: {\r\n      requests: 'DRT&nbsp;Requests',\r\n      passengers: 'Passengers',\r\n      search: 'Search',\r\n      showhide: 'Show/Hide',\r\n      vehicles: 'DRT Vehicles',\r\n      routes: 'Routes',\r\n      speed: 'Speed',\r\n      backgroundTraffic: 'All Traffic',\r\n    },\r\n    de: {\r\n      requests: 'DRT&nbsp;Anfragen',\r\n      passengers: 'Passagiere',\r\n      search: 'Suche',\r\n      showhide: 'Ein-/Ausblenden',\r\n      vehicles: 'DRT Fahrzeuge',\r\n      routes: 'Routen',\r\n      speed: 'Geschwindigkeit',\r\n      backgroundTraffic: 'Alle Fahrzeuge',\r\n    },\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\nimport { ToggleButton } from 'vue-js-toggle-button'\r\n\r\nexport default defineComponent({\r\n  name: 'XmasSettingsPanel',\r\n  i18n,\r\n  components: { ToggleButton },\r\n  props: {\r\n    items: { type: Object, required: true },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.settings-panel-content {\r\n  margin: 2rem 0.25rem 0 0.25rem;\r\n}\r\n\r\nh4 {\r\n  font-weight: bold;\r\n  font-size: 0.8rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.row {\r\n  display: 'grid';\r\n  grid-template-columns: 'auto 1fr';\r\n}\r\n\r\nlabel {\r\n  margin: auto 0 auto 0rem;\r\n  text-align: 'left';\r\n}\r\n\r\n.toggle {\r\n  margin-bottom: 0.25rem;\r\n  margin-right: 0.5rem;\r\n}\r\n</style>\r\n","\r\n.settings-panel-content\r\n  h4 {{ $t('showhide')}}\r\n\r\n  .row(:key=\"label\" v-for=\"label in Object.keys(items)\")\r\n    toggle-button.toggle(\r\n      :width=\"40\"\r\n      :value=\"items[label]\"\r\n      :labels=\"false\"\r\n      :color=\"{checked: '#4b7cc4', unchecked: '#222'}\"\r\n      @change=\"$emit('click',label)\")\r\n    label(v-html=\"$t(label)\")\r\n\r\n","import { ArcLayer } from '@deck.gl/layers'\r\n\r\nconst defaultProps = {\r\n  currentTime: { type: 'number', value: 0, min: 0 },\r\n  getTimeStart: { type: 'accessor', value: null },\r\n  getTimeEnd: { type: 'accessor', value: null },\r\n  searchFlag: { type: 'number', value: 0 },\r\n}\r\n\r\nexport default class DrtRequestArcLayer extends ArcLayer {\r\n  getShaders() {\r\n    const shaders = super.getShaders()\r\n    shaders.inject = {\r\n      // Timestamp of the vertex\r\n      'vs:#decl': `\\\r\n        attribute float timeStart;\r\n        attribute float timeEnd;\r\n        uniform float currentTime;\r\n        uniform float searchFlag;\r\n        varying float vTime;\r\n      `,\r\n      'vs:#main-start': `\\\r\n        if (searchFlag == 1.0) {\r\n          vTime = 999.0;\r\n        } else if (timeEnd == -1.0 || timeStart > currentTime || timeEnd < currentTime ) {\r\n          vTime = -1.0;\r\n          return;\r\n        } else {\r\n          float nearBeginning = currentTime - timeStart;\r\n          float nearEnd = timeEnd - currentTime;\r\n          vTime = min(nearBeginning, nearEnd);\r\n        }\r\n      `,\r\n      'fs:#decl': `\\\r\n        uniform float currentTime;\r\n        uniform float searchFlag;\r\n        varying float vTime;\r\n      `,\r\n      'fs:#main-start': `\\\r\n      if (searchFlag == 0.0 && vTime == -1.0 ) discard;\r\n      `,\r\n      // fade the traces in and out\r\n      'fs:DECKGL_FILTER_COLOR': `\\\r\n        if (vTime <= 10.0) color.a *= (vTime / 10.0);\r\n      `,\r\n    }\r\n    return shaders\r\n  }\r\n\r\n  initializeState(params: any) {\r\n    super.initializeState(params)\r\n\r\n    const attributeManager = this.getAttributeManager()\r\n    attributeManager.addInstanced({\r\n      timeStart: { size: 1, accessor: 'getTimeStart' },\r\n      timeEnd: { size: 1, accessor: 'getTimeEnd' },\r\n    })\r\n  }\r\n\r\n  draw(params: any) {\r\n    const { currentTime } = this.props\r\n\r\n    params.uniforms = Object.assign({}, params.uniforms, {\r\n      currentTime,\r\n    })\r\n\r\n    super.draw(params)\r\n  }\r\n}\r\n\r\nDrtRequestArcLayer.layerName = 'DrtRequestArcLayer'\r\nDrtRequestArcLayer.defaultProps = defaultProps\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { StaticMap } from 'react-map-gl'\r\nimport { AmbientLight, PointLight, LightingEffect } from '@deck.gl/core'\r\nimport DeckGL from '@deck.gl/react'\r\n\r\nimport DrtRequestLayer from './DrtRequestLayer'\r\nimport MovingIconsLayer from '@/layers/moving-icons/moving-icons-layer'\r\nimport PathTraceLayer from '@/layers/PathTraceLayer'\r\nimport { MAPBOX_TOKEN, REACT_VIEW_HANDLES } from '@/Globals'\r\n\r\nimport globalStore from '@/store'\r\n\r\nconst BASE_URL = import.meta.env.BASE_URL\r\n\r\nconst ICON_MAPPING = {\r\n  marker: { x: 0, y: 0, width: 128, height: 128, mask: true },\r\n  info: { x: 128, y: 0, width: 128, height: 128, mask: true },\r\n  vehicle: { x: 128, y: 128, width: 128, height: 128, mask: true },\r\n  diamond: { x: 0, y: 128, width: 128, height: 128, mask: false },\r\n}\r\n\r\nconst ambientLight = new AmbientLight({\r\n  color: [255, 255, 255],\r\n  intensity: 1.0,\r\n})\r\n\r\nconst pointLight = new PointLight({\r\n  color: [255, 255, 255],\r\n  intensity: 2.0,\r\n  position: [-74.05, 40.7, 8000],\r\n})\r\n\r\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight })\r\n\r\nconst DEFAULT_THEME = {\r\n  vehicleColor: [200, 130, 250],\r\n  trailColor0: [235, 235, 25],\r\n  trailColor1: [23, 184, 190],\r\n  effects: [lightingEffect],\r\n}\r\n\r\nconst DRT_REQUEST = {\r\n  time: 0,\r\n  fromX: 1,\r\n  fromY: 2,\r\n  toX: 3,\r\n  toY: 4,\r\n  veh: 5,\r\n  arrival: 6,\r\n}\r\n\r\nexport default function Component(props: {\r\n  viewId: number\r\n  dark: boolean\r\n  simulationTime: number\r\n  paths: any[]\r\n  drtRequests: any[]\r\n  traces: any[]\r\n  colors: any\r\n  center: [number, number]\r\n  settingsShowLayers: { [label: string]: boolean }\r\n  vehicleLookup: string[]\r\n  searchEnabled: boolean\r\n  onClick: any\r\n}) {\r\n  const {\r\n    simulationTime,\r\n    paths,\r\n    traces,\r\n    drtRequests,\r\n    settingsShowLayers,\r\n    center,\r\n    dark,\r\n    vehicleLookup,\r\n    searchEnabled,\r\n    onClick,\r\n    viewId,\r\n  } = props\r\n\r\n  const theme = DEFAULT_THEME\r\n\r\n  // set initial view\r\n  const [viewState, setViewState] = useState(\r\n    center\r\n      ? ({\r\n          center: [16, 42],\r\n          longitude: center[0],\r\n          latitude: center[1],\r\n          pitch: 0,\r\n          bearing: 0,\r\n          zoom: 10,\r\n        } as any)\r\n      : Object.assign({}, globalStore.state.viewState)\r\n  )\r\n\r\n  // register setViewState in global view updater so we can respond to external map motion\r\n  REACT_VIEW_HANDLES[viewId] = () => {\r\n    setViewState(globalStore.state.viewState)\r\n  }\r\n\r\n  const arcWidth = 1\r\n  const [hoverInfo, setHoverInfo] = useState({} as any)\r\n\r\n  const layers: any = []\r\n\r\n  function handleClick() {\r\n    console.log(hoverInfo)\r\n    // send null as message that blank area was clicked\r\n    if (!hoverInfo.object) {\r\n      onClick(null)\r\n    } else {\r\n      onClick(hoverInfo.object.v)\r\n    }\r\n  }\r\n\r\n  function renderTooltip({ hoverInfo }: any) {\r\n    const { object, x, y } = hoverInfo\r\n\r\n    if (!object) {\r\n      return null\r\n    }\r\n\r\n    const vehicleId = vehicleLookup[object.v]\r\n\r\n    return (\r\n      <div\r\n        className=\"tooltip\"\r\n        style={{\r\n          fontSize: '0.8rem',\r\n          backgroundColor: '#ddddeedd',\r\n          borderLeft: '6px solid green',\r\n          boxShadow: '2.5px 2px 4px rgba(0,0,0,0.25)',\r\n          color: '#223',\r\n          padding: '1rem 1rem',\r\n          position: 'absolute',\r\n          left: x + 40,\r\n          top: y - 30,\r\n        }}\r\n      >\r\n        <big>\r\n          <b>{vehicleId}</b>\r\n        </big>\r\n        <div>Passagiere: {object.occ} </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (settingsShowLayers.routes)\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new PathTraceLayer({\r\n        id: 'Routen',\r\n        data: traces,\r\n        currentTime: simulationTime,\r\n        getSourcePosition: (d: any) => d.p0,\r\n        getTargetPosition: (d: any) => d.p1,\r\n        getTimeStart: (d: any) => d.t0,\r\n        getTimeEnd: (d: any) => d.t1,\r\n        getColor: (d: any) => props.colors[d.occ],\r\n        getWidth: 1, // (d: any) => 3.0 * (d.occ + 1) - 1,\r\n        opacity: 0.8,\r\n        widthMinPixels: 1,\r\n        rounded: false,\r\n        shadowEnabled: false,\r\n        searchFlag: searchEnabled ? 1.0 : 0.0,\r\n        pickable: true,\r\n        autoHighlight: true,\r\n        highlightColor: [255, 0, 255],\r\n        onHover: setHoverInfo,\r\n      })\r\n    )\r\n\r\n  if (settingsShowLayers.vehicles)\r\n    layers.push(\r\n      //@ts-ignore\r\n      new MovingIconsLayer({\r\n        id: 'Vehicles',\r\n        data: paths,\r\n        getPathStart: (d: any) => d.p0,\r\n        getPathEnd: (d: any) => d.p1,\r\n        getTimeStart: (d: any) => d.t0,\r\n        getTimeEnd: (d: any) => d.t1,\r\n        getIcon: (d: any) => 'vehicle',\r\n        getColor: (d: any) => props.colors[d.occ],\r\n        iconMoving: 'vehicle',\r\n        iconStill: 'diamond',\r\n        getSize: searchEnabled ? 72 : 64,\r\n        opacity: 1.0,\r\n        currentTime: simulationTime,\r\n        shadowEnabled: false,\r\n        noAlloc: true,\r\n        iconAtlas: BASE_URL + '/images/icon-atlas.png',\r\n        iconMapping: ICON_MAPPING,\r\n        sizeScale: 0.5,\r\n        billboard: false,\r\n        pickable: true,\r\n        depthTest: true,\r\n        autoHighlight: false,\r\n        highlightColor: [255, 0, 255],\r\n        onHover: setHoverInfo,\r\n        parameters: {\r\n          depthTest: false,\r\n        },\r\n      })\r\n    )\r\n\r\n  if (settingsShowLayers.requests)\r\n    layers.push(\r\n      //@ts-ignore:\r\n      new DrtRequestLayer({\r\n        id: 'DRT Requests',\r\n        data: drtRequests,\r\n        currentTime: simulationTime,\r\n        getSourcePosition: (d: any) => [d[DRT_REQUEST.fromX], d[DRT_REQUEST.fromY]],\r\n        getTargetPosition: (d: any) => [d[DRT_REQUEST.toX], d[DRT_REQUEST.toY]],\r\n        getTimeStart: (d: any) => d[DRT_REQUEST.time],\r\n        getTimeEnd: (d: any) => d[DRT_REQUEST.arrival],\r\n        getSourceColor: [255, 0, 255],\r\n        getTargetColor: [200, 255, 255],\r\n        getWidth: arcWidth,\r\n        opacity: 0.5,\r\n        searchFlag: searchEnabled ? 1.0 : 0.0,\r\n      })\r\n    )\r\n\r\n  return (\r\n    <DeckGL\r\n      layers={layers}\r\n      effects={theme.effects}\r\n      pickingRadius={5}\r\n      viewState={viewState}\r\n      controller={true}\r\n      getCursor={() => 'pointer'}\r\n      onClick={handleClick}\r\n      onViewStateChange={(e: any) => {\r\n        globalStore.commit('setMapCamera', e.viewState)\r\n      }}\r\n    >\r\n      {\r\n        /*\r\n        // @ts-ignore */\r\n        <StaticMap mapStyle={globalStore.getters.mapStyle} mapboxApiAccessToken={MAPBOX_TOKEN} />\r\n      }\r\n      {renderTooltip({ hoverInfo })}\r\n    </DeckGL>\r\n  )\r\n}\r\n","<template lang=\"pug\">\r\n.gl-app(:class=\"{'hide-thumbnail': !thumbnail}\"\r\n        :style='{\"background\": urlThumbnail}' oncontextmenu=\"return false\")\r\n\r\n  trip-viz.anim(v-if=\"!thumbnail\"\r\n                :center = \"vizDetails.center\"\r\n                :colors = \"COLOR_OCCUPANCY\"\r\n                :drtRequests = \"$options.drtRequests\"\r\n                :dark = \"globalState.isDarkMode\"\r\n                :paths = \"$options.paths\"\r\n                :settingsShowLayers = \"SETTINGS\"\r\n                :searchEnabled = \"searchEnabled\"\r\n                :simulationTime = \"simulationTime\"\r\n                :traces = \"$options.traces\"\r\n                :vehicleLookup = \"vehicleLookup\"\r\n                :viewId = \"viewId\"\r\n                :onClick = \"handleClick\")\r\n\r\n  zoom-buttons(v-if=\"!thumbnail\")\r\n\r\n  //- isLoaded && !thumbnail\")\r\n  .right-side(v-if=\"isLoaded && !thumbnail\")\r\n    collapsible-panel(direction=\"right\")\r\n      .big.clock\r\n        p {{ myState.clock }}\r\n\r\n      .panel-items\r\n        legend-colors.legend-block(v-if=\"legendItems.length\"\r\n          :title=\"`${$t('passengers')}:`\" :items=\"legendItems\")\r\n\r\n        legend-colors.legend-block(:title=\"`${$t('requests')}:`\" :items=\"legendRequests\")\r\n\r\n        .search-panel\r\n          p.speed-label(:style=\"{margin: '1rem 0 0 0'}\") {{ $t('search') }}\r\n          form(autocomplete=\"off\")\r\n          .field\r\n            p.control.has-icons-left\r\n              input.input.is-small(type=\"email\" :placeholder=\"`${$t('search')}...`\" v-model=\"searchTerm\")\r\n              span.icon.is-small.is-left\r\n                i.fas.fa-search\r\n\r\n        settings-panel.settings-area(:items=\"SETTINGS\" @click=\"handleSettingChange\")\r\n\r\n        .speed-block\r\n          p.speed-label {{ $t('speed') }}:\r\n            br\r\n            | {{ speed }}x\r\n\r\n          b-slider.speed-slider(v-model=\"speed\"\r\n            :min=\"speedStops[0]\"\r\n            :max=\"speedStops[speedStops.length-1]\"\r\n            :duration=\"0\"\r\n            :dotSize=\"20\"\r\n            :tooltip=\"true\"\r\n            tooltip-placement=\"bottom\"\r\n            :tooltip-formatter=\"val => val + 'x'\"\r\n          )\r\n            template(v-for=\"val in speedStops\")\r\n              b-slider-tick(:value=\"val\" :key=\"val\")\r\n\r\n  playback-controls.bottom-area(v-if=\"!thumbnail && isLoaded\"\r\n      @click='toggleSimulation'\r\n      @time='setTime'\r\n      :timeStart = \"timeStart\"\r\n      :timeEnd = \"timeEnd\"\r\n      :isRunning = \"myState.isRunning\"\r\n      :currentTime = \"simulationTime\")\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: {\r\n      requests: 'DRT Requests',\r\n      passengers: 'Passengers',\r\n      search: 'Search',\r\n      showhide: 'Show/Hide',\r\n      vehicles: 'Vehicles',\r\n      routes: 'Routes',\r\n      speed: 'Speed',\r\n    },\r\n    de: {\r\n      requests: 'DRT Anfragen',\r\n      passengers: 'Passagiere',\r\n      search: 'Suche',\r\n      showhide: 'Ein-/Ausblenden',\r\n      vehicles: 'DRT Fahrzeuge',\r\n      routes: 'DRT Routen',\r\n      speed: 'Geschwindigkeit',\r\n    },\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\nimport type { PropType } from 'vue'\r\n\r\nimport VueSlider from 'vue-slider-component'\r\nimport { ToggleButton } from 'vue-js-toggle-button'\r\nimport readBlob from 'read-blob'\r\nimport YAML from 'yaml'\r\nimport crossfilter from 'crossfilter2'\r\nimport { blobToArrayBuffer, blobToBinaryString } from 'blob-util'\r\nimport * as coroutines from 'js-coroutines'\r\n\r\nimport globalStore from '@/store'\r\nimport pako from '@aftersim/pako'\r\nimport CollapsiblePanel from '@/components/CollapsiblePanel.vue'\r\nimport LegendColors from './LegendColors'\r\nimport PlaybackControls from '@/components/PlaybackControls.vue'\r\nimport SettingsPanel from './SettingsPanel.vue'\r\nimport ZoomButtons from '@/components/ZoomButtons.vue'\r\nimport { arrayBufferToBase64 } from '@/js/util'\r\n\r\nimport {\r\n  ColorScheme,\r\n  FileSystem,\r\n  LegendItem,\r\n  LegendItemType,\r\n  FileSystemConfig,\r\n  VisualizationPlugin,\r\n  LIGHT_MODE,\r\n  DARK_MODE,\r\n  REACT_VIEW_HANDLES,\r\n} from '@/Globals'\r\n\r\nimport TripViz from './TripViz'\r\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\r\n\r\nconst MyComponent = defineComponent({\r\n  name: 'VehicleAnimationPlugin',\r\n  i18n,\r\n  components: {\r\n    CollapsiblePanel,\r\n    SettingsPanel,\r\n    LegendColors,\r\n    TripViz,\r\n    VueSlider,\r\n    PlaybackControls,\r\n    ToggleButton,\r\n    ZoomButtons,\r\n  },\r\n  props: {\r\n    root: { type: String, required: true },\r\n    subfolder: { type: String, required: true },\r\n    yamlConfig: String,\r\n    thumbnail: Boolean,\r\n  },\r\n  data: () => {\r\n    const COLOR_OCCUPANCY = {\r\n      0: [140, 140, 160],\r\n      1: [85, 255, 85],\r\n      2: [255, 255, 85],\r\n      3: [240, 110, 30],\r\n      4: [192, 30, 50],\r\n    } as any\r\n\r\n    const SETTINGS = {\r\n      vehicles: true,\r\n      routes: true,\r\n      requests: false,\r\n    } as any\r\n\r\n    return {\r\n      viewId: Math.floor(1e12 * Math.random()),\r\n      COLOR_OCCUPANCY,\r\n      SETTINGS,\r\n      legendItems: Object.keys(COLOR_OCCUPANCY).map(key => {\r\n        return {\r\n          type: LegendItemType.line,\r\n          color: COLOR_OCCUPANCY[key],\r\n          value: key,\r\n          label: key,\r\n        }\r\n      }),\r\n\r\n      legendRequests: [{ type: LegendItemType.line, color: [255, 0, 255], value: 0, label: '' }],\r\n\r\n      vizDetails: {\r\n        network: '',\r\n        drtTrips: '',\r\n        projection: '',\r\n        title: '',\r\n        description: '',\r\n        thumbnail: '',\r\n        center: [13.45, 52.5],\r\n        zoom: 10,\r\n        mapIsIndependent: false,\r\n        theme: '',\r\n      },\r\n\r\n      myState: {\r\n        statusMessage: '',\r\n        clock: '00:00',\r\n        colorScheme: ColorScheme.DarkMode,\r\n        isRunning: false,\r\n        isShowingHelp: false,\r\n        subfolder: '',\r\n        yamlConfig: '',\r\n        thumbnail: false,\r\n        data: [] as any[],\r\n      },\r\n\r\n      timeStart: 0,\r\n      timeEnd: 86400,\r\n\r\n      traces: crossfilter([]) as crossfilter.Crossfilter<any>,\r\n      traceStart: {} as crossfilter.Dimension<any, any>,\r\n      traceEnd: {} as crossfilter.Dimension<any, any>,\r\n      traceVehicle: {} as crossfilter.Dimension<any, any>,\r\n\r\n      paths: crossfilter([]) as crossfilter.Crossfilter<any>,\r\n      pathStart: {} as crossfilter.Dimension<any, any>,\r\n      pathEnd: {} as crossfilter.Dimension<any, any>,\r\n      pathVehicle: {} as crossfilter.Dimension<any, any>,\r\n\r\n      requests: crossfilter([]) as crossfilter.Crossfilter<any>,\r\n      requestStart: {} as crossfilter.Dimension<any, any>,\r\n      requestEnd: {} as crossfilter.Dimension<any, any>,\r\n      requestVehicle: {} as crossfilter.Dimension<any, any>,\r\n\r\n      simulationTime: 6 * 3600, // 8 * 3600 + 10 * 60 + 10\r\n\r\n      timeElapsedSinceLastFrame: 0,\r\n\r\n      searchTerm: '',\r\n      searchEnabled: false,\r\n\r\n      globalState: globalStore.state,\r\n      isDarkMode: globalStore.state.isDarkMode,\r\n      isLoaded: true,\r\n      showHelp: false,\r\n\r\n      speedStops: [-10, -5, -2, -1, -0.5, -0.25, 0, 0.25, 0.5, 1, 2, 5, 10],\r\n      speed: 1,\r\n\r\n      legendBits: [] as any[],\r\n      thumbnailUrl: \"url('assets/thumbnail.jpg') no-repeat;\",\r\n\r\n      vehicleLookup: [] as string[],\r\n      vehicleLookupString: {} as { [id: string]: number },\r\n      isPausedDueToHiding: false,\r\n    }\r\n  },\r\n  computed: {\r\n    fileApi(): HTTPFileSystem {\r\n      return new HTTPFileSystem(this.fileSystem, globalStore)\r\n    },\r\n\r\n    fileSystem(): FileSystemConfig {\r\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\r\n        (a: FileSystemConfig) => a.slug === this.root\r\n      )\r\n      if (svnProject.length === 0) {\r\n        console.log('no such project')\r\n        throw Error\r\n      }\r\n      return svnProject[0]\r\n    },\r\n\r\n    urlThumbnail(): string {\r\n      return this.thumbnailUrl\r\n    },\r\n    textColor(): any {\r\n      const lightmode = {\r\n        text: '#3498db',\r\n        bg: '#eeeef480',\r\n      }\r\n\r\n      const darkmode = {\r\n        text: 'white',\r\n        bg: '#181518aa',\r\n      }\r\n\r\n      return this.myState.colorScheme === ColorScheme.DarkMode ? darkmode : lightmode\r\n    },\r\n  },\r\n  watch: {\r\n    '$store.state.viewState'() {\r\n      if (this.vizDetails.mapIsIndependent) return\r\n\r\n      if (!REACT_VIEW_HANDLES[this.viewId]) return\r\n      REACT_VIEW_HANDLES[this.viewId]()\r\n    },\r\n\r\n    async 'globalState.authAttempts'() {\r\n      console.log('AUTH CHANGED - Reload')\r\n      if (!this.yamlConfig) this.buildRouteFromUrl()\r\n      await this.getVizDetails()\r\n    },\r\n\r\n    'globalState.colorScheme'() {\r\n      this.isDarkMode = this.globalState.colorScheme === ColorScheme.DarkMode\r\n      this.updateLegendColors()\r\n    },\r\n\r\n    searchTerm() {\r\n      const vehicleNumber = this.vehicleLookupString[this.searchTerm]\r\n      if (vehicleNumber > -1) {\r\n        console.log('vehicle', vehicleNumber)\r\n        this.pathVehicle?.filterExact(vehicleNumber)\r\n        this.traceVehicle?.filterExact(vehicleNumber)\r\n        this.requestVehicle?.filterExact(vehicleNumber)\r\n        this.requestStart.filterAll()\r\n        this.requestEnd.filterAll()\r\n        this.searchEnabled = true\r\n      } else {\r\n        console.log('nope')\r\n        this.pathVehicle?.filterAll()\r\n        this.traceVehicle?.filterAll()\r\n        this.requestVehicle?.filterAll()\r\n        this.searchEnabled = false\r\n      }\r\n      this.updateDatasetFilters()\r\n    },\r\n  },\r\n  methods: {\r\n    async handleSettingChange(label: string) {\r\n      console.log(label)\r\n      this.SETTINGS[label] = !this.SETTINGS[label]\r\n      this.updateDatasetFilters()\r\n      this.simulationTime += 1 // this will force a redraw\r\n    },\r\n\r\n    // this happens if viz is the full page, not a thumbnail on a project page\r\n    buildRouteFromUrl() {\r\n      const params = this.$route.params\r\n      if (!params.project || !params.pathMatch) {\r\n        console.log('I CANT EVEN: NO PROJECT/PARHMATCH')\r\n        return\r\n      }\r\n\r\n      // subfolder and config file\r\n      const sep = 1 + params.pathMatch.lastIndexOf('/')\r\n      const subfolder = params.pathMatch.substring(0, sep)\r\n      const config = params.pathMatch.substring(sep)\r\n\r\n      this.myState.subfolder = subfolder\r\n      this.myState.yamlConfig = config\r\n    },\r\n\r\n    async getVizDetails() {\r\n      // first get config\r\n      try {\r\n        // might be a project config:\r\n        const filename =\r\n          this.myState.yamlConfig.indexOf('/') > -1\r\n            ? this.myState.yamlConfig\r\n            : this.myState.subfolder + '/' + this.myState.yamlConfig\r\n\r\n        const text = await this.fileApi.getFileText(filename)\r\n        this.vizDetails = YAML.parse(text)\r\n      } catch (err) {\r\n        console.log('failed')\r\n        const e = err as any\r\n        // maybe it failed because password?\r\n        if (this.fileSystem.needPassword && e.status === 401) {\r\n          globalStore.commit('requestLogin', this.fileSystem.slug)\r\n        }\r\n      }\r\n\r\n      // initial view\r\n      if (this.vizDetails.theme) this.$store.commit('setTheme', this.vizDetails.theme)\r\n\r\n      if (this.vizDetails.center) {\r\n        this.$store.commit('setMapCamera', {\r\n          longitude: this.vizDetails.center[0],\r\n          latitude: this.vizDetails.center[1],\r\n          zoom: this.vizDetails.zoom || 10,\r\n          pitch: 10,\r\n          bearing: 0,\r\n        })\r\n      }\r\n\r\n      // title\r\n      const t = this.vizDetails.title ? this.vizDetails.title : 'Agent Animation'\r\n      this.$emit('title', t)\r\n\r\n      this.buildThumbnail()\r\n    },\r\n\r\n    async buildThumbnail() {\r\n      if (this.thumbnail && this.vizDetails.thumbnail) {\r\n        try {\r\n          const blob = await this.fileApi.getFileBlob(\r\n            this.myState.subfolder + '/' + this.vizDetails.thumbnail\r\n          )\r\n          const buffer = await readBlob.arraybuffer(blob)\r\n          const base64 = arrayBufferToBase64(buffer)\r\n          if (base64)\r\n            this.thumbnailUrl = `center / cover no-repeat url(data:image/png;base64,${base64})`\r\n        } catch (e) {\r\n          console.error(e)\r\n        }\r\n      }\r\n    },\r\n\r\n    handleClick(vehicleNumber: any) {\r\n      // null means empty area clicked: clear map.\r\n      if (vehicleNumber === null) {\r\n        this.searchTerm = ''\r\n        return\r\n      }\r\n\r\n      const vehId = this.vehicleLookup[vehicleNumber]\r\n      console.log(vehId)\r\n\r\n      // set -- or clear -- search box!\r\n      if (this.searchTerm === vehId) this.searchTerm = ''\r\n      else this.searchTerm = vehId\r\n    },\r\n\r\n    updateLegendColors() {\r\n      // const theme = this.myState.colorScheme == ColorScheme.LightMode ? LIGHT_MODE : DARK_MODE\r\n      // this.legendBits = [\r\n      //   { label: 'susceptible', color: theme.susceptible },\r\n      //   { label: 'latently infected', color: theme.infectedButNotContagious },\r\n      //   { label: 'contagious', color: theme.contagious },\r\n      //   { label: 'symptomatic', color: theme.symptomatic },\r\n      //   { label: 'seriously ill', color: theme.seriouslyIll },\r\n      //   { label: 'critical', color: theme.critical },\r\n      //   { label: 'recovered', color: theme.recovered },\r\n      // ]\r\n    },\r\n\r\n    setWallClock() {\r\n      const hour = Math.floor(this.simulationTime / 3600)\r\n      const minute = Math.floor(this.simulationTime / 60) % 60\r\n      this.myState.clock = `${hour < 10 ? '0' : ''}${hour}${minute < 10 ? ':0' : ':'}${minute}`\r\n    },\r\n\r\n    setTime(seconds: number) {\r\n      this.simulationTime = seconds\r\n      this.setWallClock()\r\n\r\n      // only filter if search is disabled and we have data loaded already\r\n      if (this.traceStart && this.pathStart && this.requestStart) {\r\n        this.pathStart.filter([0, this.simulationTime])\r\n        this.pathEnd.filter([this.simulationTime, Infinity])\r\n\r\n        // scrub vehicles if search is disabled\r\n        if (!this.searchEnabled) {\r\n          this.traceStart.filter([0, this.simulationTime])\r\n          this.traceEnd.filter([this.simulationTime, Infinity])\r\n          this.requestStart.filter([0, this.simulationTime])\r\n          this.requestEnd.filter([this.simulationTime, Infinity])\r\n        }\r\n      }\r\n\r\n      //@ts-ignore\r\n      this.$options.paths = this.paths.allFiltered()\r\n      //@ts-ignore\r\n      this.$options.traces = this.traces.allFiltered()\r\n      //@ts-ignore\r\n      this.$options.drtRequests = this.requests.allFiltered()\r\n    },\r\n\r\n    toggleSimulation() {\r\n      this.myState.isRunning = !this.myState.isRunning\r\n      this.timeElapsedSinceLastFrame = Date.now()\r\n\r\n      // ok so, many times I mashed the play/pause wondering why things wouldn't\r\n      // start moving. Turns out a 0x speed is not very helpful! Help the user\r\n      // out and switch the speed up if they press play.\r\n      if (this.myState.isRunning && this.speed === 0.0) this.speed = 1.0\r\n\r\n      // and begin!\r\n      if (this.myState.isRunning) this.animate()\r\n    },\r\n\r\n    async parseDrtRequests(requests: any[]) {\r\n      if (this.vehicleLookup.length) {\r\n        for (const request of requests) {\r\n          try {\r\n            request[5] = this.vehicleLookupString[request[5]]\r\n          } catch (e) {}\r\n        }\r\n      }\r\n\r\n      return crossfilter(requests)\r\n    },\r\n\r\n    async parseVehicles(trips: any[]) {\r\n      const allTrips: any[] = []\r\n      let vehNumber = -1\r\n\r\n      await coroutines.forEachAsync(trips, (trip: any) => {\r\n        const path = trip.path\r\n        const timestamps = trip.timestamps\r\n        const passengers = trip.passengers\r\n\r\n        // attach vehicle ID to each segment so we can click\r\n        vehNumber++\r\n        this.vehicleLookup[vehNumber] = trip.id\r\n        this.vehicleLookupString[trip.id] = vehNumber\r\n\r\n        for (let i = 0; i < trip.path.length - 1; i++) {\r\n          allTrips.push({\r\n            t0: timestamps[i],\r\n            t1: timestamps[i + 1],\r\n            p0: path[i],\r\n            p1: path[i + 1],\r\n            v: vehNumber,\r\n            occ: passengers[i],\r\n          })\r\n        }\r\n      })\r\n      return crossfilter(allTrips)\r\n    },\r\n\r\n    updateDatasetFilters() {\r\n      // dont' filter if we haven't loaded yet\r\n      if (!this.traceStart || !this.pathStart || !this.requestStart) return\r\n\r\n      // filter out all traces that havent started or already finished\r\n      if (this.SETTINGS.routes) {\r\n        if (this.searchEnabled) {\r\n          this.traceStart.filterAll()\r\n          this.traceEnd.filterAll()\r\n        } else {\r\n          this.traceStart.filter([0, this.simulationTime])\r\n          this.traceEnd.filter([this.simulationTime, Infinity])\r\n        }\r\n        //@ts-ignore\r\n        this.$options.traces = this.traces.allFiltered()\r\n      }\r\n\r\n      if (this.SETTINGS.vehicles) {\r\n        this.pathStart.filter([0, this.simulationTime])\r\n        this.pathEnd.filter([this.simulationTime, Infinity])\r\n        //@ts-ignore:\r\n        this.$options.paths = this.paths.allFiltered()\r\n      }\r\n\r\n      if (this.SETTINGS.requests) {\r\n        if (this.searchEnabled) {\r\n          this.requestStart.filterAll()\r\n          this.requestEnd.filterAll()\r\n        } else {\r\n          this.requestStart.filter([0, this.simulationTime])\r\n          this.requestEnd.filter([this.simulationTime, Infinity])\r\n        }\r\n        //@ts-ignore\r\n        this.$options.drtRequests = this.requests.allFiltered()\r\n      }\r\n    },\r\n\r\n    animate() {\r\n      if (this.myState.isRunning) {\r\n        const elapsed = Date.now() - this.timeElapsedSinceLastFrame\r\n        this.timeElapsedSinceLastFrame += elapsed\r\n        this.simulationTime += elapsed * this.speed * 0.06\r\n\r\n        this.updateDatasetFilters()\r\n        this.setWallClock()\r\n        window.requestAnimationFrame(this.animate)\r\n      }\r\n    },\r\n\r\n    handleVisibilityChange() {\r\n      if (this.isPausedDueToHiding && !document.hidden) {\r\n        console.log('unpausing')\r\n        this.isPausedDueToHiding = false\r\n        this.toggleSimulation()\r\n      } else if (this.myState.isRunning && document.hidden) {\r\n        console.log('pausing')\r\n        this.isPausedDueToHiding = true\r\n        this.toggleSimulation()\r\n      }\r\n    },\r\n\r\n    // convert path/timestamp info into path traces we can use\r\n    async parseRouteTraces(trips: any[]) {\r\n      let countTraces = 0\r\n      let vehNumber = -1\r\n\r\n      const traces: any = []\r\n\r\n      await coroutines.forEachAsync(trips, (vehicle: any) => {\r\n        vehNumber++\r\n\r\n        let time = vehicle.timestamps[0]\r\n        let nextTime = vehicle.timestamps[0]\r\n\r\n        let segments: any[] = []\r\n\r\n        for (let i = 1; i < vehicle.path.length; i++) {\r\n          nextTime = vehicle.timestamps[i]\r\n\r\n          // same point? start of new path.\r\n          if (\r\n            vehicle.path[i][0] === vehicle.path[i - 1][0] &&\r\n            vehicle.path[i][1] === vehicle.path[i - 1][1]\r\n          ) {\r\n            segments.forEach(segment => {\r\n              segment.t1 = vehicle.timestamps[i - 1]\r\n            })\r\n\r\n            traces.push(...segments)\r\n\r\n            segments = []\r\n            time = nextTime\r\n          } else {\r\n            segments.push({\r\n              t0: time,\r\n              p0: vehicle.path[i - 1],\r\n              p1: vehicle.path[i],\r\n              v: vehNumber,\r\n              occ: vehicle.passengers[i - 1],\r\n            })\r\n          }\r\n        }\r\n\r\n        // save final segments\r\n        segments.forEach(segment => {\r\n          segment.t1 = nextTime\r\n        })\r\n        traces.push(...segments)\r\n      })\r\n\r\n      return crossfilter(traces)\r\n    },\r\n\r\n    async loadFiles() {\r\n      let trips: any[] = []\r\n      let drtRequests: any = []\r\n\r\n      try {\r\n        if (this.vizDetails.drtTrips.endsWith('json')) {\r\n          const json = await this.fileApi.getFileJson(\r\n            this.myState.subfolder + '/' + this.vizDetails.drtTrips\r\n          )\r\n          trips = json.trips\r\n          drtRequests = json.drtRequests\r\n        } else if (this.vizDetails.drtTrips.endsWith('gz')) {\r\n          const blob = await this.fileApi.getFileBlob(\r\n            this.myState.subfolder + '/' + this.vizDetails.drtTrips\r\n          )\r\n          const blobString = blob ? await blobToBinaryString(blob) : null\r\n          let text = await coroutines.run(pako.inflateAsync(blobString, { to: 'string' }))\r\n          const json = JSON.parse(text)\r\n\r\n          trips = json.trips\r\n          drtRequests = json.drtRequests\r\n        }\r\n      } catch (e) {\r\n        console.error(e)\r\n        this.myState.statusMessage = '' + e\r\n      }\r\n      return { trips, drtRequests }\r\n    },\r\n\r\n    toggleLoaded(loaded: boolean) {\r\n      this.isLoaded = loaded\r\n    },\r\n\r\n    rotateColors() {\r\n      this.myState.colorScheme =\r\n        this.myState.colorScheme === ColorScheme.DarkMode\r\n          ? ColorScheme.LightMode\r\n          : ColorScheme.DarkMode\r\n      localStorage.setItem('plugin/agent-animation/colorscheme', this.myState.colorScheme)\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    globalStore.commit('setFullScreen', !this.thumbnail)\r\n\r\n    this.myState.thumbnail = this.thumbnail\r\n    this.myState.yamlConfig = this.yamlConfig ?? ''\r\n    this.myState.subfolder = this.subfolder\r\n\r\n    await this.getVizDetails()\r\n\r\n    if (this.thumbnail) return\r\n\r\n    this.showHelp = false\r\n    this.updateLegendColors()\r\n\r\n    this.setWallClock()\r\n\r\n    this.myState.statusMessage = '/ Dateien laden...'\r\n    console.log('loading files')\r\n    const { trips, drtRequests } = await this.loadFiles()\r\n\r\n    console.log('parsing vehicle motion')\r\n    this.myState.statusMessage = `${this.$t('vehicles')}...`\r\n    this.paths = await this.parseVehicles(trips)\r\n    this.pathStart = this.paths.dimension(d => d.t0)\r\n    this.pathEnd = this.paths.dimension(d => d.t1)\r\n    this.pathVehicle = this.paths.dimension(d => d.v)\r\n\r\n    console.log('Routes...')\r\n    this.myState.statusMessage = `${this.$t('routes')}...`\r\n    this.traces = await this.parseRouteTraces(trips)\r\n    this.traceStart = this.traces.dimension(d => d.t0)\r\n    this.traceEnd = this.traces.dimension(d => d.t1)\r\n    this.traceVehicle = this.traces.dimension(d => d.v)\r\n\r\n    console.log('Requests...')\r\n    this.myState.statusMessage = `${this.$t('requests')}...`\r\n    this.requests = await this.parseDrtRequests(drtRequests)\r\n    this.requestStart = this.requests.dimension(d => d[0]) // time0\r\n    this.requestEnd = this.requests.dimension(d => d[6]) // arrival\r\n    this.requestVehicle = this.requests.dimension(d => d[5])\r\n\r\n    console.log('GO!')\r\n    this.myState.statusMessage = ''\r\n\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange, false)\r\n\r\n    this.myState.isRunning = true\r\n    this.timeElapsedSinceLastFrame = Date.now()\r\n    this.animate()\r\n  },\r\n\r\n  beforeDestroy() {\r\n    document.removeEventListener('visibilityChange', this.handleVisibilityChange)\r\n    globalStore.commit('setFullScreen', false)\r\n    this.$store.commit('setFullScreen', false)\r\n    this.myState.isRunning = false\r\n  },\r\n})\r\n\r\nexport default MyComponent\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '~/vue-slider-component/theme/default.css';\r\n@import '@/styles.scss';\r\n\r\n.gl-app {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  display: grid;\r\n  pointer-events: none;\r\n  min-height: $thumbnailHeight;\r\n  background: url('assets/thumbnail.jpg') no-repeat;\r\n  background-size: cover;\r\n  grid-template-columns: 1fr min-content;\r\n  grid-template-rows: auto auto 1fr auto;\r\n  grid-template-areas:\r\n    'title         clock'\r\n    '.           rightside'\r\n    'playback    rightside';\r\n}\r\n\r\n.gl-app.hide-thumbnail {\r\n  background: none;\r\n}\r\n\r\n.nav {\r\n  z-index: 5;\r\n  grid-column: 1 / 4;\r\n  grid-row: 1 / 4;\r\n  box-shadow: 0px 2px 10px #22222266;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: auto auto 0 0;\r\n  background-color: var(--bgPanel);\r\n  padding: 0rem 3rem;\r\n\r\n  a {\r\n    color: white;\r\n    text-decoration: none;\r\n\r\n    &.router-link-exact-active {\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin: auto 0.5rem auto 0;\r\n    font-weight: normal;\r\n    padding: 0 0;\r\n    color: var(--textFancy);\r\n  }\r\n}\r\n\r\n.speed-block {\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.legend-block {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.speed-slider {\r\n  flex: 1;\r\n  width: 100%;\r\n  margin: 0.5rem 0.25rem 0.25rem 0rem;\r\n  padding: 0 0.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.big {\r\n  padding: 0rem 0;\r\n  font-size: 2.5rem;\r\n  line-height: 3.75rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.right-side {\r\n  width: 11rem;\r\n  grid-area: rightside;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.8rem;\r\n  pointer-events: auto;\r\n  margin-top: auto;\r\n  margin-bottom: 35px;\r\n  z-index: 5;\r\n}\r\n\r\n.bottom-area {\r\n  grid-area: playback;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: auto;\r\n  margin-bottom: 35px;\r\n  padding: 0.5rem 1rem;\r\n  pointer-events: auto;\r\n  width: 100%;\r\n}\r\n\r\n.settings-area {\r\n  z-index: 20;\r\n  pointer-events: auto;\r\n  font-size: 0.8rem;\r\n  padding: 0.25rem 0;\r\n  margin: 1.5rem 0rem 0 0;\r\n}\r\n\r\n.anim {\r\n  grid-column: 1 / 3;\r\n  grid-row: 1 / 7;\r\n  pointer-events: auto;\r\n}\r\n\r\n.speed-label {\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.clock {\r\n  color: white;\r\n  width: 100%;\r\n  background-color: #000000cc;\r\n  border: 3px solid white;\r\n  color: white;\r\n}\r\n\r\n.clock p {\r\n  text-align: center;\r\n  padding: 5px 1.5rem;\r\n}\r\n\r\n.tooltip {\r\n  padding: 5rem 5rem;\r\n  background-color: #ccc;\r\n}\r\n\r\n.panel-items {\r\n  margin: 0.5rem 0.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\ninput {\r\n  border: none;\r\n  background-color: var(--bgCream);\r\n  color: #ccc;\r\n}\r\n\r\n.left-side {\r\n  grid-column: 1/4;\r\n  grid-row: 1/4;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.8rem;\r\n  pointer-events: auto;\r\n  margin: 0 auto 0 0;\r\n  z-index: 1;\r\n}\r\n\r\n@media only screen and (max-width: 640px) {\r\n  .nav {\r\n    padding: 0.5rem 0.5rem;\r\n  }\r\n\r\n  .clock {\r\n    text-align: center;\r\n  }\r\n\r\n  .right-side {\r\n    font-size: 0.7rem;\r\n    margin-right: 0.25rem;\r\n  }\r\n\r\n  .big {\r\n    padding: 0 0rem;\r\n    margin-top: 0.5rem;\r\n    font-size: 1.3rem;\r\n    line-height: 2rem;\r\n  }\r\n\r\n  .side-section {\r\n    margin-left: 0;\r\n  }\r\n\r\n  .extra-buttons {\r\n    margin-right: 1rem;\r\n  }\r\n  .playback-stuff {\r\n    padding-right: 1rem;\r\n  }\r\n}\r\n</style>\r\n","import { LegendItem } from '@/Globals'\r\nimport React from 'react'\r\n\r\nexport default function Component(props: {\r\n  title: string\r\n  description?: string\r\n  values: number[]\r\n  items: LegendItem[]\r\n}) {\r\n  const listItems = props.items.map(item => (\r\n    <li key={item.value + item.value[0]} style={{ display: 'flex' }}>\r\n      {item.label && (\r\n        <div\r\n          style={{\r\n            margin: '0 0.5rem 0.0rem 0',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          {item.label}\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: `3px`,\r\n          marginTop: '0.5rem',\r\n          backgroundColor: `rgb(${item.color})`,\r\n        }}\r\n      ></div>\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <h4\r\n        style={{\r\n          textAlign: 'left',\r\n          fontWeight: 'bold',\r\n          margin: '1rem 0 0.25rem 0',\r\n          fontSize: '0.8rem',\r\n        }}\r\n      >\r\n        {props.title}\r\n      </h4>\r\n      <p>{props.description}</p>\r\n      <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>{listItems}</ul>\r\n    </div>\r\n  )\r\n}\r\n","\r\n.gl-app(:class=\"{'hide-thumbnail': !thumbnail}\"\r\n        :style='{\"background\": urlThumbnail}' oncontextmenu=\"return false\")\r\n\r\n  trip-viz.anim(v-if=\"!thumbnail\"\r\n                :center = \"vizDetails.center\"\r\n                :colors = \"COLOR_OCCUPANCY\"\r\n                :drtRequests = \"$options.drtRequests\"\r\n                :dark = \"globalState.isDarkMode\"\r\n                :paths = \"$options.paths\"\r\n                :settingsShowLayers = \"SETTINGS\"\r\n                :searchEnabled = \"searchEnabled\"\r\n                :simulationTime = \"simulationTime\"\r\n                :traces = \"$options.traces\"\r\n                :vehicleLookup = \"vehicleLookup\"\r\n                :viewId = \"viewId\"\r\n                :onClick = \"handleClick\")\r\n\r\n  zoom-buttons(v-if=\"!thumbnail\")\r\n\r\n  //- isLoaded && !thumbnail\")\r\n  .right-side(v-if=\"isLoaded && !thumbnail\")\r\n    collapsible-panel(direction=\"right\")\r\n      .big.clock\r\n        p {{ myState.clock }}\r\n\r\n      .panel-items\r\n        legend-colors.legend-block(v-if=\"legendItems.length\"\r\n          :title=\"`${$t('passengers')}:`\" :items=\"legendItems\")\r\n\r\n        legend-colors.legend-block(:title=\"`${$t('requests')}:`\" :items=\"legendRequests\")\r\n\r\n        .search-panel\r\n          p.speed-label(:style=\"{margin: '1rem 0 0 0'}\") {{ $t('search') }}\r\n          form(autocomplete=\"off\")\r\n          .field\r\n            p.control.has-icons-left\r\n              input.input.is-small(type=\"email\" :placeholder=\"`${$t('search')}...`\" v-model=\"searchTerm\")\r\n              span.icon.is-small.is-left\r\n                i.fas.fa-search\r\n\r\n        settings-panel.settings-area(:items=\"SETTINGS\" @click=\"handleSettingChange\")\r\n\r\n        .speed-block\r\n          p.speed-label {{ $t('speed') }}:\r\n            br\r\n            | {{ speed }}x\r\n\r\n          b-slider.speed-slider(v-model=\"speed\"\r\n            :min=\"speedStops[0]\"\r\n            :max=\"speedStops[speedStops.length-1]\"\r\n            :duration=\"0\"\r\n            :dotSize=\"20\"\r\n            :tooltip=\"true\"\r\n            tooltip-placement=\"bottom\"\r\n            :tooltip-formatter=\"val => val + 'x'\"\r\n          )\r\n            template(v-for=\"val in speedStops\")\r\n              b-slider-tick(:value=\"val\" :key=\"val\")\r\n\r\n  playback-controls.bottom-area(v-if=\"!thumbnail && isLoaded\"\r\n      @click='toggleSimulation'\r\n      @time='setTime'\r\n      :timeStart = \"timeStart\"\r\n      :timeEnd = \"timeEnd\"\r\n      :isRunning = \"myState.isRunning\"\r\n      :currentTime = \"simulationTime\")\r\n\r\n"],"names":["__vue2_script","defineComponent","name","i18n","messages","en","requests","passengers","search","showhide","vehicles","routes","speed","backgroundTraffic","de","components","ToggleButton","props","items","type","Object","required","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","$t","_l","keys","label","key","attrs","width","value","labels","color","checked","unchecked","on","change","$event","$emit","domProps","innerHTML","DrtRequestArcLayer","ArcLayer","getShaders","shaders","super","inject","initializeState","params","getAttributeManager","addInstanced","timeStart","size","accessor","timeEnd","draw","currentTime","uniforms","assign","layerName","defaultProps","min","getTimeStart","getTimeEnd","searchFlag","ICON_MAPPING","marker","x","y","height","mask","info","vehicle","diamond","DEFAULT_THEME","vehicleColor","trailColor0","trailColor1","effects","LightingEffect","ambientLight","AmbientLight","intensity","pointLight","PointLight","position","DRT_REQUEST","MyComponent","CollapsiblePanel","SettingsPanel","LegendColors","listItems","map","item","style","display","createElement","margin","fontWeight","marginTop","backgroundColor","React","textAlign","fontSize","title","description","listStyle","padding","TripViz","simulationTime","paths","traces","drtRequests","settingsShowLayers","center","dark","vehicleLookup","searchEnabled","onClick","viewId","theme","viewState","setViewState","useState","longitude","latitude","pitch","bearing","zoom","globalStore","state","REACT_VIEW_HANDLES","hoverInfo","setHoverInfo","exports","layers","push","PathTraceLayer","id","data","getSourcePosition","d","p0","getTargetPosition","p1","t0","t1","getColor","colors","occ","getWidth","opacity","widthMinPixels","rounded","shadowEnabled","pickable","autoHighlight","highlightColor","onHover","MovingIconsLayer","getPathStart","getPathEnd","getIcon","iconMoving","iconStill","getSize","noAlloc","iconAtlas","BASE_URL","iconMapping","sizeScale","billboard","depthTest","parameters","DrtRequestLayer","getSourceColor","getTargetColor","DeckGL","pickingRadius","controller","getCursor","console","log","object","v","onViewStateChange","e","commit","StaticMap","mapStyle","getters","mapboxApiAccessToken","MAPBOX_TOKEN","hoverInfo2","vehicleId","className","borderLeft","boxShadow","left","top","renderTooltip","VueSlider","PlaybackControls","ZoomButtons","root","String","subfolder","yamlConfig","thumbnail","Boolean","COLOR_OCCUPANCY","Math","floor","random","SETTINGS","legendItems","LegendItemType","line","legendRequests","vizDetails","network","drtTrips","projection","mapIsIndependent","myState","statusMessage","clock","colorScheme","ColorScheme","DarkMode","isRunning","isShowingHelp","crossfilter","traceStart","traceEnd","traceVehicle","pathStart","pathEnd","pathVehicle","requestStart","requestEnd","requestVehicle","timeElapsedSinceLastFrame","searchTerm","globalState","isDarkMode","isLoaded","showHelp","speedStops","legendBits","thumbnailUrl","vehicleLookupString","isPausedDueToHiding","computed","fileApi","HTTPFileSystem","fileSystem","svnProject","$store","svnProjects","filter","a","slug","length","Error","urlThumbnail","textColor","text","bg","watch","buildRouteFromUrl","getVizDetails","updateLegendColors","vehicleNumber","_a","filterExact","_b","filterAll","_d","_e","_f","updateDatasetFilters","methods","handleSettingChange","$route","project","pathMatch","sep","lastIndexOf","substring","config","filename","indexOf","getFileText","YAML","parse","err","needPassword","status","t","buildThumbnail","blob","getFileBlob","buffer","readBlob","arraybuffer","base64","arrayBufferToBase64","error","handleClick","vehId","setWallClock","hour","minute","setTime","seconds","Infinity","$options","allFiltered","toggleSimulation","Date","now","animate","parseDrtRequests","request","parseVehicles","trips","allTrips","vehNumber","coroutines.forEachAsync","forEachAsync","trip","path","timestamps","i","elapsed","window","requestAnimationFrame","handleVisibilityChange","document","hidden","parseRouteTraces","time","nextTime","segments","forEach","segment","loadFiles","endsWith","json","getFileJson","blobString","blobToBinaryString","coroutines.run","run","pako","inflateAsync","to","JSON","toggleLoaded","loaded","rotateColors","LightMode","localStorage","setItem","mounted","dimension","addEventListener","beforeDestroy","removeEventListener","class","background","oncontextmenu","direction","autocomplete","directives","rawName","expression","placeholder","input","target","composing","click","max","duration","dotSize","tooltip","val","model","callback","$$v"],"mappings":"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"}