var t=Object.defineProperty,e=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,i=(e,a,s)=>a in e?t(e,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[a]=s,o=(t,o)=>{for(var r in o||(o={}))a.call(o,r)&&i(t,r,o[r]);if(e)for(var r of e(o))s.call(o,r)&&i(t,r,o[r]);return t};import{d as r}from"./vendor.e9c367ae.js";import{b as n}from"./index.3d2ad359.js";import{g as l,U as c,B as h,n as u}from"./index.2deacc07.js";import{V as m}from"./VuePlotly.1b598568.js";import{H as d}from"./HTTPFileSystem.e57ad358.js";import{D as g}from"./DashboardDataManager.e0d06cdd.js";import{c as v}from"./ColorsAndWidths.e99b2bfb.js";import{m as f}from"./util.b5d45f97.js";import"./RoadNetworkLoader.worker.30fe4a65.js";import"./index.5877f313.js";import"./cubehelix.cc0b105a.js";import"./rainbow.63463756.js";const p=r({name:"PlotlyPlugin",components:{VuePlotly:m},i18n:{messages:{en:{total:"total",showChanges:"Only show changes"},de:{total:"Insgesamt",showChanges:"Nur Ã„nderungen zeigen"}}},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},config:{type:Object},datamanager:{type:Object},resize:Object,thumbnail:Boolean,yamlConfig:String},data(){return{globalState:l.state,vizDetails:{title:"",description:""},loadingText:"",jsonChart:{},id:`plotly-id-${Math.floor(1e12*Math.random())}`,traces:[],prevWidth:-1,prevHeight:-1,myDataManager:this.datamanager||new g(this.root,this.subfolder),layout:{margin:{t:8,b:0,l:0,r:0,pad:2},font:{color:"#444444",family:c},xaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:16},animate:!0,rangemode:"tozero"},legend:{orientation:"v",x:1,y:1}},options:{displaylogo:!1,responsive:!0,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"chart",width:null,height:null}}}},computed:{fileApi(){return new d(this.fileSystem,l)},fileSystem(){const t=this.$store.state.svnProjects.filter((t=>t.slug===this.root));if(0===t.length)throw console.log("no such project"),Error;return t[0]}},watch:{"globalState.resizeEvents"(){this.changeDimensions({})},resize(t){this.changeDimensions(t)},"globalState.isDarkMode"(){this.updateTheme()}},async mounted(){if(await this.getVizDetails(),!this.thumbnail){try{this.vizDetails.datasets&&await this.prepareData(),this.vizDetails.traces&&(this.traces=this.vizDetails.traces),this.vizDetails.layout&&this.mergeLayouts(),this.vizDetails.fixedRatio&&(this.vizDetails.layout.xaxis=Object.assign(this.vizDetails.layout.xaxis,{constrain:"domain"}),this.vizDetails.layout.yaxis=Object.assign(this.vizDetails.layout.yaxis,{constrain:"domain",scaleanchor:"x",scaleration:1})),this.vizDetails.dropdownMenu&&(this.vizDetails.interactive="dropdown"),this.vizDetails.interactive&&this.createMenus(this.vizDetails.interactive)}catch(t){const e=t;console.error({e:e}),this.loadingText=""+e}this.updateTheme(),window.addEventListener("resize",this.changeDimensions)}},beforeDestroy(){window.removeEventListener("resize",this.changeDimensions)},methods:{changeDimensions(t){(null==t?void 0:t.height)&&(null==t?void 0:t.width)&&(t.height===this.prevHeight&&t.width===this.prevWidth||(this.prevHeight=t.height,this.prevWidth=t.width,this.layout=Object.assign({},this.layout,t)))},mergeLayouts(){const t=o({},this.vizDetails.layout);t.margin=this.layout.margin,t.font=this.layout.font,t.legend=this.layout.legend,delete t.height,delete t.width,t.xaxis?(t.xaxis.automargin=!0,t.xaxis.autorange=!0,t.xaxis.animate=!0,t.xaxis.title||(t.xaxis.title=this.layout.xaxis.title)):t.xaxis=this.layout.xaxis,t.yaxis?(t.yaxis.automargin=!0,t.yaxis.autorange=!0,t.yaxis.animate=!0,t.yaxis.title||(t.yaxis.title=this.layout.yaxis.title)):t.yaxis=this.layout.yaxis,this.layout=t},createMenus(t){if("none"==t)return;const e=[],a={},s=Object.values(this.traces).length;Object.values(this.traces).forEach(((t,e)=>{"original_name"in t&&(t.name=t.original_name),t.group_name in a||(a[t.group_name]=[]),a[t.group_name].push(e),t.visible=!1})),Object.entries(a).forEach((t=>{const[a,i]=t,o=new Array(s);o.fill(!1);for(const e of i)o[e]=!0;e.push({method:"update",args:[{visible:o}],label:a})}));const i=Object.values(a)[0];for(const r of i)this.traces[r].visible=!0;const o=this.layout;if("dropdown"==t){const t=[{buttons:e,y:1,yanchor:"top"}];o.updatemenus=t}else if("slider"==t){const t=[{pad:{t:10},currentvalue:{visible:!1,xanchor:"left",prefix:""},steps:e}];o.sliders=t}},updateTheme(){const t={paper_bgcolor:h[this.globalState.colorScheme],plot_bgcolor:h[this.globalState.colorScheme],font:{color:this.globalState.isDarkMode?"#cccccc":"#444444"}};this.layout=Object.assign({},this.layout,t)},async getVizDetails(){var t;if(this.config)return this.vizDetails=Object.assign({},this.config),this.$emit("title",this.vizDetails.title||"Chart"),void(this.vizDetails.traces&&(this.traces=this.vizDetails.traces));this.loadingText="Loading config...";const e=null!=(t=this.yamlConfig)?t:"",a=e.indexOf("/")>-1?e:this.subfolder+"/"+e,s=await this.fileApi.getFileText(a),i=n.parse(s);this.vizDetails=i,this.vizDetails.title||(this.vizDetails.title="Chart"),this.$emit("title",this.vizDetails.title)},async prepareData(){await Promise.all(Object.entries(this.vizDetails.datasets).map((t=>{let[e,a]=t;return"string"==typeof a&&(a={file:a}),this.loadDataset(e,a)}))),this.vizDetails.mergeDatasets&&Object.values(this.vizDetails.datasets).length>1&&(this.vizDetails.datasets={dataset:{name:"dataset",file:"none",data:this.mergeDatasets(Object.values(this.vizDetails.datasets))}});const t=Object.values(this.vizDetails.datasets),e=[],a=this.getColors(this.vizDetails,this.vizDetails.traces.length);this.vizDetails.traces.forEach(((s,i)=>{let o=!1;t.forEach((t=>{var a;const i="$"+t.name;if(null==(a=s.name)?void 0:a.startsWith(i)){const a=s.name.replace(i+".",""),r=this.groupDataTable(t.data,a),n=Object.keys(r).length,l=this.getColors(s,n);Object.keys(r).forEach(((t,a)=>{const o=JSON.parse(JSON.stringify(s));o.name=t,o.group_name=t,this.recursiveCheckForTemplate(r[t],o,i),l&&("marker"in s||(o.marker={}),o.marker.color=l[a]),e.push(o)})),o=!0}else this.recursiveCheckForTemplate(t.data,s,i)})),o||(a&&("marker"in s||(s.marker={}),s.marker.color=a[i]),e.push(s))})),this.vizDetails.traces=e},async loadDataset(t,e){this.loadingText="Loading datasets...";const a=await this.myDataManager.getDataset({dataset:e.file},{highPrecision:!0});return e.data=a.allRows,e.name=t,this.vizDetails.datasets[t]=e,this.transformData(e),e},getColors(t,e){if("colorRamp"in t){const a="string"==typeof t.colorRamp?{ramp:t.colorRamp}:t.colorRamp;return v(a,e>=2?e:2)}return null},transformData(t){"pivot"in t&&this.pivot(t.name,t.data,t.pivot.exclude,t.pivot.valuesTo,t.pivot.namesTo),"aggregate"in t&&this.aggregateColumns(t.data,t.aggregate.groupBy,t.aggregate.target),"constant"in t&&Object.entries(t.constant).forEach((e=>{const[a,s]=e,i=new Array(Object.values(t.data)[0].values.length);i.fill(s),t.data[a]={name:a,values:i,type:1}}))},countOccurrences(t){let e={};return t.forEach((t=>{e[t]=e[t]?e[t]+1:1})),e},groupDataTable(t,e){let a={},s=t[e],i=this.countOccurrences(s.values);Object.entries(i).forEach((e=>{const[s,i]=e;let r={};Object.entries(t).forEach((t=>{const[e,a]=t;r[e]=o({},a);let s=Object.getPrototypeOf(a.values).constructor;r[e].values=new s(i)})),a[s]=r}));for(var r=0;r<t[e].values.length;r++){var n=t[e].values[r];let s=a[n],o=s[e].values.length-i[n]--;Object.entries(t).forEach((t=>{const[e,a]=t;s[e].values[o]=a.values[r]}))}return a},aggregateColumns(t,e,a){const s={},i=t[Object.keys(t)[0]].values.length;for(let r=0;r<i;r++){const i=e.reduce(((e,a)=>e+t[a].values[r]),"");i in s?s[i][a]+=t[a].values[r]:(s[i]=Object.fromEntries(e.map((e=>[e,t[e].values[r]]))),s[i][a]=t[a].values[r])}Object.keys(t).forEach((s=>{-1==e.indexOf(s)&&s!=a&&delete t[s]}));const o=Object.fromEntries([...e,a].map((t=>[t,[]])));Object.values(s).forEach((t=>{Object.entries(t).forEach((t=>{o[t[0]].push(t[1])}))})),Object.entries(o).forEach((e=>{t[e[0]].values=e[1]}))},pivot(t,e,a,s,i){const o=Object.keys(e).filter((t=>-1==a.indexOf(t)));a.forEach((a=>{a in e||l.commit("error",`Pivot column ${a} not in ${t}`)}));const r=Object.fromEntries(a.map((t=>[t,[]]))),n=[],c=[],h=e[Object.keys(e)[0]].values.length;for(let l=0;l<h;l++)o.forEach((t=>{a.forEach((t=>r[t].push(e[t].values[l]))),c.push(t),n.push(e[t].values[l])}));a.forEach((t=>{e[t].values=r[t]})),e[s]={name:s,values:n},e[i]={name:i,values:c}},mergeDatasets(t){const e={},a=t[0].data;return Object.keys(a).forEach((s=>{const i=t.map((t=>(s in t.data||l.commit("error",`Merged dataset ${t.name} does not contain column ${s}`),t.data[s].values)));let o;o=a[s].values instanceof Float32Array||a[s].values instanceof Float64Array?f(i):i.flat(),e[s]={name:s,type:a[s].type,values:o}})),e},recursiveCheckForTemplate(t,e,a){Object.entries(e).forEach((s=>{const[i,o]=s;if("string"==typeof o){if(o.includes(a)){const a=o.substring(o.indexOf(".")+1);a in t?this.vizDetails.multiIndex&&a in this.vizDetails.multiIndex?e[i]=[t[a].values,t[this.vizDetails.multiIndex[a]].values]:e[i]=t[a].values:l.commit("error",`Column "${a}" not in ${Object.keys(t)}`)}}else Array.isArray(o)?"object"==typeof o[0]&&o.forEach((e=>this.recursiveCheckForTemplate(t,e,a))):"object"==typeof o&&this.recursiveCheckForTemplate(t,o,a)}))}}});const y={};var b=u(p,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"mycomponent",class:{"is-thumbnail":t.thumbnail}},[a("VuePlotly",{staticClass:"myplot",attrs:{data:t.traces,layout:t.layout,options:t.options,id:t.id}})],1)}),[],!1,D,"9f4b194c",null,null);function D(t){for(let e in y)this[e]=y[e]}var x=r({name:"PlotlyDiagramPanel",components:{PlotlyDiagram:function(){return b.exports}()},data:()=>({resizeEvent:{}}),props:{fileSystemConfig:{type:Object,required:!0},subfolder:{type:String,required:!0},config:{type:Object,required:!0},cardId:String},mounted(){this.$emit("isLoaded"),this.$emit("dimension-resizer",{id:this.cardId,resizer:this.changeDimensions})},methods:{changeDimensions(t){this.resizeEvent=t}}});const j={};var O=u(x,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("plotly-diagram",{staticClass:"plotly-panel",attrs:{root:t.fileSystemConfig.slug,subfolder:t.subfolder,config:t.config,thumbnail:!1,resize:t.resizeEvent}})}),[],!1,z,"4d016750",null,null);function z(t){for(let e in j)this[e]=j[e]}var w=function(){return O.exports}();export{w as default};
//# sourceMappingURL=plotly.b7d6af64.js.map
