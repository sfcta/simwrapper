var e=Object.defineProperty,t=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,r=(t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s,o=(e,t)=>{for(var i in t||(t={}))n.call(t,i)&&r(e,i,t[i]);if(s)for(var i of s(t))a.call(t,i)&&r(e,i,t[i]);return e};import{d as c}from"./vendor.e9c367ae.js";import{t as l}from"./index.01e94811.js";import{n as d}from"./index.2deacc07.js";import{_ as u,p as g,C as p,a as m,b as h,c as f,M as y,G as v,l as b}from"./layer.b20bd88e.js";import{G as S}from"./index.84f8ccb6.js";import{v as T,f as P,I as E}from"./icon-manager.2c4c9b5c.js";import{L as I}from"./line-layer.600fa289.js";var x=c({name:"PlaybackControls",props:{isRunning:{type:Boolean,required:!0},timeStart:{type:Number,required:!0},timeEnd:{type:Number,required:!0},currentTime:{type:Number,required:!0}},data:()=>({pauseWhileDragging:!1,sliderValue:0,sliderOptions:{min:0,max:1e6,clickable:!1,duration:0,lazy:!0,tooltip:!0,"tooltip-placement":"top"}}),mounted(){this.sliderOptions["custom-formatter"]=e=>this.convertSecondsToClockTimeMinutes(e),window.addEventListener("keyup",this.onKeyPressed)},beforeDestroy(){window.removeEventListener("keyup",this.onKeyPressed)},watch:{currentTime(){this.sliderValue=1e6*(this.currentTime-this.timeStart)/(this.timeEnd-this.timeStart)}},methods:{toggleSimulation(){this.$emit("click")},convertSecondsToClockTimeMinutes(e){const t=this.getSecondsFromSlider(e);try{const e=l(t),i=("00"+e.minutes).slice(-2);return`${e.hours}:${i}`}catch(i){return"00:00"}},dragStart(){this.isRunning&&(this.pauseWhileDragging=!0,this.$emit("click"))},dragEnd(){this.pauseWhileDragging&&this.$emit("click"),this.pauseWhileDragging=!1},dragging(e){this.$emit("time",this.getSecondsFromSlider(e))},onKeyPressed(e){"Space"===e.code&&this.toggleSimulation()},getSecondsFromSlider(e){let t=(this.timeEnd-this.timeStart)*e/1e6;return t===this.timeEnd&&(t=this.timeEnd-1),t}}});const z={};var M=d(x,(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"slider-thingy"},[i("b-slider",e._b({staticClass:"slider",attrs:{size:"is-large"},on:{dragging:e.dragging,dragstart:e.dragStart,dragend:e.dragEnd},model:{value:e.sliderValue,callback:function(t){e.sliderValue=t},expression:"sliderValue"}},"b-slider",e.sliderOptions,!1)),i("div",{staticClass:"buttons"},[i("div",{staticClass:"playpause",on:{click:e.toggleSimulation}},[e.isRunning?i("i",{staticClass:"button-icon fa fa-1x fa-pause"}):i("i",{staticClass:"button-icon fa fa-1x fa-play"})])])],1)}),[],!1,C,"c58ebe1c",null,null);function C(e){for(let t in z)this[t]=z[t]}var O=function(){return M.exports}();const w=[255,255,255],F=1,A=[0,0,1],j=[0,0,1];let L=0;class k{constructor(e={}){u(this,"id",void 0),u(this,"color",void 0),u(this,"intensity",void 0),u(this,"type","point"),u(this,"position",void 0),u(this,"attenuation",void 0),u(this,"projectedLight",void 0);const{color:t=w}=e,{intensity:i=F}=e,{position:s=j}=e;this.id=e.id||"point-".concat(L++),this.color=t,this.intensity=i,this.type="point",this.position=s,this.attenuation=function(e){if(e.attenuation)return e.attenuation;if("intensity"in e)return[0,0,e.intensity||0];return A}(e),this.projectedLight=o({},this)}getProjectedLight({layer:e}){const{projectedLight:t}=this,i=e.context.viewport,{coordinateSystem:s,coordinateOrigin:n}=e.props,a=g(this.position,{viewport:i,coordinateSystem:s,coordinateOrigin:n,fromCoordinateSystem:i.isGeospatial?p.LNGLAT:p.CARTESIAN,fromCoordinateOrigin:[0,0,0]});return t.color=this.color,t.intensity=this.intensity,t.position=a,t}}const N=[0,0,0,255],_={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!1,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},iconStill:{type:"object",value:null},getIcon:{type:"accessor",value:e=>e.icon},getColor:{type:"accessor",value:N},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getPathStart:{type:"accessor",value:null},getPathEnd:{type:"accessor",value:null},getTimeStart:{type:"accessor",value:null},getTimeEnd:{type:"accessor",value:null},currentTime:{type:"number",value:0},pickable:{type:"boolean",value:!0},onIconError:{type:"function",value:null,compare:!1,optional:!0}};class D extends m{getShaders(){return super.getShaders({vs:T,fs:P,modules:[h,f]})}initializeState(){this.state={iconManager:new E(this.context.gl,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instanceTimestamps:{size:1,accessor:"getTimeStart"},instanceTimestampsNext:{size:1,accessor:"getTimeEnd"},instanceStartPositions:{size:2,accessor:"getPathStart"},instanceEndPositions:{size:2,accessor:"getPathEnd"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:S.UNSIGNED_BYTE,accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:S.UNSIGNED_BYTE,normalized:!0,transition:!0,accessor:"getColor",defaultValue:N},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState({oldProps:e,props:t,changeFlags:i}){var s;super.updateState({props:t,oldProps:e,changeFlags:i});const n=this.getAttributeManager(),{iconAtlas:a,iconMapping:r,data:o,getIcon:c}=t,{iconManager:l}=this.state;l.setProps({loadOptions:t.loadOptions});let d=!1;if(a||this.internalState.isAsyncPropLoading("iconAtlas")?(e.iconAtlas!==t.iconAtlas&&l.setProps({iconAtlas:a,autoPacking:!1}),e.iconMapping!==t.iconMapping&&(l.setProps({iconMapping:r}),d=!0)):l.setProps({autoPacking:!0}),(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getIcon))&&l.setProps({data:o,getIcon:c}),d&&(n.invalidate("instanceOffsets"),n.invalidate("instanceIconFrames"),n.invalidate("instanceColorModes")),i.extensionsChanged){const{gl:e}=this.context;null==(s=this.state.model)||s.delete(),this.state.model=this._getModel(e),n.invalidateAll()}}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(){super.finalizeState(),this.state.iconManager.finalize()}draw({uniforms:e}){const{sizeScale:t,sizeMinPixels:i,sizeMaxPixels:s,sizeUnits:n,billboard:a,alphaCutoff:r,currentTime:o,iconStill:c,pickable:l}=this.props,{iconManager:d}=this.state,{viewport:u}=this.context,g=d.getTexture();g&&this.state.model.setUniforms(e).setUniforms({iconsTexture:g,iconsTextureDim:[g.width,g.height],sizeScale:t*("pixels"===n?u.metersPerPixel:1),sizeMinPixels:i,sizeMaxPixels:s,billboard:a,alphaCutoff:r,currentTime:o,pickable:l,iconStillOffsets:this.getInstanceOffset(c),iconStillFrames:this.getInstanceIconFrame(c)}).draw()}_getModel(e){return new y(e,(s=o({},this.getShaders()),n={id:this.props.id,geometry:new v({drawMode:S.TRIANGLE_FAN,attributes:{positions:{size:2,value:new Float32Array([-1,-1,-1,1,1,1,1,-1])}}}),isInstanced:!0},t(s,i(n))));var s,n}_onUpdate(){this.setNeedsRedraw()}_onError(e){const{onIconError:t}=this.getCurrentLayer().props;t?t(e):b.error(e.error)()}getInstanceOffset(e){const t=this.state.iconManager.getIconMapping(e);return[t.width/2-t.anchorX||0,t.height/2-t.anchorY||0]}getInstanceColorMode(e){return this.state.iconManager.getIconMapping(e).mask?1:0}getInstanceIconFrame(e){const t=this.state.iconManager.getIconMapping(e);return[t.x||0,t.y||0,t.width||0,t.height||0]}}D.layerName="FlatIconLayer",D.defaultProps=_;class G extends I{getShaders(){const e=super.getShaders();return e.inject={"vs:#decl":"        attribute float timeStart;\n        attribute float timeEnd;\n        uniform float currentTime;\n        uniform float searchFlag;\n        varying float vTime;\n      ","vs:#main-start":"        if (searchFlag == 1.0) {\n          vTime = 999.0;\n        } else if(timeStart > currentTime || timeEnd < currentTime ) {\n          vTime = -1.0;\n          return;\n        } else {\n          float nearBeginning = currentTime - timeStart;\n          float nearEnd = timeEnd - currentTime;\n          vTime = min(nearBeginning, nearEnd);\n        }\n      ","fs:#decl":"        uniform float currentTime;\n        varying float vTime;\n        uniform float searchFlag;\n      ","fs:#main-start":"        if (searchFlag == 0.0 && vTime == -1.0 ) discard;\n      ","fs:DECKGL_FILTER_COLOR":"        if (searchFlag == 0.0 && vTime <= 10.0) color.a *= (vTime / 10.0);\n      "},e}initializeState(e){super.initializeState(e);this.getAttributeManager().addInstanced({timeStart:{size:1,accessor:"getTimeStart"},timeEnd:{size:1,accessor:"getTimeEnd"}})}draw(e){const{currentTime:t,searchFlag:i}=this.props;e.uniforms=Object.assign({},e.uniforms,{currentTime:t,searchFlag:i}),super.draw(e)}}G.layerName="PathTraceLayer",G.defaultProps={currentTime:{type:"number",value:0,min:0},getTimeStart:{type:"accessor",value:null},getTimeEnd:{type:"accessor",value:null},searchFlag:{type:"number",value:0}};export{D as I,k as P,G as a,O as b};
//# sourceMappingURL=PathTraceLayer.8ed3807c.js.map
