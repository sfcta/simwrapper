{"version":3,"file":"text.e8167404.js","sources":["../../src/dash-panels/text.vue","../../src/dash-panels/text.vue?vue&type=template&lang.js"],"sourcesContent":["<template lang=\"pug\">\r\n.curate-content.markdown(\r\n  v-if=\"readmeContent\"\r\n  v-html=\"readmeContent\"\r\n)\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport type { PropType } from 'vue'\r\nimport markdown from 'markdown-it'\r\n\r\nimport { FileSystemConfig } from '@/Globals'\r\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\r\n\r\nconst mdRenderer = new markdown({\r\n  html: true,\r\n  linkify: true,\r\n  typographer: true,\r\n})\r\n\r\nexport default defineComponent({\r\n  name: 'TextPanel',\r\n  props: {\r\n    fileSystemConfig: { type: Object as PropType<FileSystemConfig>, required: true },\r\n    subfolder: { type: String, required: true },\r\n    files: { type: Array, required: true },\r\n    config: { type: Object as any, required: true },\r\n  },\r\n  data: () => {\r\n    return {\r\n      readmeContent: '',\r\n    }\r\n  },\r\n  async mounted() {\r\n    try {\r\n      const fileApi = new HTTPFileSystem(this.fileSystemConfig)\r\n\r\n      const filename = `${this.subfolder}/${this.config.file}`\r\n      const text = await fileApi.getFileText(filename)\r\n      this.readmeContent = mdRenderer.render(text)\r\n    } catch (e: any) {\r\n      console.log({ e })\r\n      let error = '' + e\r\n      if (e.statusText) error = e.statusText\r\n\r\n      this.readmeContent = `${this.config.file}: ${error}`\r\n    }\r\n\r\n    this.$emit('isLoaded')\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\n.dash-element {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n@media only screen and (max-width: 640px) {\r\n}\r\n</style>\r\n","\r\n.curate-content.markdown(\r\n  v-if=\"readmeContent\"\r\n  v-html=\"readmeContent\"\r\n)\r\n\r\n"],"names":["mdRenderer","markdown","html","linkify","typographer","__vue2_script","defineComponent","name","props","fileSystemConfig","type","Object","required","subfolder","String","files","Array","config","data","readmeContent","mounted","fileApi","HTTPFileSystem","this","filename","file","text2","getFileText","render","e","console","log","error","statusText","$emit","_vm","_h","$createElement","_c","_self","staticClass","domProps","innerHTML","_s","_e"],"mappings":"0KAgBA,MAAAA,EAAA,IAAAC,EAAA,CACAC,MAAA,EACAC,SAAA,EACAC,aAAA,IAGA,IAAAC,EAAAC,EAAA,CACAC,KAAA,YACAC,MAAA,CACAC,iBAAA,CAAAC,KAAAC,OAAAC,UAAA,GACAC,UAAA,CAAAH,KAAAI,OAAAF,UAAA,GACAG,MAAA,CAAAL,KAAAM,MAAAJ,UAAA,GACAK,OAAA,CAAAP,KAAAC,OAAAC,UAAA,IAEAM,KAAA,KACA,CACAC,cAAA,KAAAC,gBAIA,IACA,MAAAC,EAAA,IAAAC,EAAAC,KAAAd,kBAEAe,EAAA,GAAAD,KAAAV,aAAAU,KAAAN,OAAAQ,OACAC,QAAAL,EAAAM,YAAAH,GACAD,KAAAJ,cAAAnB,EAAA4B,OAAAF,GAAA,MACAG,GACAC,QAAAC,IAAA,CAAAF,EAAAA,IACA,IAAAG,EAAA,GAAAH,EACAA,EAAAI,aAAAD,EAAAH,EAAAI,YAEAV,KAAAJ,cAAA,GAAAI,KAAAN,OAAAQ,SAAAO,IAGAT,KAAAW,MAAA,qCClDa,WACX,IAAIC,EAAIZ,KACJa,EAAGD,EAAIE,eACPC,EAAGH,EAAII,MAAMD,IAAIF,EAEd,OAAAD,EAAIhB,cAAgBmB,EAAG,MAAO,CACnCE,YAAa,0BACbC,SAAU,CACRC,UAAaP,EAAIQ,GAAGR,EAAIhB,kBAEvBgB,EAAIS,OAGW"}