{"version":3,"file":"DashBoard.61a0fedf.js","sources":["../../src/dash-panels/_allPanels.ts","../../src/layout-manager/DashBoard.vue","../../src/layout-manager/DashBoard.vue?vue&type=template&lang.js"],"sourcesContent":["import { AsyncComponent, defineAsyncComponent } from 'vue'\r\n\r\n// add every chart type here.\r\n// the name of the import will be the chart \"type\" in YAML.\r\n\r\n// resizable charts:\r\nexport const panelLookup: { [key: string]: AsyncComponent } = {\r\n  aggregate: defineAsyncComponent(() => import('./aggregate-od.vue')),\r\n  area: defineAsyncComponent(() => import('./area.vue')),\r\n  bar: defineAsyncComponent(() => import('./bar.vue')),\r\n  bubble: defineAsyncComponent(() => import('./bubble.vue')),\r\n  csv: defineAsyncComponent(() => import('./table.vue')),\r\n  heatmap: defineAsyncComponent(() => import('./heatmap.vue')),\r\n  hexagons: defineAsyncComponent(() => import('./hexagons.vue')),\r\n  line: defineAsyncComponent(() => import('./line.vue')),\r\n  pie: defineAsyncComponent(() => import('./pie.vue')),\r\n  plotly: defineAsyncComponent(() => import('./plotly.vue')),\r\n  sankey: defineAsyncComponent(() => import('./sankey.vue')),\r\n  scatter: defineAsyncComponent(() => import('./scatter.vue')),\r\n  slideshow: defineAsyncComponent(() => import('./slideshow.vue')),\r\n  text: defineAsyncComponent(() => import('./text.vue')),\r\n  tile: defineAsyncComponent(() => import('./tile.vue')),\r\n  transit: defineAsyncComponent(() => import('./transit.vue')),\r\n  vega: defineAsyncComponent(() => import('./vega.vue')),\r\n  video: defineAsyncComponent(() => import('./video.vue')),\r\n  xml: defineAsyncComponent(() => import('./xml.vue')),\r\n\r\n  // full-screen map visualizations:\r\n  carriers: defineAsyncComponent(() => import('./carriers.vue')),\r\n  flowmap: defineAsyncComponent(() => import('./flowmap.vue')),\r\n  links: defineAsyncComponent(() => import('./links.vue')),\r\n  map: defineAsyncComponent(() => import('./area-map.vue')),\r\n  xytime: defineAsyncComponent(() => import('./xytime.vue')),\r\n}\r\n\r\n// ----- EXPORT CHARTS HERE ---------------------------------------------------\r\n// export all resizable charts here\r\nexport const plotlyCharts = {\r\n  // aggregate,\r\n  // area,\r\n  // bar,\r\n  // bubble,\r\n  // csv,\r\n  // heatmap,\r\n  // hexagons,\r\n  // image: slideshow, // both 'image' and 'slideshow' types work for images\r\n  // line,\r\n  // markdown: text,\r\n  // pie,\r\n  // plotly,\r\n  // sankey,\r\n  // slideshow,\r\n  // text,\r\n  // tile,\r\n  // transit,\r\n  // scatter,\r\n  // vega,\r\n  // video,\r\n  // xml,\r\n  // xytime,\r\n}\r\n\r\n// export all remaining charts/maps here:\r\n// export default Object.assign({}, /*{ carriers, flowmap, links, map },*/ plotlyCharts)\r\n// export default { panelLookup }\r\n\r\n// ----- HELPER FUNCTIONS -----------------------------------------------------\r\n\r\nexport function buildCleanTitle(plotTitle: string, subfolder: string): string {\r\n  let title = plotTitle\r\n\r\n  if (subfolder) {\r\n    title = subfolder.substring(1 + subfolder.lastIndexOf('/')) + ' - ' + title\r\n  }\r\n\r\n  title = title.replaceAll('/', '-')\r\n  return title\r\n}\r\n","<template lang=\"pug\">\r\n.dashboard(:class=\"{wiide, 'is-panel-narrow': isPanelNarrow }\" :id=\"viewId\")\r\n  .dashboard-content(:class=\"{wiide}\" :style=\"dashWidthCalculator\")\r\n    .dashboard-header(v-if=\"!fullScreenCardId && (title + description)\"\r\n      :class=\"{wiide, 'is-panel-narrow': isPanelNarrow}\"\r\n    )\r\n      h2 {{ title }}\r\n      p {{ description }}\r\n\r\n    //- start row here\r\n    .dash-row(v-for=\"row,i in rows\" :key=\"i\" :class=\"getRowClass(row)\")\r\n\r\n      //- each card here\r\n      .dash-card-frame(v-for=\"card,j in row.cards\" :key=\"`${i}/${j}`\"\r\n        :style=\"getCardStyle(card)\"\r\n        :class=\"{wiide, 'is-panel-narrow': isPanelNarrow}\"\r\n      )\r\n\r\n        //- card header/title\r\n        .dash-card-headers(v-if=\"card.title + card.description\" :class=\"{'fullscreen': !!fullScreenCardId}\")\r\n          .header-labels\r\n            h3 {{ card.title }}\r\n            p(v-if=\"card.description\") {{ card.description }}\r\n\r\n          //- zoom button\r\n          .header-buttons\r\n            button.button.is-small.is-white(\r\n              v-if=\"card.info\"\r\n              @click=\"handleToggleInfoClick(card)\"\r\n              :title=\"infoToggle[card.id] ? 'Hide Info':'Show Info'\"\r\n            )\r\n              i.fa.fa-info-circle\r\n\r\n            button.button.is-small.is-white(\r\n              @click=\"toggleZoom(card)\"\r\n              :title=\"fullScreenCardId ? 'Restore':'Enlarge'\"\r\n            )\r\n              i.fa.fa-expand\r\n\r\n        // info contents\r\n        .info(v-show=\"infoToggle[card.id]\")\r\n          p\r\n          p {{ card.info }}\r\n\r\n\r\n        //- card contents\r\n        .spinner-box(v-if=\"getCardComponent(card)\" :id=\"card.id\" :class=\"{'is-loaded': card.isLoaded}\")\r\n\r\n          component.dash-card(\r\n            :is=\"getCardComponent(card)\"\r\n            :fileSystemConfig=\"fileSystemConfig\"\r\n            :subfolder=\"xsubfolder\"\r\n            :files=\"fileList\"\r\n            :yaml=\"card.props.configFile\"\r\n            :config=\"card.props\"\r\n            :datamanager=\"datamanager\"\r\n            :style=\"{opacity: opacity[card.id]}\"\r\n            :cardId=\"card.id\"\r\n            :cardTitle=\"card.title\"\r\n            :allConfigFiles=\"allConfigFiles\"\r\n            @isLoaded=\"handleCardIsLoaded(card)\"\r\n            @dimension-resizer=\"setDimensionResizer\"\r\n            @titles=\"setCardTitles(card, $event)\"\r\n          )\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue, { defineComponent } from 'vue'\r\nimport type { PropType } from 'vue'\r\n\r\nimport YAML from 'yaml'\r\n\r\nimport globalStore from '@/store'\r\nimport { FileSystemConfig, YamlConfigs } from '@/Globals'\r\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\r\n\r\nimport TopSheet from '@/components/TopSheet/TopSheet.vue'\r\n// import charts, { plotlyCharts } from '@/dash-panels/_allPanels'\r\n\r\nimport { panelLookup } from '@/dash-panels/_allPanels'\r\nimport DashboardDataManager from '@/js/DashboardDataManager'\r\n\r\n// append a prefix so the html template is legal\r\nconst namedCharts = {} as any\r\nconst chartTypes = Object.keys(panelLookup)\r\n// const plotlyChartTypes = {} as any\r\n\r\nchartTypes.forEach((key: any) => {\r\n  namedCharts[`card-${key}`] = panelLookup[key] // key // charts[key] as any\r\n  // //@ts-ignore\r\n  // if (plotlyCharts[key]) plotlyChartTypes[key] = true\r\n})\r\n\r\nexport default defineComponent({\r\n  name: 'Dashboard',\r\n  components: Object.assign({ TopSheet }, namedCharts),\r\n  props: {\r\n    root: { type: String, required: true },\r\n    xsubfolder: { type: String, required: true },\r\n    allConfigFiles: { type: Object as PropType<YamlConfigs>, required: true },\r\n    datamanager: { type: Object as PropType<DashboardDataManager>, required: true },\r\n    gist: Object as any,\r\n    config: Object as any,\r\n    zoomed: Boolean,\r\n  },\r\n  data: () => {\r\n    return {\r\n      title: '',\r\n      description: '',\r\n      viewId: 'dashboard-' + Math.floor(1e12 * Math.random()),\r\n      yaml: {} as any,\r\n      rows: [] as { id: string; cards: any[] }[],\r\n      fileList: [] as string[],\r\n      fileSystemConfig: {} as FileSystemConfig,\r\n      fullScreenCardId: '',\r\n      resizers: {} as { [id: string]: any },\r\n      infoToggle: {} as { [id: string]: boolean },\r\n      isResizing: false,\r\n      opacity: {} as any,\r\n      narrowPanelObserver: null as ResizeObserver | null,\r\n      isPanelNarrow: false,\r\n      numberOfShownCards: 1,\r\n    }\r\n  },\r\n  computed: {\r\n    dashWidthCalculator(): any {\r\n      if (this.$store.state.dashboardWidth && this.$store.state.isFullWidth) {\r\n        return { maxWidth: this.$store.state.dashboardWidth }\r\n      }\r\n      return {}\r\n    },\r\n    wiide(): boolean {\r\n      return this.$store.state.isFullWidth\r\n    },\r\n    fileApi(): HTTPFileSystem {\r\n      return new HTTPFileSystem(this.fileSystemConfig)\r\n    },\r\n  },\r\n  watch: {\r\n    async '$store.state.resizeEvents'() {\r\n      await this.$nextTick()\r\n      this.resizeAllCards()\r\n    },\r\n    '$store.state.locale'() {\r\n      this.updateThemeAndLabels()\r\n    },\r\n  },\r\n  methods: {\r\n    /**\r\n     * This only gets triggered when a topsheet has some titles.\r\n     * Remove the dashboard titles and use the ones from the topsheet.\r\n     */\r\n    setCardTitles(card: any, event: any) {\r\n      console.log(card, event)\r\n      card.title = event\r\n      card.description = ''\r\n    },\r\n\r\n    resizeAllCards() {\r\n      this.isResizing = true\r\n      for (const row of this.rows) {\r\n        for (const card of row.cards) {\r\n          this.updateDimensions(card.id)\r\n        }\r\n      }\r\n      this.isResizing = false\r\n    },\r\n\r\n    handleToggleInfoClick(card: any) {\r\n      this.infoToggle[card.id] = !this.infoToggle[card.id]\r\n    },\r\n\r\n    async getFiles() {\r\n      const folderContents = await this.fileApi.getDirectory(this.xsubfolder)\r\n\r\n      // hide dot folders\r\n      const files = folderContents.files.filter(f => !f.startsWith('.')).sort()\r\n      return files\r\n    },\r\n\r\n    getCardComponent(card: { type: string }) {\r\n      console.log(1, card)\r\n      if (card.type === 'table' || card.type === 'topsheet') return 'TopSheet'\r\n\r\n      // load the plugin\r\n      if (panelLookup[card.type]) {\r\n        return panelLookup[card.type]\r\n      }\r\n\r\n      // might be a chart\r\n      if (chartTypes.indexOf(card.type) > -1) return 'card-' + card.type\r\n\r\n      // or might be a vue component?\r\n      return undefined // card.type\r\n    },\r\n\r\n    setDimensionResizer(options: { id: string; resizer: any }) {\r\n      this.resizers[options.id] = options.resizer\r\n      this.updateDimensions(options.id)\r\n    },\r\n\r\n    async toggleZoom(card: any) {\r\n      if (this.fullScreenCardId) {\r\n        this.fullScreenCardId = ''\r\n      } else {\r\n        this.fullScreenCardId = card.id\r\n      }\r\n      this.$emit('zoom', this.fullScreenCardId)\r\n      // allow vue to resize everything\r\n      await this.$nextTick()\r\n      // tell plotly to resize everything\r\n      this.updateDimensions(card.id)\r\n    },\r\n\r\n    updateDimensions(cardId: string) {\r\n      const element = document.getElementById(cardId)\r\n\r\n      if (element) {\r\n        const dimensions = { width: element.clientWidth, height: element.clientHeight }\r\n        if (this.resizers[cardId]) this.resizers[cardId](dimensions)\r\n      }\r\n      if (!this.isResizing) globalStore.commit('resize')\r\n    },\r\n\r\n    getCardStyle(card: any) {\r\n      // figure out height. If card has registered a resizer with changeDimensions(),\r\n      // then it needs a default height (300)\r\n      const defaultHeight = 300 // plotlyChartTypes[card.type] ? 300 : undefined\r\n      const height = card.height ? card.height * 60 : defaultHeight\r\n\r\n      const flex = card.width || 1\r\n\r\n      let style: any = {\r\n        // margin: '2rem 1rem 2rem 0',\r\n        flex: flex,\r\n      }\r\n\r\n      if (height) {\r\n        style.minHeight = `${height}px`\r\n      }\r\n\r\n      if (this.fullScreenCardId) {\r\n        if (this.fullScreenCardId !== card.id) {\r\n          style.display = 'none'\r\n        } else {\r\n          style = {\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            margin: '18px 1rem 0.5rem 1rem',\r\n          }\r\n        }\r\n      }\r\n\r\n      return style\r\n    },\r\n\r\n    getFileSystem(name: string): FileSystemConfig {\r\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\r\n        (a: FileSystemConfig) => a.slug === name\r\n      )\r\n      if (svnProject.length === 0) throw Error('no such project')\r\n      return svnProject[0]\r\n    },\r\n\r\n    async setupDashboard() {\r\n      // Do we have config already or do we need to fetch it from the yaml file?\r\n      if (this.config) {\r\n        this.yaml = this.config\r\n      } else if (this.gist) {\r\n        this.yaml = this.gist\r\n      } else {\r\n        const yaml = await this.fileApi.getFileText(`${this.xsubfolder}/dashboard.yaml`)\r\n        this.yaml = YAML.parse(yaml)\r\n      }\r\n\r\n      // set header\r\n      this.updateThemeAndLabels()\r\n\r\n      // build rows\r\n      let numCard = 1\r\n\r\n      for (const rowId of Object.keys(this.yaml.layout)) {\r\n        let cards: any[] = this.yaml.layout[rowId]\r\n\r\n        // row must be an array - if it isn't, assume it is an array of length one\r\n        if (!cards.forEach) cards = [cards]\r\n\r\n        cards.forEach(card => {\r\n          card.id = `card-id-${numCard}`\r\n          card.isLoaded = false\r\n          card.number = numCard\r\n\r\n          // make YAML easier to write: merge \"props\" property with other properties\r\n          // so user doesn't need to specify \"props: {...}\"\r\n          if (!card.props) card.props = Object.assign({}, card)\r\n\r\n          // Vue 2 is weird about new properties: use Vue.set() instead\r\n          Vue.set(this.opacity, card.id, 0.5)\r\n          Vue.set(this.infoToggle, card.id, false)\r\n\r\n          // Card header could be hidden\r\n          if (!card.title && !card.description) card.showHeader = false\r\n          else card.showHeader = true\r\n\r\n          numCard++\r\n        })\r\n\r\n        this.rows.push({ id: rowId, cards })\r\n      }\r\n      this.$emit('layoutComplete')\r\n    },\r\n\r\n    updateThemeAndLabels() {\r\n      this.title = this.getDashboardLabel('title')\r\n      this.description = this.getDashboardLabel('description')\r\n\r\n      if (this.yaml.header.theme) {\r\n        this.$store.commit('setTheme', this.yaml.header.theme)\r\n      }\r\n    },\r\n    getDashboardLabel(element: 'title' | 'description') {\r\n      const header = this.yaml.header\r\n      let tag = '...'\r\n\r\n      if (this.$store.state.locale === 'de') {\r\n        tag = header[`${element}_de`] || header[`${element}`] || header[`${element}_en`] || ''\r\n      } else {\r\n        tag = header[`${element}_en`] || header[`${element}`] || header[`${element}_de`] || ''\r\n      }\r\n\r\n      return tag\r\n    },\r\n\r\n    async handleCardIsLoaded(card: any) {\r\n      card.isLoaded = true\r\n      this.opacity[card.id] = 1.0\r\n      this.numberOfShownCards++\r\n    },\r\n\r\n    setupNarrowPanelObserver() {\r\n      const dashboard = document.getElementById(this.viewId) as HTMLElement\r\n      this.narrowPanelObserver = new ResizeObserver(this.handleResize)\r\n      this.narrowPanelObserver.observe(dashboard)\r\n    },\r\n\r\n    handleResize() {\r\n      const dashboard = document.getElementById(this.viewId) as HTMLElement\r\n      if (dashboard) this.isPanelNarrow = dashboard.clientWidth < 800\r\n      this.$store.commit('resize')\r\n    },\r\n\r\n    getRowClass(row: any) {\r\n      const rowClass = { 'is-panel-narrow': this.isPanelNarrow } as any\r\n      rowClass[`row-${row.id}`] = true\r\n      return rowClass\r\n    },\r\n  },\r\n  async mounted() {\r\n    window.addEventListener('resize', this.resizeAllCards)\r\n    this.setupNarrowPanelObserver()\r\n\r\n    if (this.gist) {\r\n      this.fileSystemConfig = {\r\n        name: 'gist',\r\n        slug: 'gist',\r\n        description: 'From GitHub',\r\n        baseURL: this.gist.config.baseUrl,\r\n      }\r\n    } else {\r\n      this.fileSystemConfig = this.getFileSystem(this.root)\r\n    }\r\n\r\n    this.fileList = await this.getFiles()\r\n\r\n    await this.setupDashboard()\r\n    // await this.$nextTick()\r\n    this.resizeAllCards()\r\n  },\r\n  beforeDestroy() {\r\n    this.resizers = {}\r\n    window.removeEventListener('resize', this.resizeAllCards)\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\n.dashboard {\r\n  margin: 0 0;\r\n  padding: 1rem 0rem 1rem 1rem;\r\n\r\n  .dashboard-content {\r\n    max-width: $dashboardWidth;\r\n    margin: 0 auto 0 auto;\r\n  }\r\n\r\n  .dashboard-content.wiide {\r\n    max-width: unset;\r\n  }\r\n}\r\n\r\n.dashboard.wiide {\r\n  padding-left: 2rem;\r\n}\r\n\r\n.dashboard-header {\r\n  margin: 1rem 3rem 1rem 0rem;\r\n\r\n  h2 {\r\n    line-height: 3rem;\r\n  }\r\n}\r\n\r\n.dashboard-header.wiide {\r\n  margin-right: 3rem;\r\n}\r\n\r\n.dash-row {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.dash-card-frame {\r\n  display: grid;\r\n  grid-auto-columns: 1fr;\r\n  grid-auto-rows: auto auto 1fr;\r\n  margin: 2rem 2rem 2rem 0;\r\n\r\n  .dash-card-headers {\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-top: var(--borderDashboard);\r\n    padding-top: 0.1rem;\r\n  }\r\n\r\n  .dash-card-headers.fullscreen {\r\n    padding-top: 0;\r\n  }\r\n\r\n  .header-buttons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-left: auto;\r\n\r\n    button {\r\n      background-color: #00000000;\r\n      color: var(--link);\r\n      opacity: 0.5;\r\n    }\r\n    button:hover {\r\n      background-color: #ffffff20;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    grid-row: 1 / 2;\r\n    font-size: 1.2rem;\r\n    line-height: 1.5rem;\r\n    margin-top: 0.1rem;\r\n    margin-bottom: 0.5rem;\r\n    color: var(--link);\r\n  }\r\n\r\n  // if there is a description, fix the margins\r\n  p {\r\n    grid-row: 2 / 3;\r\n    margin-top: -0.5rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n\r\n  .spinner-box {\r\n    grid-row: 3 / 4;\r\n    position: relative;\r\n    background: url('../assets/simwrapper-logo/SW_logo_icon_anim.gif');\r\n    background-size: 8rem;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n  }\r\n\r\n  .spinner-box.is-loaded {\r\n    background: none;\r\n  }\r\n}\r\n\r\n.dash-card-frame.wiide {\r\n  margin-right: 2rem;\r\n}\r\n\r\n.dash-card {\r\n  transition: opacity 0.5s;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n}\r\n\r\n// Observe for narrowness instead of a media-query\r\n// since the panel might be narrow even if the window is wide.\r\n.dashboard.is-panel-narrow {\r\n  padding: 1rem 0rem 1rem 1rem;\r\n}\r\n\r\n.dashboard-header.is-panel-narrow {\r\n  margin: 1rem 1rem 1rem 0rem;\r\n}\r\n\r\n.dash-row.is-panel-narrow {\r\n  flex-direction: column;\r\n}\r\n\r\n.dash-card-frame.is-panel-narrow {\r\n  margin: 2rem 1rem 2rem 0;\r\n}\r\n</style>\r\n","\r\n.dashboard(:class=\"{wiide, 'is-panel-narrow': isPanelNarrow }\" :id=\"viewId\")\r\n  .dashboard-content(:class=\"{wiide}\" :style=\"dashWidthCalculator\")\r\n    .dashboard-header(v-if=\"!fullScreenCardId && (title + description)\"\r\n      :class=\"{wiide, 'is-panel-narrow': isPanelNarrow}\"\r\n    )\r\n      h2 {{ title }}\r\n      p {{ description }}\r\n\r\n    //- start row here\r\n    .dash-row(v-for=\"row,i in rows\" :key=\"i\" :class=\"getRowClass(row)\")\r\n\r\n      //- each card here\r\n      .dash-card-frame(v-for=\"card,j in row.cards\" :key=\"`${i}/${j}`\"\r\n        :style=\"getCardStyle(card)\"\r\n        :class=\"{wiide, 'is-panel-narrow': isPanelNarrow}\"\r\n      )\r\n\r\n        //- card header/title\r\n        .dash-card-headers(v-if=\"card.title + card.description\" :class=\"{'fullscreen': !!fullScreenCardId}\")\r\n          .header-labels\r\n            h3 {{ card.title }}\r\n            p(v-if=\"card.description\") {{ card.description }}\r\n\r\n          //- zoom button\r\n          .header-buttons\r\n            button.button.is-small.is-white(\r\n              v-if=\"card.info\"\r\n              @click=\"handleToggleInfoClick(card)\"\r\n              :title=\"infoToggle[card.id] ? 'Hide Info':'Show Info'\"\r\n            )\r\n              i.fa.fa-info-circle\r\n\r\n            button.button.is-small.is-white(\r\n              @click=\"toggleZoom(card)\"\r\n              :title=\"fullScreenCardId ? 'Restore':'Enlarge'\"\r\n            )\r\n              i.fa.fa-expand\r\n\r\n        // info contents\r\n        .info(v-show=\"infoToggle[card.id]\")\r\n          p\r\n          p {{ card.info }}\r\n\r\n\r\n        //- card contents\r\n        .spinner-box(v-if=\"getCardComponent(card)\" :id=\"card.id\" :class=\"{'is-loaded': card.isLoaded}\")\r\n\r\n          component.dash-card(\r\n            :is=\"getCardComponent(card)\"\r\n            :fileSystemConfig=\"fileSystemConfig\"\r\n            :subfolder=\"xsubfolder\"\r\n            :files=\"fileList\"\r\n            :yaml=\"card.props.configFile\"\r\n            :config=\"card.props\"\r\n            :datamanager=\"datamanager\"\r\n            :style=\"{opacity: opacity[card.id]}\"\r\n            :cardId=\"card.id\"\r\n            :cardTitle=\"card.title\"\r\n            :allConfigFiles=\"allConfigFiles\"\r\n            @isLoaded=\"handleCardIsLoaded(card)\"\r\n            @dimension-resizer=\"setDimensionResizer\"\r\n            @titles=\"setCardTitles(card, $event)\"\r\n          )\r\n\r\n"],"names":["panelLookup","aggregate","defineAsyncComponent","__vitePreload","import","area","bar","bubble","csv","heatmap","hexagons","line","pie","plotly","sankey","scatter","slideshow","text","tile","transit","vega","video","xml","carriers","flowmap","links","map","xytime","buildCleanTitle","plotTitle","subfolder","title","substring","lastIndexOf","replaceAll","namedCharts","chartTypes","Object","keys","forEach","key","__vue2_script","defineComponent","name","components","assign","TopSheet","props","root","type","String","required","xsubfolder","allConfigFiles","datamanager","gist","config","zoomed","Boolean","data","description","viewId","Math","floor","random","yaml","rows","fileList","fileSystemConfig","fullScreenCardId","resizers","infoToggle","isResizing","opacity","narrowPanelObserver","isPanelNarrow","numberOfShownCards","computed","dashWidthCalculator","this","$store","state","dashboardWidth","isFullWidth","maxWidth","wiide","fileApi","HTTPFileSystem","watch","$nextTick","resizeAllCards","updateThemeAndLabels","methods","setCardTitles","card","event","console","log","row","cards","updateDimensions","id","handleToggleInfoClick","getFiles","getDirectory","files","filter","f","startsWith","sort","getCardComponent","indexOf","setDimensionResizer","options","resizer","toggleZoom","$emit","cardId","element","document","getElementById","dimensions","width","clientWidth","height","clientHeight","globalStore","commit","getCardStyle","style","flex","minHeight","display","position","top","bottom","left","right","margin","getFileSystem","svnProject","svnProjects","a","slug","length","Error","setupDashboard","getFileText","YAML","parse","numCard","rowId","layout","isLoaded","number","Vue","set","showHeader","push","getDashboardLabel","header","theme","tag","locale","handleCardIsLoaded","setupNarrowPanelObserver","dashboard","ResizeObserver","handleResize","observe","getRowClass","rowClass","mounted","window","addEventListener","baseURL","baseUrl","beforeDestroy","removeEventListener","_vm","_h","$createElement","_c","_self","staticClass","class","attrs","_v","_s","_e","_l","i","j","fullscreen","info","on","click","$event","directives","rawName","value","expression","configFile","cardTitle","titles"],"mappings":"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"}