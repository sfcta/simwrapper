{"version":3,"file":"XmlViewer.42d8b3fb.js","sources":["../../src/plugins/xml-viewer/TreeItem.vue","../../src/plugins/xml-viewer/TreeItem.vue?vue&type=template&lang.js","../../src/plugins/xml-viewer/TreeView.vue","../../src/plugins/xml-viewer/TreeView.vue?vue&type=template&lang.js","../../src/plugins/xml-viewer/XmlViewer.vue","../../src/plugins/xml-viewer/XmlViewer.vue?vue&type=template&lang.js"],"sourcesContent":["<template lang=\"pug\">\r\nli\r\n  .leaf-node(@click=\"toggle\")\r\n    .leaf-nav-title\r\n      .toggle(v-if=\"children.length\")\r\n        i.fa(\r\n          :class=\"{'fa-plus-square': !isOpen, 'fa-minus-square': isOpen}\"\r\n          style=\"font-size: 0.7rem; margin: 5px 0 auto -8px;\"\r\n        )\r\n      b.leaf-label {{ elementId }}\r\n\r\n    .leaf-text(v-if=\"text\") &nbsp;&nbsp;{{ text }}\r\n\r\n    .leaf-attribute(v-for=\"attribute in attributes\")\r\n      span &nbsp;&nbsp;{{ attribute[0] }}:&nbsp;\r\n      b \"{{ attribute[1] }}\"\r\n\r\n  ul.children(v-if=\"isFolder && isOpen\")\r\n    tree-item.item(\r\n      v-for=\"(child, index) in children\"\r\n      :key=\"index\"\r\n      :item=\"child\"\r\n      :root=\"false\"\r\n      :expandAll=\"expandAll\"\r\n      :numberOfUnfoldLevel=\"numberOfUnfoldLevel\"\r\n      :level=\"level + 1\"\r\n      @navigate=\"$emit('navigate', $event)\"\r\n    )\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.component('tree-item', {\r\n  props: {\r\n    item: { type: Object, required: true },\r\n    expandAll: { type: Boolean },\r\n    level: { type: Number },\r\n    numberOfUnfoldLevel: { type: Number },\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: this.expandAll, // this.item.level < 2, // default to all-open\r\n      text: '',\r\n      elementId: '',\r\n      children: [] as any[],\r\n      attributes: [] as any[],\r\n    }\r\n  },\r\n  mounted() {\r\n    const thing = { ...this.item } as any // could be anything really!\r\n    this.attributes = this.getAttributes(thing)\r\n    delete thing[':@']\r\n\r\n    const keys = Object.keys(thing)\r\n    if (keys.length !== 1) {\r\n      console.log('WHAT', keys)\r\n    }\r\n\r\n    this.elementId = keys[0]\r\n    this.children = thing[keys[0]] || []\r\n\r\n    // figure out #text content\r\n    if (this.children.length === 1 && this.children[0]['#text']) {\r\n      this.text = this.children[0]['#text']\r\n      this.children = []\r\n    }\r\n\r\n    if (this.level < this.numberOfUnfoldLevel + 1) {\r\n      this.isOpen = true\r\n    } else {\r\n      this.isOpen = this.expandAll\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getAttributes(thing: any) {\r\n      // XML parser returns attributes in a ':@' object\r\n      const attr = thing[':@'] as any\r\n      if (!attr) return []\r\n\r\n      return Object.entries(attr).map(entry => {\r\n        const [k, v] = entry\r\n        const key = k.startsWith('$$') ? k.substring(2) : k\r\n        return [key, v]\r\n      })\r\n    },\r\n\r\n    toggle() {\r\n      this.isOpen = !this.isOpen\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    isFolder(): boolean {\r\n      return this.children.length > 0\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\nul {\r\n  list-style: none outside none;\r\n  margin-bottom: 0px;\r\n}\r\n\r\nli {\r\n  padding-left: 12px;\r\n  line-height: 1.2rem;\r\n}\r\n\r\n.item {\r\n  cursor: pointer;\r\n}\r\n\r\n.leaf-node {\r\n  display: flex;\r\n  // flex-direction: row;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.leaf-label:hover {\r\n  background-color: var(--bgHover);\r\n}\r\n\r\n.leaf-nav-title {\r\n  display: flex;\r\n  margin-right: 0px;\r\n}\r\n\r\n.leaf-text {\r\n  font-weight: bold;\r\n  font-style: italic;\r\n  color: var(--linkHover);\r\n}\r\n\r\n.leaf-label {\r\n  color: var(--link);\r\n  margin-left: 0.2rem;\r\n}\r\n\r\n.toggle {\r\n  margin-top: -1px;\r\n  color: var(--textPale);\r\n}\r\n\r\n.toggle:hover {\r\n  color: var(--textVeryPale);\r\n}\r\n</style>\r\n","\r\nli\r\n  .leaf-node(@click=\"toggle\")\r\n    .leaf-nav-title\r\n      .toggle(v-if=\"children.length\")\r\n        i.fa(\r\n          :class=\"{'fa-plus-square': !isOpen, 'fa-minus-square': isOpen}\"\r\n          style=\"font-size: 0.7rem; margin: 5px 0 auto -8px;\"\r\n        )\r\n      b.leaf-label {{ elementId }}\r\n\r\n    .leaf-text(v-if=\"text\") &nbsp;&nbsp;{{ text }}\r\n\r\n    .leaf-attribute(v-for=\"attribute in attributes\")\r\n      span &nbsp;&nbsp;{{ attribute[0] }}:&nbsp;\r\n      b \"{{ attribute[1] }}\"\r\n\r\n  ul.children(v-if=\"isFolder && isOpen\")\r\n    tree-item.item(\r\n      v-for=\"(child, index) in children\"\r\n      :key=\"index\"\r\n      :item=\"child\"\r\n      :root=\"false\"\r\n      :expandAll=\"expandAll\"\r\n      :numberOfUnfoldLevel=\"numberOfUnfoldLevel\"\r\n      :level=\"level + 1\"\r\n      @navigate=\"$emit('navigate', $event)\"\r\n    )\r\n\r\n","<template lang=\"pug\">\r\nul\r\n  tree-item.item(\r\n    :item=\"treeData || {}\"\r\n    :expandAll=\"expandAll\"\r\n    :level=\"level + 1\"\r\n    :numberOfUnfoldLevel=\"numberOfUnfoldLevel\"\r\n  )\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nimport TreeItem from './TreeItem.vue'\r\nimport { faLevelDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default Vue.component('tree-view', {\r\n  props: {\r\n    initialData: {},\r\n    expandAll: { type: Boolean },\r\n    level: { type: Number },\r\n    numberOfUnfoldLevel: { type: Number },\r\n  },\r\n  components: {\r\n    TreeItem,\r\n  },\r\n  data: function () {\r\n    return {\r\n      treeData: this.initialData,\r\n    }\r\n  },\r\n  methods: {},\r\n})\r\n</script>\r\n\r\n<style scoped></style>\r\n","\r\nul\r\n  tree-item.item(\r\n    :item=\"treeData || {}\"\r\n    :expandAll=\"expandAll\"\r\n    :level=\"level + 1\"\r\n    :numberOfUnfoldLevel=\"numberOfUnfoldLevel\"\r\n  )\r\n\r\n","<template lang=\"pug\">\r\n.mycomponent(:class=\"{'is-thumbnail': thumbnail}\")\r\n  b-input.searchbox(\r\n    type=\"search\"\r\n    icon-pack=\"fas\"\r\n    icon=\"search\"\r\n    placeholder=\"search...\"\r\n    v-model=\"searchTerm\"\r\n  )\r\n  .viewer\r\n    tree-view.things(v-if=\"isLoaded\"\r\n      :initialData=\"viewXml\"\r\n      :expandAll=\"isSearch\"\r\n      :level=\"1\"\r\n      :numberOfUnfoldLevel=\"numberOfUnfoldLevel\"\r\n    )\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nconst i18n = {\r\n  messages: {\r\n    en: {},\r\n    de: {},\r\n  },\r\n}\r\n\r\nimport { defineComponent } from 'vue'\r\nimport type { PropType } from 'vue'\r\nimport debounce from 'debounce'\r\n\r\nimport globalStore from '@/store'\r\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\r\nimport TreeView from './TreeView.vue'\r\nimport XmlWorker from '@/workers/NewXmlFetcher.worker?worker'\r\n\r\nimport { FileSystemConfig, UI_FONT, BG_COLOR_DASHBOARD } from '@/Globals'\r\n\r\n//@ts-ignore\r\nconst isChrome = !!window.showDirectoryPicker // Chrome has File Access API\r\nconst isFirefox = !isChrome\r\n\r\nconst MyComponent = defineComponent({\r\n  name: 'XmlViewer',\r\n  components: { TreeView },\r\n  i18n,\r\n  props: {\r\n    root: { type: String, required: true },\r\n    subfolder: { type: String, required: true },\r\n    config: { type: Object as any },\r\n    resize: Object as any,\r\n    thumbnail: Boolean,\r\n    yamlConfig: String,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      globalState: globalStore.state,\r\n      vizDetails: { title: '', description: '', file: '' },\r\n      loadingText: '',\r\n      id: `id-${Math.floor(1e12 * Math.random())}` as any,\r\n      xmlWorker: null as any,\r\n      viewXml: {} as any,\r\n      fullXml: null as any,\r\n      searchXml: null as any,\r\n      searchTerm: '',\r\n      debounceSearch: {} as any,\r\n      isLoaded: false,\r\n      isSearch: false,\r\n      numberOfUnfoldLevel: 1,\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    searchTerm() {\r\n      this.debounceSearch()\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    fileApi(): HTTPFileSystem {\r\n      return new HTTPFileSystem(this.fileSystem, globalStore)\r\n    },\r\n\r\n    fileSystem(): FileSystemConfig {\r\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\r\n        (a: FileSystemConfig) => a.slug === this.root\r\n      )\r\n      if (svnProject.length === 0) {\r\n        console.log('no such project')\r\n        throw Error\r\n      }\r\n      return svnProject[0]\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    this.debounceSearch = debounce(this.handleSearch, 500)\r\n\r\n    try {\r\n      await this.getVizDetails()\r\n      // only continue if we are on a real page and not the file browser\r\n      if (this.thumbnail) return\r\n\r\n      const answer = await this.fetchXml()\r\n\r\n      //TODO remove '?xml' correctly\r\n      this.fullXml = answer[1]\r\n\r\n      this.viewXml = this.fullXml\r\n      this.isLoaded = true\r\n    } catch (err) {\r\n      const e = err as any\r\n      console.error({ e })\r\n      this.loadingText = '' + e\r\n    }\r\n\r\n    this.numberOfUnfoldLevel = this.config.unfoldLevel + 1\r\n  },\r\n\r\n  methods: {\r\n    async getVizDetails() {\r\n      if (this.config) {\r\n        // config came in from the dashboard and is already parsed\r\n        this.vizDetails = { ...this.config }\r\n        this.vizDetails.file = `/${this.subfolder}/${this.config.file}`\r\n        this.$emit('title', this.vizDetails.title || this.vizDetails.file || 'XML')\r\n      } else {\r\n        // Otherwise this is an XML file\r\n        const filename = this.yamlConfig ?? ''\r\n        this.vizDetails = {\r\n          title: filename,\r\n          description: '',\r\n          file: this.subfolder + '/' + filename,\r\n        }\r\n      }\r\n      if (!this.vizDetails.title) this.vizDetails.title = 'XML'\r\n      this.$emit('title', this.vizDetails.title)\r\n    },\r\n\r\n    async fetchXml() {\r\n      this.loadingText = `Loading ${this.vizDetails.file}...`\r\n\r\n      if (this.xmlWorker) this.xmlWorker.terminate()\r\n      this.xmlWorker = new XmlWorker()\r\n\r\n      return new Promise<any>((resolve, reject) => {\r\n        this.xmlWorker.onmessage = (message: MessageEvent) => {\r\n          this.xmlWorker.terminate()\r\n\r\n          if (message.data.error) reject(message.data.error)\r\n          resolve(message.data.xml)\r\n        }\r\n\r\n        this.xmlWorker.postMessage({\r\n          id: 1,\r\n          fileSystem: this.fileSystem,\r\n          filePath: this.vizDetails.file,\r\n          options: {\r\n            ignoreAttributes: false,\r\n            preserveOrder: true,\r\n            attributeNamePrefix: '$$',\r\n            isFirefox,\r\n          },\r\n        })\r\n      })\r\n    },\r\n\r\n    async handleSearch() {\r\n      console.log('search:', this.searchTerm)\r\n\r\n      if (!this.searchTerm) {\r\n        // clear empty search\r\n        this.viewXml = this.fullXml\r\n        this.isSearch = false\r\n      } else {\r\n        const searchXML = this.findSearchTermInElement(\r\n          [this.fullXml],\r\n          this.searchTerm.toLocaleLowerCase()\r\n        )\r\n        this.viewXml = searchXML[0]\r\n        this.isSearch = true\r\n      }\r\n      this.isLoaded = false\r\n      await this.$nextTick()\r\n      this.isLoaded = true\r\n    },\r\n\r\n    findSearchTermInElement(element: any[], term: string): any[] {\r\n      if (term !== this.searchTerm.toLocaleLowerCase()) return []\r\n\r\n      const found = [] as any[]\r\n      for (const node of element) {\r\n        const items = { ...node }\r\n        // check attributes\r\n        if (items[':@']) {\r\n          const attributes = JSON.stringify(items[':@']).toLocaleLowerCase()\r\n          if (attributes.indexOf(term) > -1) {\r\n            found.push(node)\r\n            continue\r\n          }\r\n        }\r\n\r\n        // check #text\r\n        if (items['#text']) {\r\n          // convert to string!\r\n          if (`${items['#text']}`.toLocaleLowerCase().indexOf(term) > -1) {\r\n            found.push(node)\r\n          }\r\n          continue\r\n        }\r\n\r\n        // check children\r\n        const attr = items[':@']\r\n        delete items[':@']\r\n        const key = Object.keys(items)[0]\r\n        const children = items[key]\r\n        if (!children.length) continue\r\n\r\n        // recurse into kids:\r\n        const foundInChildren = this.findSearchTermInElement(children, term)\r\n        if (foundInChildren.length) {\r\n          const leaf = {} as any\r\n          if (attr) leaf[':@'] = attr\r\n          leaf[key] = foundInChildren\r\n          found.push(leaf)\r\n        }\r\n      }\r\n      return found\r\n    },\r\n  },\r\n})\r\n\r\nexport default MyComponent\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '@/styles.scss';\r\n\r\n.mycomponent {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  // margin: 1rem;\r\n}\r\n\r\n.mycomponent.is-thumbnail {\r\n  padding-top: 0;\r\n  height: $thumbnailHeight;\r\n}\r\n\r\n.viewer {\r\n  height: 100%;\r\n  width: 100%;\r\n  flex: 1;\r\n  margin: 0 auto;\r\n  overflow: auto;\r\n}\r\n\r\n.viewer.is-thumbnail {\r\n  padding: 0rem 0rem;\r\n  margin: 0 0;\r\n}\r\n\r\n.things {\r\n  background-color: var(--bgBold);\r\n  width: 100%;\r\n  padding: 0.25rem 0;\r\n}\r\n\r\n.searchbox {\r\n  padding: 1px 0px;\r\n}\r\n</style>\r\n","\r\n.mycomponent(:class=\"{'is-thumbnail': thumbnail}\")\r\n  b-input.searchbox(\r\n    type=\"search\"\r\n    icon-pack=\"fas\"\r\n    icon=\"search\"\r\n    placeholder=\"search...\"\r\n    v-model=\"searchTerm\"\r\n  )\r\n  .viewer\r\n    tree-view.things(v-if=\"isLoaded\"\r\n      :initialData=\"viewXml\"\r\n      :expandAll=\"isSearch\"\r\n      :level=\"1\"\r\n      :numberOfUnfoldLevel=\"numberOfUnfoldLevel\"\r\n    )\r\n\r\n"],"names":["__vue2_script$1","Vue","component","props","item","type","Object","required","expandAll","Boolean","level","Number","numberOfUnfoldLevel","data","isOpen","this","text","elementId","children","attributes","mounted","thing","__spreadValues","getAttributes","keys","length","console","log","methods","attr","entries","map","entry","k","v","startsWith","substring","toggle","computed","isFolder","_vm","_h","$createElement","_c","_self","staticClass","on","click","class","staticStyle","margin","_e","_v","_s","_l","attribute","child","index","key","attrs","root","navigate","$event","$emit","__vue2_script","initialData","components","TreeItem","treeData","isFirefox","window","showDirectoryPicker","MyComponent","defineComponent","name","TreeView","i18n","messages","en","de","String","subfolder","config","resize","thumbnail","yamlConfig","globalState","globalStore","state","vizDetails","title","description","file","loadingText","id","Math","floor","random","xmlWorker","viewXml","fullXml","searchXml","searchTerm","debounceSearch","isLoaded","isSearch","watch","fileApi","HTTPFileSystem","fileSystem","svnProject","$store","svnProjects","filter","a","slug","Error","debounce","handleSearch","getVizDetails","answer","fetchXml","err","e","error","unfoldLevel","filename","_a","terminate","XmlWorker","Promise","resolve","reject","onmessage","message","xml","postMessage","filePath","options","ignoreAttributes","preserveOrder","attributeNamePrefix","searchXML","findSearchTermInElement","toLocaleLowerCase","$nextTick","element","term","found","node","items","JSON","stringify","indexOf","push","foundInChildren","leaf","icon","placeholder","model","value","callback","$$v","expression"],"mappings":"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"}